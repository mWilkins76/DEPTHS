// Generated by Haxe 3.3.0
(function ($hx_exports, $global) { "use strict";
var $hxClasses = {};
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10?"0" + m:"" + m) + "-" + (d < 10?"0" + d:"" + d) + " " + (h < 10?"0" + h:"" + h) + ":" + (mi < 10?"0" + mi:"" + mi) + ":" + (s < 10?"0" + s:"" + s);
};
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d.setTime(0);
		d.setUTCHours(k[0]);
		d.setUTCMinutes(k[1]);
		d.setUTCSeconds(k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.exists = function(it,f) {
	var tmp = $iterator(it)();
	while(tmp.hasNext()) if(f(tmp.next())) {
		return true;
	}
	return false;
};
Lambda.foreach = function(it,f) {
	var tmp = $iterator(it)();
	while(tmp.hasNext()) if(!f(tmp.next())) {
		return false;
	}
	return true;
};
Lambda.filter = function(it,f) {
	var l = new List();
	var tmp = $iterator(it)();
	while(tmp.hasNext()) {
		var x = tmp.next();
		if(f(x)) {
			l.add(x);
		}
	}
	return l;
};
Lambda.fold = function(it,f,first) {
	var tmp = $iterator(it)();
	while(tmp.hasNext()) first = f(tmp.next(),first);
	return first;
};
Lambda.find = function(it,f) {
	var tmp = $iterator(it)();
	while(tmp.hasNext()) {
		var v = tmp.next();
		if(f(v)) {
			return v;
		}
	}
	return null;
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new _$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
Math.__name__ = ["Math"];
var Perf = $hx_exports["Perf"] = function(pos,offset) {
	if(offset == null) {
		offset = 0;
	}
	if(pos == null) {
		pos = "TR";
	}
	this._perfObj = window.performance;
	if(Reflect.field(this._perfObj,"memory") != null) {
		this._memoryObj = Reflect.field(this._perfObj,"memory");
	}
	this._memCheck = this._perfObj != null && this._memoryObj != null && this._memoryObj.totalJSHeapSize > 0;
	this._pos = pos;
	this._offset = offset;
	this.currentFps = 60;
	this.currentMs = 0;
	this.currentMem = "0";
	this.lowFps = 60;
	this.avgFps = 60;
	this._measureCount = 0;
	this._totalFps = 0;
	this._time = 0;
	this._ticks = 0;
	this._fpsMin = 60;
	this._fpsMax = 60;
	this._startTime = this._perfObj != null && ($_=this._perfObj,$bind($_,$_.now)) != null?this._perfObj.now():new Date().getTime();
	this._prevTime = -Perf.MEASUREMENT_INTERVAL;
	this._createFpsDom();
	this._createMsDom();
	if(this._memCheck) {
		this._createMemoryDom();
	}
	if(($_=window,$bind($_,$_.requestAnimationFrame)) != null) {
		this.RAF = ($_=window,$bind($_,$_.requestAnimationFrame));
	} else if(window.mozRequestAnimationFrame != null) {
		this.RAF = window.mozRequestAnimationFrame;
	} else if(window.webkitRequestAnimationFrame != null) {
		this.RAF = window.webkitRequestAnimationFrame;
	} else if(window.msRequestAnimationFrame != null) {
		this.RAF = window.msRequestAnimationFrame;
	}
	if(($_=window,$bind($_,$_.cancelAnimationFrame)) != null) {
		this.CAF = ($_=window,$bind($_,$_.cancelAnimationFrame));
	} else if(window.mozCancelAnimationFrame != null) {
		this.CAF = window.mozCancelAnimationFrame;
	} else if(window.webkitCancelAnimationFrame != null) {
		this.CAF = window.webkitCancelAnimationFrame;
	} else if(window.msCancelAnimationFrame != null) {
		this.CAF = window.msCancelAnimationFrame;
	}
	if(this.RAF != null) {
		this._raf = this.RAF.apply(window,[$bind(this,this._tick)]);
	}
};
$hxClasses["Perf"] = Perf;
Perf.__name__ = ["Perf"];
Perf.prototype = {
	_init: function() {
		this.currentFps = 60;
		this.currentMs = 0;
		this.currentMem = "0";
		this.lowFps = 60;
		this.avgFps = 60;
		this._measureCount = 0;
		this._totalFps = 0;
		this._time = 0;
		this._ticks = 0;
		this._fpsMin = 60;
		this._fpsMax = 60;
		this._startTime = this._perfObj != null && ($_=this._perfObj,$bind($_,$_.now)) != null?this._perfObj.now():new Date().getTime();
		this._prevTime = -Perf.MEASUREMENT_INTERVAL;
	}
	,_now: function() {
		if(this._perfObj != null && ($_=this._perfObj,$bind($_,$_.now)) != null) {
			return this._perfObj.now();
		} else {
			return new Date().getTime();
		}
	}
	,_tick: function(val) {
		var time = this._perfObj != null && ($_=this._perfObj,$bind($_,$_.now)) != null?this._perfObj.now():new Date().getTime();
		this._ticks++;
		if(this._raf != null && time > this._prevTime + Perf.MEASUREMENT_INTERVAL) {
			this.currentMs = Math.round(time - this._startTime);
			this.ms.innerHTML = "MS: " + this.currentMs;
			this.currentFps = Math.round(this._ticks * 1000 / (time - this._prevTime));
			if(this.currentFps > 0 && val > Perf.DELAY_TIME) {
				this._measureCount++;
				this._totalFps += this.currentFps;
				this.lowFps = this._fpsMin = Math.min(this._fpsMin,this.currentFps);
				this._fpsMax = Math.max(this._fpsMax,this.currentFps);
				this.avgFps = Math.round(this._totalFps / this._measureCount);
			}
			this.fps.innerHTML = "FPS: " + this.currentFps + " (" + this._fpsMin + "-" + this._fpsMax + ")";
			if(this.currentFps >= 30) {
				this.fps.style.backgroundColor = Perf.FPS_BG_CLR;
			} else if(this.currentFps >= 15) {
				this.fps.style.backgroundColor = Perf.FPS_WARN_BG_CLR;
			} else {
				this.fps.style.backgroundColor = Perf.FPS_PROB_BG_CLR;
			}
			this._prevTime = time;
			this._ticks = 0;
			if(this._memCheck) {
				this.currentMem = this._getFormattedSize(this._memoryObj.usedJSHeapSize,2);
				this.memory.innerHTML = "MEM: " + this.currentMem;
			}
		}
		this._startTime = time;
		if(this._raf != null) {
			this._raf = this.RAF.apply(window,[$bind(this,this._tick)]);
		}
	}
	,_createDiv: function(id,top) {
		if(top == null) {
			top = 0;
		}
		var div = window.document.createElement("div");
		div.id = id;
		div.className = id;
		div.style.position = "absolute";
		switch(this._pos) {
		case "BL":
			div.style.left = this._offset + "px";
			div.style.bottom = (this._memCheck?48:32) - top + "px";
			break;
		case "BR":
			div.style.right = this._offset + "px";
			div.style.bottom = (this._memCheck?48:32) - top + "px";
			break;
		case "TL":
			div.style.left = this._offset + "px";
			div.style.top = top + "px";
			break;
		case "TR":
			div.style.right = this._offset + "px";
			div.style.top = top + "px";
			break;
		}
		div.style.width = "80px";
		div.style.height = "12px";
		div.style.lineHeight = "12px";
		div.style.padding = "2px";
		div.style.fontFamily = Perf.FONT_FAMILY;
		div.style.fontSize = "9px";
		div.style.fontWeight = "bold";
		div.style.textAlign = "center";
		window.document.body.appendChild(div);
		return div;
	}
	,_createFpsDom: function() {
		this.fps = this._createDiv("fps");
		this.fps.style.backgroundColor = Perf.FPS_BG_CLR;
		this.fps.style.zIndex = "995";
		this.fps.style.color = Perf.FPS_TXT_CLR;
		this.fps.innerHTML = "FPS: 0";
	}
	,_createMsDom: function() {
		this.ms = this._createDiv("ms",16);
		this.ms.style.backgroundColor = Perf.MS_BG_CLR;
		this.ms.style.zIndex = "996";
		this.ms.style.color = Perf.MS_TXT_CLR;
		this.ms.innerHTML = "MS: 0";
	}
	,_createMemoryDom: function() {
		this.memory = this._createDiv("memory",32);
		this.memory.style.backgroundColor = Perf.MEM_BG_CLR;
		this.memory.style.color = Perf.MEM_TXT_CLR;
		this.memory.style.zIndex = "997";
		this.memory.innerHTML = "MEM: 0";
	}
	,_getFormattedSize: function(bytes,frac) {
		if(frac == null) {
			frac = 0;
		}
		var sizes = ["Bytes","KB","MB","GB","TB"];
		if(bytes == 0) {
			return "0";
		}
		var precision = Math.pow(10,frac);
		var i = Math.floor(Math.log(bytes) / Math.log(1024));
		return Math.round(bytes * precision / Math.pow(1024,i)) / precision + " " + sizes[i];
	}
	,addInfo: function(val) {
		this.info = this._createDiv("info",this._memCheck?48:32);
		this.info.style.backgroundColor = Perf.INFO_BG_CLR;
		this.info.style.color = Perf.INFO_TXT_CLR;
		this.info.style.zIndex = "998";
		this.info.innerHTML = val;
	}
	,clearInfo: function() {
		if(this.info != null) {
			window.document.body.removeChild(this.info);
			this.info = null;
		}
	}
	,destroy: function() {
		this.CAF.apply(window,[this._raf]);
		this._raf = null;
		this._perfObj = null;
		this._memoryObj = null;
		if(this.fps != null) {
			window.document.body.removeChild(this.fps);
			this.fps = null;
		}
		if(this.ms != null) {
			window.document.body.removeChild(this.ms);
			this.ms = null;
		}
		if(this.memory != null) {
			window.document.body.removeChild(this.memory);
			this.memory = null;
		}
		this.clearInfo();
		this.currentFps = 60;
		this.currentMs = 0;
		this.currentMem = "0";
		this.lowFps = 60;
		this.avgFps = 60;
		this._measureCount = 0;
		this._totalFps = 0;
		this._time = 0;
		this._ticks = 0;
		this._fpsMin = 60;
		this._fpsMax = 60;
		this._startTime = this._perfObj != null && ($_=this._perfObj,$bind($_,$_.now)) != null?this._perfObj.now():new Date().getTime();
		this._prevTime = -Perf.MEASUREMENT_INTERVAL;
	}
	,_cancelRAF: function() {
		this.CAF.apply(window,[this._raf]);
		this._raf = null;
	}
	,__class__: Perf
};
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
var _$UInt_UInt_$Impl_$ = {};
$hxClasses["_UInt.UInt_Impl_"] = _$UInt_UInt_$Impl_$;
_$UInt_UInt_$Impl_$.__name__ = ["_UInt","UInt_Impl_"];
_$UInt_UInt_$Impl_$.gt = function(a,b) {
	var aNeg = a < 0;
	if(aNeg != b < 0) {
		return aNeg;
	} else {
		return a > b;
	}
};
_$UInt_UInt_$Impl_$.gte = function(a,b) {
	var aNeg = a < 0;
	if(aNeg != b < 0) {
		return aNeg;
	} else {
		return a >= b;
	}
};
_$UInt_UInt_$Impl_$.toFloat = function(this1) {
	if(this1 < 0) {
		return 4294967296.0 + this1;
	} else {
		return this1 + 0.0;
	}
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = ["Xml"];
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + xml.nodeType);
	}
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	set: function(att,value) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			_this.setReserved(att,value);
		} else {
			_this.h[att] = value;
		}
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			return _this.existsReserved(att);
		} else {
			return _this.h.hasOwnProperty(att);
		}
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		if(x.parent != null) {
			x.parent.removeChild(x);
		}
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,__class__: Xml
};
var com_isartdigital_ruby_Main = function() {
	this.isAnimLoadingDone = false;
	this.isLogged = false;
	this.isLoaded = false;
	this.frame = 10;
	EventEmitter.call(this);
	var lOptions = { };
	lOptions.backgroundColor = 865633;
	com_isartdigital_utils_system_DeviceCapabilities.scaleViewport();
	this.renderer = PIXI.autoDetectRenderer(_$UInt_UInt_$Impl_$.toFloat(com_isartdigital_utils_system_DeviceCapabilities.get_width()),_$UInt_UInt_$Impl_$.toFloat(com_isartdigital_utils_system_DeviceCapabilities.get_height()),lOptions);
	window.document.body.appendChild(this.renderer.view);
	this.stage = new PIXI.Container();
	var lConfig = new PIXI.loaders.Loader();
	com_isartdigital_ruby_Main.configPath += "?" + new Date().getTime();
	lConfig.add(com_isartdigital_ruby_Main.configPath);
	lConfig.once("complete",$bind(this,this.preloadAssets));
	com_isartdigital_services_facebook_Facebook.onLogin = $bind(this,this.onLogin);
	com_isartdigital_services_facebook_Facebook.load("1007819322696165");
	lConfig.load();
};
$hxClasses["com.isartdigital.ruby.Main"] = com_isartdigital_ruby_Main;
com_isartdigital_ruby_Main.__name__ = ["com","isartdigital","ruby","Main"];
com_isartdigital_ruby_Main.main = function() {
	com_isartdigital_ruby_Main.getInstance();
};
com_isartdigital_ruby_Main.getInstance = function() {
	if(com_isartdigital_ruby_Main.instance == null) {
		com_isartdigital_ruby_Main.instance = new com_isartdigital_ruby_Main();
	}
	return com_isartdigital_ruby_Main.instance;
};
com_isartdigital_ruby_Main.importClasses = function() {
};
com_isartdigital_ruby_Main.__super__ = EventEmitter;
com_isartdigital_ruby_Main.prototype = $extend(EventEmitter.prototype,{
	preloadAssets: function(pLoader) {
		com_isartdigital_utils_Config.init(Reflect.field(pLoader.resources,com_isartdigital_ruby_Main.configPath).data);
		if(com_isartdigital_utils_Config.get_debug()) {
			com_isartdigital_utils_Debug.getInstance().init();
		}
		if(com_isartdigital_utils_Config.get_debug() && com_isartdigital_utils_Config.get_data().boxAlpha != null) {
			com_isartdigital_utils_game_StateGraphic.boxAlpha = com_isartdigital_utils_Config.get_data().boxAlpha;
		}
		if(com_isartdigital_utils_Config.get_debug() && com_isartdigital_utils_Config.get_data().animAlpha != null) {
			com_isartdigital_utils_game_StateGraphic.animAlpha = com_isartdigital_utils_Config.get_data().animAlpha;
		}
		com_isartdigital_utils_system_DeviceCapabilities.init(1,0.75,0.5);
		if(com_isartdigital_utils_system_DeviceCapabilities.get_system() == "Desktop") {
			com_isartdigital_utils_game_GameStage.getInstance().set_scaleMode(com_isartdigital_utils_game_GameStageScale.NO_SCALE);
			com_isartdigital_utils_system_DeviceCapabilities.textureRatio = 0.5;
			com_isartdigital_utils_system_DeviceCapabilities.textureType = "ld";
		} else {
			com_isartdigital_utils_game_GameStage.getInstance().set_scaleMode(com_isartdigital_utils_game_GameStageScale.SHOW_ALL);
		}
		com_isartdigital_utils_game_GameStage.getInstance().init($bind(this,this.render),2048,1366,false,false,true,true,true);
		this.stage.addChild(com_isartdigital_utils_game_GameStage.getInstance());
		window.addEventListener("resize",$bind(this,this.resize));
		this.resize();
		var lLoader = new com_isartdigital_utils_loader_GameLoader();
		lLoader.addAssetFile("ld/bulles/library.json");
		lLoader.addAssetFile("black_bg.png");
		lLoader.addAssetFile("preload.png");
		lLoader.addAssetFile("preload_bg.png");
		lLoader.addAssetFile("Curseur.png");
		lLoader.once("complete",$bind(this,this.loadAssets));
		lLoader.load();
		com_isartdigital_ruby_preloadgame_PreloadMiniGame.getInstance().start();
	}
	,loadAssets: function(pLoader) {
		var lLoader = new com_isartdigital_utils_loader_GameLoader();
		var regionsDestructiblesMax = com_isartdigital_ruby_game_sprites_elements_destructible_Destructible.totalConfig;
		lLoader.addTxtFile("../localization/localisation.json");
		lLoader.addTxtFile("boxes.json");
		lLoader.addTxtFile("pool.json");
		lLoader.addTxtFile("caracBuilding.json");
		lLoader.addTxtFile("descriptionAlien.json");
		lLoader.addTxtFile("Region.json");
		lLoader.addTxtFile("schemas.json");
		lLoader.addSoundFile("sounds.json");
		lLoader.addTxtFile("FTUE.json");
		lLoader.addTxtFile("Shop.json");
		lLoader.addTxtFile("BuildingMenuData.json");
		lLoader.addTxtFile("xenosCodex.json");
		lLoader.addTxtFile("../balance/alienBalance.json");
		lLoader.addTxtFile("missions.json");
		var _g1 = 1;
		while(_g1 < regionsDestructiblesMax) {
			var i = _g1++;
			lLoader.addTxtFile("RegionsJSON/Config" + i + ".json");
			com_isartdigital_ruby_game_sprites_elements_destructible_Destructible.arrayConfigDestructible.push("RegionsJSON/Config" + i + ".json");
		}
		var _g11 = 1;
		while(_g11 < 79) lLoader.addTxtFile("specialFeatureMaps/Map" + _g11++ + ".json");
		lLoader.addAssetFile("alpha_bg.png");
		lLoader.addAssetFile("sft.png");
		lLoader.addAssetFile("TitleCard_bg.png");
		lLoader.addAssetFile("Confirm.png");
		lLoader.addAssetFile("ftue_bg.png");
		lLoader.addAssetFile("ftue2_bg.png");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/placeholder/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/Buildings_Alien/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/Buildings_Drilling/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/Buildings_Urban/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/Buildings_Cosmetic/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/BuildingMenu/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/BuyRegion/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/TutoSpecialFeature/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/Aliens_Producers/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/Aliens_foreurs/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/BuildingContextualMenu/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/CentreForage/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/Codex/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/ItemAsset/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/TabAsset/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/Missionthumbnail/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/ConfirmationPose_02/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/Deplacement/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/Destruction/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/DailyReward/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/Enclos/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/Friendlist/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/HUD/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/Incubator/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/InfosBatiments/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/Shop/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/TeamSelect/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/TimeBased/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/TranslationCenter/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/XenoPage/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/XenosPanel/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/Background/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/Destructible/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/FTUE/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/Settings/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/PubImage/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/PubVideo/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/UpgradeCenter/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/YesNoPose/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/RewardNotification/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/WarFog/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/IsartPoints/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/RessourcesEffect/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/SpecialFeatureScreen/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/SpecialFeatureTiles/library.json");
		lLoader.addAssetFile(com_isartdigital_utils_system_DeviceCapabilities.textureType + "/SpecialFeatureAliens/library.json");
		lLoader.addAssetFile("particles/assets/bubble.png");
		lLoader.addAssetFile("particles/assets/smoke01.png");
		lLoader.addAssetFile("particles/assets/smoke02.png");
		lLoader.addAssetFile("particles/assets/smoke03.png");
		lLoader.addAssetFile("particles/assets/sparks1.png");
		lLoader.addAssetFile("particles/assets/sparks2.png");
		lLoader.addAssetFile("particles/assets/sparks3.png");
		lLoader.addAssetFile("particles/assets/bloc1.png");
		lLoader.addAssetFile("particles/assets/bloc2.png");
		lLoader.addAssetFile("particles/assets/bloc3.png");
		lLoader.addAssetFile("particles/assets/bloc4.png");
		lLoader.addAssetFile("particles/assets/stars1.png");
		lLoader.addAssetFile("particles/assets/stars2.png");
		lLoader.addAssetFile("particles/assets/stars3.png");
		lLoader.addTxtFile("particles/json/bubble.json");
		lLoader.addTxtFile("particles/json/smoke.json");
		lLoader.addTxtFile("particles/json/ressources.json");
		lLoader.addTxtFile("particles/json/bomb.json");
		lLoader.addTxtFile("particles/json/trail.json");
		lLoader.addTxtFile("particles/json/trail2.json");
		lLoader.addTxtFile("particles/json/trail3.json");
		lLoader.addTxtFile("particles/json/bubbleCircle.json");
		lLoader.addTxtFile("particles/json/dig.json");
		lLoader.addTxtFile("particles/json/starsTrail.json");
		lLoader.addTxtFile("particles/json/explosionStars.json");
		lLoader.addTxtFile("particles/json/explosionStars2.json");
		lLoader.addTxtFile("particles/json/destroy.json");
		lLoader.addFontFile("fonts.css");
		lLoader.on("progress",$bind(this,this.onLoadProgress));
		lLoader.once("complete",$bind(this,this.onLoadComplete));
		com_isartdigital_ruby_ui_UIManager.getInstance().openScreen(com_isartdigital_ruby_preloadgame_LoadingBar.getInstance());
		window.requestAnimationFrame($bind(this,this.gameLoop));
		lLoader.load();
	}
	,onLoadProgress: function(pLoader) {
		com_isartdigital_ruby_preloadgame_LoadingBar.getInstance().update(pLoader.progress);
	}
	,onLoadComplete: function(pLoader) {
		pLoader.off("progress",$bind(this,this.onLoadProgress));
		com_isartdigital_utils_game_StateGraphic.addBoxes(com_isartdigital_utils_loader_GameLoader.getContent("boxes.json"));
		com_isartdigital_utils_system_DeviceCapabilities.displayFullScreenButton();
		com_isartdigital_utils_system_Localization.init(com_isartdigital_utils_loader_GameLoader.getContent("../localization/localisation.json"),"fr");
		this.isLoaded = true;
		if(this.isLogged && this.isAnimLoadingDone) {
			this.launchGame();
		}
	}
	,verifyLaunch: function() {
		if(this.isLogged && this.isLoaded) {
			this.launchGame();
		}
	}
	,launchGame: function() {
		com_isartdigital_ruby_preloadgame_PreloadMiniGame.getInstance().destroy();
		com_isartdigital_ruby_ui_ftue_FTUEManager.init(com_isartdigital_utils_loader_GameLoader.getContent("FTUE.json"));
		com_isartdigital_ruby_ui_popin_shop_datas_ShopData.getInstance().init(com_isartdigital_utils_loader_GameLoader.getContent("Shop.json"));
		com_isartdigital_ruby_game_player_MissionsManager.getInstance().init(com_isartdigital_utils_loader_GameLoader.getContent("missions.json"));
		com_isartdigital_ruby_ui_popin_building_datas_BuildingMenuData.getInstance().init(com_isartdigital_utils_loader_GameLoader.getContent("BuildingMenuData.json"));
		com_isartdigital_services_deltaDNA_DeltaDNA.init("15182680138937855659639893914855","15182686734822464480389743914855","https://collect107252018r.deltadna.net/collect/api","https://engage107252018r.deltadna.net",Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id),Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id + Std.string(new Date().getTime())));
		this.sendEventConnect();
		com_isartdigital_ruby_game_GameManager.getInstance().start();
	}
	,sendEventConnect: function() {
		var lEvent = { eventName : "newPlayer", userID : com_isartdigital_ruby_game_player_Player.getInstance().idFb, sessionID : com_isartdigital_ruby_game_player_Player.getInstance().idFb + com_isartdigital_ruby_utils_TimeManager.getInstance().timeServer.getTime(), eventParams : { platform : "PC_CLIENT"}};
		var lRequest = new haxe_Http("https://collect107252018r.deltadna.net/collect/api/15182680138937855659639893914855");
		lRequest.addHeader("Content-Type","application/json");
		lRequest.setPostData(JSON.stringify(lEvent));
		lRequest.request(true);
		haxe_Log.trace("eventConnexionPlayer",{ fileName : "Main.hx", lineNumber : 470, className : "com.isartdigital.ruby.Main", methodName : "sendEventConnect"});
	}
	,onSaveLoaded: function() {
		this.isLogged = true;
		if(this.isLoaded) {
			com_isartdigital_ruby_preloadgame_PreloadMiniGame.getInstance().destroy();
			com_isartdigital_ruby_ui_ftue_FTUEManager.init(com_isartdigital_utils_loader_GameLoader.getContent("FTUE.json"));
			com_isartdigital_ruby_ui_popin_shop_datas_ShopData.getInstance().init(com_isartdigital_utils_loader_GameLoader.getContent("Shop.json"));
			com_isartdigital_ruby_ui_popin_building_datas_BuildingMenuData.getInstance().init(com_isartdigital_utils_loader_GameLoader.getContent("BuildingMenuData.json"));
			com_isartdigital_ruby_game_GameManager.getInstance().start();
		}
	}
	,onLogin: function() {
		com_isartdigital_services_facebook_Facebook.api(com_isartdigital_services_facebook_Facebook.uid + "?fields=first_name",$bind(this,this.callBackApi));
		com_isartdigital_services_facebook_Facebook.api(com_isartdigital_services_facebook_Facebook.uid + "?fields=email",$bind(this,this.callBackEmail));
		com_isartdigital_services_facebook_Facebook.api(com_isartdigital_services_facebook_Facebook.uid + "/friends",$bind(this,this.callBackFriends));
	}
	,callBackApi: function(pData) {
		if(pData == null) {
			haxe_Log.trace("erreur facebook.api",{ fileName : "Main.hx", lineNumber : 536, className : "com.isartdigital.ruby.Main", methodName : "callBackApi"});
		} else if(pData.error != null) {
			haxe_Log.trace(pData.error,{ fileName : "Main.hx", lineNumber : 537, className : "com.isartdigital.ruby.Main", methodName : "callBackApi"});
		} else {
			com_isartdigital_utils_save_DataBaseAction.getInstance().activeData = true;
			com_isartdigital_utils_save_DataBaseAction.getInstance().connexionPlayer(com_isartdigital_services_facebook_Facebook.uid,pData.first_name);
		}
	}
	,callBackEmail: function(pData) {
		if(pData == null) {
			haxe_Log.trace("erreur facebook.api email",{ fileName : "Main.hx", lineNumber : 547, className : "com.isartdigital.ruby.Main", methodName : "callBackEmail"});
		} else if(pData.error != null) {
			haxe_Log.trace(pData.error,{ fileName : "Main.hx", lineNumber : 548, className : "com.isartdigital.ruby.Main", methodName : "callBackEmail"});
		} else {
			com_isartdigital_ruby_game_player_Player.getInstance().set_email(Reflect.field(pData,"email"));
		}
	}
	,callBackFriends: function(pData) {
		if(pData == null) {
			haxe_Log.trace("erreur friends Api",{ fileName : "Main.hx", lineNumber : 556, className : "com.isartdigital.ruby.Main", methodName : "callBackFriends"});
		} else if(pData.error_message != null) {
			haxe_Log.trace(pData.error_message,{ fileName : "Main.hx", lineNumber : 557, className : "com.isartdigital.ruby.Main", methodName : "callBackFriends"});
		} else {
			var lArray = [];
			var lFriends = Reflect.field(pData,"data");
			var _g = 0;
			var _g1 = Reflect.fields(lFriends);
			while(_g < _g1.length) {
				var friend = _g1[_g];
				++_g;
				lArray.push(Reflect.field(Reflect.field(lFriends,friend),"id"));
			}
			var lFriendsID = JSON.stringify(lArray);
			com_isartdigital_utils_save_DataBaseAction.getInstance().getFriends(lFriendsID);
		}
	}
	,callBackUI: function(pData) {
		if(pData == null) {
			haxe_Log.trace("erreur facebook.ui",{ fileName : "Main.hx", lineNumber : 573, className : "com.isartdigital.ruby.Main", methodName : "callBackUI"});
		} else if(pData.error_message != null) {
			haxe_Log.trace(pData.error_message,{ fileName : "Main.hx", lineNumber : 574, className : "com.isartdigital.ruby.Main", methodName : "callBackUI"});
		} else {
			haxe_Log.trace(pData,{ fileName : "Main.hx", lineNumber : 577, className : "com.isartdigital.ruby.Main", methodName : "callBackUI"});
		}
	}
	,gameLoop: function(pID) {
		window.requestAnimationFrame($bind(this,this.gameLoop));
		this.render();
		this.emit("gameLoop");
	}
	,resize: function(pEvent) {
		this.renderer.resize(_$UInt_UInt_$Impl_$.toFloat(com_isartdigital_utils_system_DeviceCapabilities.get_width()),_$UInt_UInt_$Impl_$.toFloat(com_isartdigital_utils_system_DeviceCapabilities.get_height()));
		com_isartdigital_utils_game_GameStage.getInstance().resize();
	}
	,render: function() {
		if(this.frame++ % 2 == 0) {
			this.renderer.render(this.stage);
		} else {
			com_isartdigital_utils_game_GameStage.getInstance().updateTransform();
		}
	}
	,destroy: function() {
		window.removeEventListener("resize",$bind(this,this.resize));
		com_isartdigital_ruby_Main.instance = null;
	}
	,__class__: com_isartdigital_ruby_Main
});
var com_isartdigital_ruby_game_GameManager = function() {
	this.controller = js_Boot.__cast(com_isartdigital_utils_system_DeviceCapabilities.get_system() != "Desktop"?com_isartdigital_ruby_game_controller_TouchController.getInstance():com_isartdigital_ruby_game_controller_MouseController.getInstance() , com_isartdigital_ruby_game_controller_Controller);
	this.godMode = false;
};
$hxClasses["com.isartdigital.ruby.game.GameManager"] = com_isartdigital_ruby_game_GameManager;
com_isartdigital_ruby_game_GameManager.__name__ = ["com","isartdigital","ruby","game","GameManager"];
com_isartdigital_ruby_game_GameManager.getInstance = function() {
	if(com_isartdigital_ruby_game_GameManager.instance == null) {
		com_isartdigital_ruby_game_GameManager.instance = new com_isartdigital_ruby_game_GameManager();
	}
	return com_isartdigital_ruby_game_GameManager.instance;
};
com_isartdigital_ruby_game_GameManager.prototype = {
	start: function() {
		this.setModeNormal();
		com_isartdigital_services_deltaDNA_DeltaDNA.init("15182680138937855659639893914855","15182686734822464480389743914855","https://collect107252018r.deltadna.net/collect/api","https://engage107252018r.deltadna.net",Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id),Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id + Std.string(new Date().getTime())));
		com_isartdigital_utils_game_GameStage.getInstance().getGameContainer().addChild(com_isartdigital_ruby_game_world_UnlockButtonContainer.getInstance().getUnlockContainer());
		com_isartdigital_ruby_game_sprites_elements_GameElement.JSON_CONFIG = com_isartdigital_utils_loader_GameLoader.getContent("caracBuilding.json");
		com_isartdigital_ruby_ui_UIManager.getInstance().startGame();
		com_isartdigital_utils_game_iso_IsoManager.init(200,100);
		this.world = com_isartdigital_ruby_game_world_World.getInstance();
		com_isartdigital_utils_save_DataManager.getInstance().loadData();
		com_isartdigital_ruby_game_world_Region.sortAllContainer();
		if(com_isartdigital_utils_system_DeviceCapabilities.get_system() == "Desktop") {
			this.initDesktop();
		} else {
			this.initMobile();
		}
		com_isartdigital_ruby_utils_Focus.getInstance().position = new PIXI.Point(com_isartdigital_utils_game_GameStage.getInstance().getGameContainer().x,com_isartdigital_utils_game_GameStage.getInstance().getGameContainer().y + 1300.);
		com_isartdigital_utils_game_Camera.getInstance().setFocus(com_isartdigital_ruby_utils_Focus.getInstance());
		com_isartdigital_utils_game_Camera.getInstance().setTarget(com_isartdigital_utils_game_GameStage.getInstance().getInfoBulleContainer());
		com_isartdigital_utils_game_Camera.getInstance().setPosition();
		com_isartdigital_utils_game_pooling_PoolManager.init(com_isartdigital_utils_loader_GameLoader.getContent("pool.json"));
		com_isartdigital_utils_game_clipping_ClippingManager.getInstance().init(com_isartdigital_utils_system_DeviceCapabilities.getScreenRect(com_isartdigital_utils_game_GameStage.getInstance().getInfoBulleContainer()));
		com_isartdigital_ruby_game_player_MissionsManager.getInstance().init(com_isartdigital_utils_loader_GameLoader.getContent("missions.json"));
		var _g = 0;
		var _g1 = com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.alienPaddockList;
		while(_g < _g1.length) {
			var paddock = _g1[_g];
			++_g;
			(js_Boot.__cast(paddock.instance , com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock)).getBuildingOnAera(true);
		}
		com_isartdigital_ruby_Main.getInstance().on("gameLoop",$bind(this,this.gameLoop));
		if(com_isartdigital_ruby_game_player_Player.getInstance().ftueSteps < com_isartdigital_ruby_ui_ftue_FTUEManager.steps.length) {
			if(com_isartdigital_ruby_game_player_Player.getInstance().ftueSteps == 0) {
				com_isartdigital_ruby_ui_ftue_FTUEManager.nextStep();
			} else {
				com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep = com_isartdigital_ruby_game_player_Player.getInstance().ftueSteps + 1;
				com_isartdigital_ruby_ui_ftue_FTUEManager.nextStep();
			}
		}
		com_isartdigital_ruby_ui_CheatPanel.getInstance().ingame();
		com_isartdigital_ruby_game_controller_Controller.getInstance().init();
		var _g2 = 0;
		var _g11 = com_isartdigital_ruby_ui_UIManager.getInstance().regionPopins;
		while(_g2 < _g11.length) {
			var popin = _g11[_g2];
			++_g2;
			(js_Boot.__cast(popin , com_isartdigital_ruby_ui_popin_buyRegion_BuyRegion)).displayCost();
		}
		com_isartdigital_utils_sounds_SoundManager.getSound("soundAtmosphere").play();
	}
	,addAdsImage: function() {
		com_isartdigital_services_monetization_Ads.getImage($bind(this,this.callBackAd));
	}
	,callBackAd: function(pData) {
		if(pData == null) {
			haxe_Log.trace("erreur service",{ fileName : "GameManager.hx", lineNumber : 195, className : "com.isartdigital.ruby.game.GameManager", methodName : "callBackAd"});
		} else if(pData.error != null) {
			haxe_Log.trace(pData.error,{ fileName : "GameManager.hx", lineNumber : 196, className : "com.isartdigital.ruby.game.GameManager", methodName : "callBackAd"});
		} else {
			haxe_Log.trace(pData,{ fileName : "GameManager.hx", lineNumber : 197, className : "com.isartdigital.ruby.game.GameManager", methodName : "callBackAd"});
		}
	}
	,displayWallet: function() {
		com_isartdigital_services_monetization_Wallet.getMoney("coucou",$bind(this,this.callBackWallet));
	}
	,callBackWallet: function(pData) {
		if(pData == null) {
			haxe_Log.trace("erreur service",{ fileName : "GameManager.hx", lineNumber : 206, className : "com.isartdigital.ruby.game.GameManager", methodName : "callBackWallet"});
		} else if(pData.error != null) {
			haxe_Log.trace(pData.error,{ fileName : "GameManager.hx", lineNumber : 207, className : "com.isartdigital.ruby.game.GameManager", methodName : "callBackWallet"});
		} else {
			haxe_Log.trace(pData,{ fileName : "GameManager.hx", lineNumber : 208, className : "com.isartdigital.ruby.game.GameManager", methodName : "callBackWallet"});
		}
	}
	,displayAccount: function() {
		com_isartdigital_services_monetization_Bank.account($bind(this,this.callBackBank));
	}
	,callBackBank: function(pData) {
		if(pData == null) {
			haxe_Log.trace("erreur service",{ fileName : "GameManager.hx", lineNumber : 217, className : "com.isartdigital.ruby.game.GameManager", methodName : "callBackBank"});
		} else if(pData.error != null) {
			haxe_Log.trace(pData.error,{ fileName : "GameManager.hx", lineNumber : 218, className : "com.isartdigital.ruby.game.GameManager", methodName : "callBackBank"});
		} else {
			haxe_Log.trace(pData,{ fileName : "GameManager.hx", lineNumber : 219, className : "com.isartdigital.ruby.game.GameManager", methodName : "callBackBank"});
		}
	}
	,initDesktop: function() {
		com_isartdigital_ruby_game_controller_MouseController.getInstance().init();
	}
	,initMobile: function() {
		com_isartdigital_ruby_game_controller_TouchController.getInstance().init();
	}
	,testMap: function(pX,pY,pObject) {
		var lRegion = this.world.worldMap.h[pX].get(pY);
		var lLayer = lRegion.layers[0];
		var lBuilding;
		var lPoint;
		var _g1 = 0;
		var _g = lLayer.width;
		while(_g1 < _g) {
			var i = _g1++;
			var _g3 = 0;
			var _g2 = lLayer.width;
			while(_g3 < _g2) {
				var j = _g3++;
				lBuilding = new com_isartdigital_ruby_game_sprites_FlumpStateGraphic(pObject);
				lRegion = com_isartdigital_ruby_game_world_World.getInstance().getRegion(pX,pY);
				lPoint = new PIXI.Point(i,j);
				var lPoint2 = com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(lPoint);
				lBuilding.x = lPoint2.x;
				lBuilding.y = lPoint2.y;
				lBuilding.start();
				lRegion.regionContainer.addChild(lBuilding);
			}
		}
	}
	,gameLoop: function(pEvent) {
		com_isartdigital_ruby_game_controller_MouseController.getInstance().doAction();
		com_isartdigital_utils_game_clipping_ClippingManager.getInstance().clipping(com_isartdigital_utils_system_DeviceCapabilities.getScreenRect(com_isartdigital_utils_game_GameStage.getInstance().getGameContainer()));
		com_isartdigital_ruby_game_world_MapInteractor.getInstance().doAction();
		var _g = 0;
		var _g1 = com_isartdigital_ruby_ui_UIManager.getInstance().regionPopins;
		while(_g < _g1.length) {
			var popin = _g1[_g];
			++_g;
			(js_Boot.__cast(popin , com_isartdigital_ruby_ui_popin_buyRegion_BuyRegion)).tooltip.count();
		}
		com_isartdigital_utils_game_Camera.getInstance().move();
		com_isartdigital_ruby_ui_popin_TimeBased.getInstance().refreshText();
		com_isartdigital_ruby_utils_ColorFilterManager.getInstance().doAction();
		com_isartdigital_ruby_game_controller_Controller.getInstance().detectClicLength();
		var _g11 = 0;
		var _g2 = com_isartdigital_utils_game_pooling_PoolObject.activeObjectList.length;
		while(_g11 < _g2) {
			var i = _g11++;
			if(com_isartdigital_utils_game_pooling_PoolObject.activeObjectList[i] == null) {
				continue;
			}
			com_isartdigital_utils_game_pooling_PoolObject.activeObjectList[i].doAction();
		}
		var _g12 = 0;
		var _g3 = com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().activatedAlienList.length;
		while(_g12 < _g3) {
			var j = _g12++;
			if(com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().activatedAlienList[j] == null) {
				continue;
			}
			com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().activatedAlienList[j].doAction();
		}
		if(com_isartdigital_ruby_ui_popin_incubator_Inseminator.list.length > 0) {
			var _g4 = 0;
			var _g13 = com_isartdigital_ruby_ui_popin_incubator_Inseminator.list;
			while(_g4 < _g13.length) {
				var ins = _g13[_g4];
				++_g4;
				ins.doAction();
			}
		}
		if(com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.getInstance().schemaInDecryptMode.length > 0) {
			var _g5 = 0;
			var _g14 = com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.getInstance().schemaInDecryptMode;
			while(_g5 < _g14.length) {
				++_g5;
				com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.getInstance().doAction();
			}
		}
		com_isartdigital_ruby_utils_ParticleManager.getInstance().update();
		com_isartdigital_ruby_utils_SmartShaker.getInstance().doAction();
		if(com_isartdigital_ruby_ui_items_switchItems_SwitchItem.list != null) {
			var _g6 = 0;
			var _g15 = com_isartdigital_ruby_ui_items_switchItems_SwitchItem.list;
			while(_g6 < _g15.length) {
				var switchItem = _g15[_g6];
				++_g6;
				switchItem.setAsset();
			}
		}
		if(com_isartdigital_ruby_ui_specialButtons_SlotButton.list != null) {
			var _g7 = 0;
			var _g16 = com_isartdigital_ruby_ui_specialButtons_SlotButton.list;
			while(_g7 < _g16.length) {
				var slot = _g16[_g7];
				++_g7;
				slot.invisibleGreySquare();
				slot.setAsset();
			}
		}
	}
	,setModeNormal: function() {
		com_isartdigital_ruby_game_GameManager.currentMode = "Normal";
	}
	,setModeSpecial: function() {
		com_isartdigital_ruby_game_GameManager.currentMode = "Spécial";
	}
	,setModeFtue: function() {
		com_isartdigital_ruby_game_GameManager.currentMode = "FTUE";
	}
	,getCurrentMode: function() {
		return com_isartdigital_ruby_game_GameManager.currentMode;
	}
	,destroy: function() {
		com_isartdigital_ruby_Main.getInstance().off("gameLoop",$bind(this,this.gameLoop));
		com_isartdigital_ruby_game_GameManager.instance = null;
	}
	,__class__: com_isartdigital_ruby_game_GameManager
};
var com_isartdigital_ruby_game_Spawner = function(pAsset) {
	this.godMode = com_isartdigital_ruby_game_GameManager.getInstance().godMode;
	this.justMovingaBuilding = false;
	this.centerOfScreen = new PIXI.DisplayObject();
	this.isCameraUnlockingDone = true;
	this.isCameraLockingDone = true;
	this.isElementToSpawnFixed = false;
	this.isUnfixRequested = false;
	this.isPayingWithHC = false;
	PIXI.DisplayObject.call(this);
	this.currentRegion = com_isartdigital_ruby_game_world_World.getInstance().getRegion(0,0);
};
$hxClasses["com.isartdigital.ruby.game.Spawner"] = com_isartdigital_ruby_game_Spawner;
com_isartdigital_ruby_game_Spawner.__name__ = ["com","isartdigital","ruby","game","Spawner"];
com_isartdigital_ruby_game_Spawner.getInstance = function() {
	if(com_isartdigital_ruby_game_Spawner.instance == null) {
		com_isartdigital_ruby_game_Spawner.instance = new com_isartdigital_ruby_game_Spawner();
	}
	return com_isartdigital_ruby_game_Spawner.instance;
};
com_isartdigital_ruby_game_Spawner.__super__ = PIXI.DisplayObject;
com_isartdigital_ruby_game_Spawner.prototype = $extend(PIXI.DisplayObject.prototype,{
	doAction: function() {
		if(this.isElementToSpawnFixed) {
			this.fixedMode();
		} else {
			this.dragMode();
		}
	}
	,dragMode: function() {
		this.makeElementToSpawnFollowMouse();
		if(this.isNotObstructed()) {
			this.toSpawn.removeRedFilter();
		} else {
			this.toSpawn.applyRedFilter();
		}
		if(!this.isUnfixRequested) {
			if(com_isartdigital_ruby_game_controller_Controller.shortClic) {
				if(this.isNotObstructed()) {
					this.fixElementToSpawn();
				} else {
					this.launchObstructedFeedback();
				}
			}
		} else if(com_isartdigital_ruby_game_controller_Controller.shortClic) {
			this.isUnfixRequested = false;
		}
	}
	,fixedMode: function() {
		if(com_isartdigital_ruby_game_controller_Controller.shortClic) {
			com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerCrossV2").play();
			if(!com_isartdigital_ruby_ui_ftue_FTUEManager.isFTUEon()) {
				this.makeElementToSpawnFollowMouse();
				if(this.justMovingaBuilding) {
					this.openMovePopin();
				} else {
					this.openSpawnPopin();
				}
			}
			if(!this.isNotObstructed()) {
				this.launchObstructedFeedback();
				this.unfixElementToSpawn();
			}
		}
	}
	,fixElementToSpawn: function() {
		this.isElementToSpawnFixed = true;
		if(this.justMovingaBuilding) {
			this.openMovePopin();
		} else {
			this.openSpawnPopin();
		}
		this.toSpawn.alpha = 1;
		this.isCameraLockingDone = false;
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerCrossV2").play();
		this.currentAsset = this.toSpawn.CONSTRUCTING_STATE;
		this.toSpawn.changeAsset(this.currentAsset);
		this.toSpawn.on("mousedown",$bind(this,this.unfixElementToSpawn));
		this.toSpawn.on("touchstart",$bind(this,this.unfixElementToSpawn));
	}
	,unfixElementToSpawn: function() {
		this.isUnfixRequested = true;
		this.isElementToSpawnFixed = false;
		this.toSpawn.alpha = 0.5;
		this.isCameraLockingDone = false;
		com_isartdigital_ruby_ui_UIManager.getInstance().closeAllPopins();
		this.currentAsset = this.toSpawn.SPAWNING_STATE;
		this.toSpawn.changeAsset(this.currentAsset);
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerClic").play();
		this.toSpawn.off("mousedown",$bind(this,this.unfixElementToSpawn));
		this.toSpawn.off("touchstart",$bind(this,this.unfixElementToSpawn));
	}
	,setElementToSpawn: function(pElement) {
		if(this.toSpawn != null) {
			this.toSpawn.dispose();
		}
		this.toSpawn = js_Boot.__cast(com_isartdigital_utils_game_pooling_PoolManager.getFromPool(pElement) , com_isartdigital_ruby_game_sprites_elements_Building);
		if(this.canAffordIt()) {
			this.displayElementToSpawn();
		}
	}
	,placeFtue: function() {
		var lModelPoint = new PIXI.Point(10,10);
		this.toSpawn.changePosition(js_Boot.__cast(lModelPoint.x , Int),js_Boot.__cast(lModelPoint.y , Int));
		if(!this.isNotObstructed()) {
			lModelPoint = this.pointWhereThereIsRoom();
		}
		var lGlobalModelPoint = new PIXI.Point(0,0);
		lGlobalModelPoint.x = this.currentRegion.x * 26 + lModelPoint.x;
		lGlobalModelPoint.y = this.currentRegion.y * 26 + lModelPoint.y;
		this.setPosition(com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(lGlobalModelPoint));
		this.toSpawn.position = this.position;
		com_isartdigital_ruby_utils_Focus.getInstance().position = this.position;
		this.fixElementToSpawn();
	}
	,displayElementToSpawn: function() {
		com_isartdigital_ruby_ui_UIManager.getInstance().closeAllPopins();
		this.currentRegion = com_isartdigital_ruby_game_world_World.getInstance().getRegion(js_Boot.__cast(com_isartdigital_ruby_utils_Focus.getInstance().getRegionOn().x , Int),js_Boot.__cast(com_isartdigital_ruby_utils_Focus.getInstance().getRegionOn().y , Int));
		this.toSpawn.alpha = 0.5;
		this.currentAsset = this.toSpawn.SPAWNING_STATE;
		com_isartdigital_utils_game_GameStage.getInstance().getGameContainer().addChild(this.toSpawn);
		this.toSpawn.start();
		this.makeElementToSpawnFollowMouse();
		com_isartdigital_ruby_game_world_MapInteractor.getInstance().activateSpawner();
		this.checkForSpecialBehavior();
	}
	,openSpawnPopin: function() {
		var lCostSC = (js_Boot.__cast(this.toSpawn , com_isartdigital_ruby_game_sprites_elements_Building)).costSC;
		var lCostMN = (js_Boot.__cast(this.toSpawn , com_isartdigital_ruby_game_sprites_elements_Building)).costMN;
		var lCostHC = (js_Boot.__cast(this.toSpawn , com_isartdigital_ruby_game_sprites_elements_Building)).costHC;
		this.globalPosition = new PIXI.Point(0,0);
		this.globalPosition.x = this.currentRegion.x * 26 + this.toSpawn.colMin;
		this.globalPosition.y = this.currentRegion.y * 26 + this.toSpawn.rowMin;
		this.globalPosition = com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(this.globalPosition);
		this.toSpawn.globalPosition = this.globalPosition;
		com_isartdigital_ruby_ui_UIManager.getInstance().closeAllPopins();
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_ConfirmationPose.getInstance());
		com_isartdigital_ruby_ui_popin_ConfirmationPose.getInstance().set_target(js_Boot.__cast(this.toSpawn , com_isartdigital_ruby_game_sprites_elements_Building));
		com_isartdigital_ruby_ui_popin_ConfirmationPose.getInstance().init(this.toSpawn);
		com_isartdigital_ruby_ui_popin_ConfirmationPose.getInstance().updateValues(lCostSC,lCostMN,lCostHC);
	}
	,openMovePopin: function() {
		com_isartdigital_ruby_ui_UIManager.getInstance().closeAllPopins();
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_contextual_YesNoPose.getInstance());
		com_isartdigital_ruby_ui_popin_contextual_YesNoPose.getInstance().set_target(js_Boot.__cast(this.toSpawn , com_isartdigital_ruby_game_sprites_elements_Building));
	}
	,moveBuilding: function(pBuilding) {
		this.justMovingaBuilding = true;
		this.toSpawn = pBuilding;
		this.currentRegion = com_isartdigital_ruby_game_world_World.getInstance().getRegion(this.toSpawn.elem.regionX,this.toSpawn.elem.regionY);
		this.makeElementToSpawnFollowMouse();
		this.unfixElementToSpawn();
		this.checkForSpecialBehavior();
		com_isartdigital_utils_game_GameStage.getInstance().getGameContainer().addChild(this.toSpawn);
		this.toSpawn.position = this.position;
		com_isartdigital_ruby_game_world_MapInteractor.getInstance().activateSpawner();
	}
	,placeBuildingOnTheGround: function(isCanceled) {
		this.toSpawn.off("mousedown",$bind(this,this.unfixElementToSpawn));
		this.toSpawn.off("touchstart",$bind(this,this.unfixElementToSpawn));
		this.toSpawn.changeAsset(this.toSpawn.currentState);
		com_isartdigital_utils_game_GameStage.getInstance().getGameContainer().removeChild(this.toSpawn);
		if(isCanceled) {
			(js_Boot.__cast(this.toSpawn , com_isartdigital_ruby_game_sprites_elements_Building)).saveNewPosition(this.toSpawn.elem.x,this.toSpawn.elem.y,this.toSpawn.elem.regionX,this.toSpawn.elem.regionY);
		} else {
			(js_Boot.__cast(this.toSpawn , com_isartdigital_ruby_game_sprites_elements_Building)).saveNewPosition(this.toSpawn.colMin,this.toSpawn.rowMin);
		}
		this.justMovingaBuilding = false;
		this.toSpawn = null;
		com_isartdigital_ruby_game_world_MapInteractor.getInstance().deactivateSpawner();
		com_isartdigital_ruby_game_sprites_elements_Building.updateBuildingsCarac();
		com_isartdigital_ruby_ui_UIManager.getInstance().closeAllPopins();
	}
	,setSpawnerIsoPosition: function() {
		var lPosition = com_isartdigital_ruby_game_controller_Controller.getInstance().getPosFrom(com_isartdigital_utils_game_GameStage.getInstance().getGameContainer());
		var lCooRegion = com_isartdigital_ruby_game_controller_Controller.getInstance().getPosRegion();
		if(com_isartdigital_ruby_game_world_World.getInstance().getRegion(js_Boot.__cast(lCooRegion.x , Int),js_Boot.__cast(lCooRegion.y , Int)) == null) {
			return;
		}
		if(!com_isartdigital_ruby_game_world_World.getInstance().getRegion(js_Boot.__cast(lCooRegion.x , Int),js_Boot.__cast(lCooRegion.y , Int)).isActive) {
			return;
		}
		this.setPosition(com_isartdigital_utils_game_iso_IsoManager.localToIso(lPosition));
		var lRegion = com_isartdigital_ruby_game_world_World.getInstance().getRegion(js_Boot.__cast(lCooRegion.x , Int),js_Boot.__cast(lCooRegion.y , Int));
		if(lRegion == null) {
			return;
		}
		if(lRegion != this.currentRegion) {
			this.currentRegion = lRegion;
			this.checkForSpecialBehavior();
		}
	}
	,checkForSpecialBehavior: function() {
		if(js_Boot.__instanceof(this.toSpawn,com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanAntenna)) {
			var lHasLeveledPowerStation = false;
			var _g = 0;
			var _g1 = this.currentRegion.powerStationsInRegion;
			while(_g < _g1.length) {
				var station = _g1[_g];
				++_g;
				if(station.level == 2) {
					lHasLeveledPowerStation = true;
				}
			}
			if(lHasLeveledPowerStation) {
				this.toSpawn.level = 2;
			} else {
				this.toSpawn.level = 1;
			}
			this.toSpawn.changeAsset(this.currentAsset);
		}
	}
	,positionElementToSpawn: function() {
		this.toSpawn.changePosition(js_Boot.__cast(this.getPosInRegion().x , Int),js_Boot.__cast(this.getPosInRegion().y , Int));
		this.toSpawn.position = this.position;
		if(js_Boot.__instanceof(this.toSpawn,com_isartdigital_ruby_game_sprites_elements_Building)) {
			if((js_Boot.__cast(this.toSpawn , com_isartdigital_ruby_game_sprites_elements_Building)).timerContainer != null) {
				(js_Boot.__cast(this.toSpawn , com_isartdigital_ruby_game_sprites_elements_Building)).timerContainer.position = this.position;
			}
		}
		if(js_Boot.__instanceof(this.toSpawn,com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock)) {
			if((js_Boot.__cast(this.toSpawn , com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock)).timerContainer != null) {
				(js_Boot.__cast(this.toSpawn , com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock)).prodContainer.position = this.position;
			}
		}
	}
	,pointWhereThereIsRoom: function() {
		var _g = 0;
		while(_g < 26) {
			var x = _g++;
			var _g1 = 0;
			while(_g1 < 26) {
				var y = _g1++;
				this.toSpawn.changePosition(x,y);
				if(this.isNotObstructed()) {
					return new PIXI.Point(x,y);
				}
			}
		}
		return new PIXI.Point(10,10);
	}
	,getPosInRegion: function() {
		var lCoorInRegion = com_isartdigital_ruby_game_controller_Controller.getInstance().getPosFrom(this.currentRegion.layers[1].container);
		lCoorInRegion = com_isartdigital_utils_game_iso_IsoManager.localToModel(lCoorInRegion);
		return lCoorInRegion;
	}
	,isNotObstructed: function() {
		if(this.currentRegion.powerStationsInRegion.length > 0 && js_Boot.__instanceof(this.toSpawn,com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanPowerStation)) {
			if(this.justMovingaBuilding) {
				if(this.currentRegion != com_isartdigital_ruby_game_world_World.getInstance().getRegion(this.toSpawn.elem.regionX,this.toSpawn.elem.regionY)) {
					return false;
				}
			} else {
				return false;
			}
		}
		if(this.currentRegion.powerStationsInRegion.length <= 0 && js_Boot.__instanceof(this.toSpawn,com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanAntenna)) {
			return false;
		}
		return this.currentRegion.layers[1].canAdd(this.toSpawn);
	}
	,setPosition: function(pPosition) {
		this.position = pPosition;
	}
	,canAffordIt: function() {
		if(this.godMode) {
			return true;
		} else {
			var lHasEnoughEnergy = true;
			if(js_Boot.__instanceof(this.toSpawn,com_isartdigital_ruby_game_sprites_elements_Building) && !js_Boot.__instanceof(this.toSpawn,com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanAntenna) && !js_Boot.__instanceof(this.toSpawn,com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanPowerStation)) {
				lHasEnoughEnergy = com_isartdigital_ruby_game_player_Player.getInstance().hasEnoughEnergy((js_Boot.__cast(this.toSpawn , com_isartdigital_ruby_game_sprites_elements_Building)).energyCost);
			}
			if(!lHasEnoughEnergy) {
				com_isartdigital_ruby_ui_hud_Hud.getInstance().noEnergyAnimation();
				return false;
			}
			var lHasEnoughSC = com_isartdigital_ruby_game_player_Player.getInstance().hasEnoughQuantity((js_Boot.__cast(this.toSpawn , com_isartdigital_ruby_game_sprites_elements_Building)).costSC,com_isartdigital_ruby_game_player_Player.getInstance().softCurrency);
			var lHasEnoughMN = com_isartdigital_ruby_game_player_Player.getInstance().hasEnoughQuantity((js_Boot.__cast(this.toSpawn , com_isartdigital_ruby_game_sprites_elements_Building)).costMN,com_isartdigital_ruby_game_player_Player.getInstance().ressource);
			var lHasEnoughHC = com_isartdigital_ruby_game_player_Player.getInstance().hasEnoughQuantity((js_Boot.__cast(this.toSpawn , com_isartdigital_ruby_game_sprites_elements_Building)).costHC,com_isartdigital_ruby_game_player_Player.getInstance().hardCurrency);
			if((!lHasEnoughMN || !lHasEnoughSC) && !lHasEnoughHC) {
				if(!lHasEnoughMN) {
					com_isartdigital_ruby_ui_hud_Hud.getInstance().noMaterialAnimation();
				}
				if(!lHasEnoughSC) {
					com_isartdigital_ruby_ui_hud_Hud.getInstance().noSCAnimation();
				}
				return false;
			}
			if(lHasEnoughMN && lHasEnoughSC || lHasEnoughHC) {
				if(!lHasEnoughMN) {
					com_isartdigital_ruby_ui_popin_ConfirmationPose.getInstance().noMN = true;
				}
				if(!lHasEnoughHC) {
					com_isartdigital_ruby_ui_popin_ConfirmationPose.getInstance().noHC = true;
				}
				if(!lHasEnoughSC) {
					com_isartdigital_ruby_ui_popin_ConfirmationPose.getInstance().noSC = true;
				}
				return true;
			}
		}
		return false;
	}
	,cancel: function() {
		if(this.justMovingaBuilding) {
			this.placeBuildingOnTheGround(true);
		} else if(this.toSpawn != null) {
			this.toSpawn.dispose();
			this.toSpawn = null;
			com_isartdigital_ruby_game_world_MapInteractor.getInstance().deactivateSpawner();
			this.isElementToSpawnFixed = false;
		}
	}
	,drawIsoMargin: function(pGraphic,pGameObject) {
	}
	,onClick: function() {
		if(this.isNotObstructed()) {
			if(this.justMovingaBuilding) {
				this.placeBuildingOnTheGround();
			} else {
				this.spawnGameElement();
			}
			this.toSpawn = null;
			com_isartdigital_utils_save_DataManager.getInstance().save(com_isartdigital_utils_game_pooling_PoolObject.elementList);
			com_isartdigital_ruby_game_world_MapInteractor.getInstance().deactivateSpawner();
		}
	}
	,spawnGameElement: function() {
		var o = this.toSpawn;
		var lToSpawn = js_Boot.__cast(com_isartdigital_utils_game_pooling_PoolManager.getFromPool(Type.getClassName(o == null?null:js_Boot.getClass(o)).split(".").pop()) , com_isartdigital_ruby_game_sprites_elements_GameElement);
		if(!this.godMode) {
			if(!this.isPayingWithHC) {
				com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(-(js_Boot.__cast(lToSpawn , com_isartdigital_ruby_game_sprites_elements_Building)).costSC,"softCurrency",true);
				com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(-(js_Boot.__cast(lToSpawn , com_isartdigital_ruby_game_sprites_elements_Building)).costMN,"ressource",true);
			} else {
				com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(-(js_Boot.__cast(lToSpawn , com_isartdigital_ruby_game_sprites_elements_Building)).costHC,"hardCurrency",true);
			}
		}
		this.createNewGameElement(lToSpawn,this.toSpawn.colMin,this.toSpawn.rowMin);
		com_isartdigital_ruby_ui_UIManager.getInstance().closeAllPopins();
	}
	,launchObstructedFeedback: function() {
		var shakeParams = { originalPosition : this.toSpawn.position.clone(), smoothness : 5, amplitude : 10, duration : 40, xQuantity : 1.5, yQuantity : 0.5, fadeOut : 0.95, randomShake : true, sound : "no"};
		com_isartdigital_ruby_utils_SmartShaker.getInstance().SetShaker(this.toSpawn,shakeParams);
	}
	,createNewGameElement: function(pGameElem,pX,pY) {
		var lInstanceID = this.newID(pGameElem.name);
		pGameElem.position = com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(new PIXI.Point(pX,pY));
		var lElem = { instanceID : lInstanceID, type : pGameElem.name, width : pGameElem.width, height : pGameElem.height, x : pX, y : pY, globalX : this.globalPosition.x, globalY : this.globalPosition.y, regionX : this.currentRegion.x, regionY : this.currentRegion.y, layer : 1, levelUpGrade : this.toSpawn.level, mode : pGameElem.CONSTRUCTING_STATE};
		pGameElem.init(lElem);
		pGameElem.start();
		(js_Boot.__cast(pGameElem , com_isartdigital_ruby_game_sprites_elements_Building)).addEnergyToPlayer();
		if(js_Boot.__instanceof(pGameElem,com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer)) {
			(js_Boot.__cast(pGameElem , com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer)).increasePlayerMaxEnergy();
		}
		this.currentRegion.layers[1].add(pGameElem);
		this.currentRegion.layers[1].container.addChild(pGameElem);
		var _this = com_isartdigital_utils_game_pooling_PoolObject.elementList;
		if(__map_reserved[lInstanceID] != null) {
			_this.setReserved(lInstanceID,lElem);
		} else {
			_this.h[lInstanceID] = lElem;
		}
		com_isartdigital_utils_game_clipping_CellManager.getInstance().setCell(lElem);
		com_isartdigital_utils_save_DataManager.getInstance().save(com_isartdigital_utils_game_pooling_PoolObject.elementList);
		this.currentRegion.layers[1].container.children = com_isartdigital_utils_game_iso_IsoManager.sortTiles(this.currentRegion.layers[1].container.children);
		var lCost;
		var lMNCost = (js_Boot.__cast(pGameElem , com_isartdigital_ruby_game_sprites_elements_Building)).costMN;
		if(this.isPayingWithHC) {
			lCost = (js_Boot.__cast(pGameElem , com_isartdigital_ruby_game_sprites_elements_Building)).costHC;
		} else {
			lCost = (js_Boot.__cast(pGameElem , com_isartdigital_ruby_game_sprites_elements_Building)).costSC;
		}
		if(this.godMode) {
			lCost = 0;
			lMNCost = 0;
		}
		if(this.isPayingWithHC) {
			com_isartdigital_utils_save_DataBaseAction.getInstance().addBuildingAndChangeRessource(com_isartdigital_ruby_game_player_Player.getInstance().id,"hardCurrency",lCost,pGameElem.name,pGameElem.instanceID,this.currentRegion.x,this.currentRegion.y,pX,pY,this.globalPosition.x,this.globalPosition.y,1);
		} else {
			com_isartdigital_utils_save_DataBaseAction.getInstance().addBuildingAndChangeRessource(com_isartdigital_ruby_game_player_Player.getInstance().id,"softCurrency",lCost,pGameElem.name,pGameElem.instanceID,this.currentRegion.x,this.currentRegion.y,pX,pY,this.globalPosition.x,this.globalPosition.y,1,lMNCost);
		}
		com_isartdigital_utils_save_DataBaseAction.getInstance().changeBuildingLevel(lInstanceID,this.toSpawn.level);
		this.isPayingWithHC = false;
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerStartCreateBuilding").play();
		com_isartdigital_ruby_game_sprites_elements_Building.updateBuildingsCarac();
		this.cancel();
		this.spwanEffect(js_Boot.__cast(pGameElem , com_isartdigital_ruby_game_sprites_elements_Building));
	}
	,spwanEffect: function(pBuilding) {
		var lParticle = com_isartdigital_ruby_utils_ParticleManager.getInstance().createParticle("bubble",["bubble"],5000);
		var lSmoke = com_isartdigital_ruby_utils_ParticleManager.getInstance().createParticle("smoke",["smoke01","bubble","smoke03"],5000);
		lParticle.position = new PIXI.Point(pBuilding.position.x + pBuilding.width / 4,pBuilding.position.y + pBuilding.height / 4);
		lSmoke.position = new PIXI.Point(pBuilding.position.x + pBuilding.width / 4,pBuilding.position.y + pBuilding.height / 4);
		com_isartdigital_utils_game_GameStage.getInstance().getInfoBulleContainer().addChild(lParticle);
		com_isartdigital_utils_game_GameStage.getInstance().getInfoBulleContainer().addChild(lSmoke);
	}
	,newID: function(pType) {
		return pType + new Date().getTime();
	}
	,makeElementToSpawnFollowMouse: function() {
		this.setSpawnerIsoPosition();
		this.positionElementToSpawn();
	}
	,destroy: function() {
		com_isartdigital_ruby_game_Spawner.instance = null;
	}
	,__class__: com_isartdigital_ruby_game_Spawner
});
var com_isartdigital_ruby_game_controller_Controller = function() {
	this.alienContainer = com_isartdigital_utils_game_GameStage.getInstance().getAlienContainer();
	this.gameContainer = com_isartdigital_utils_game_GameStage.getInstance().getGameContainer();
	this.deltaY = 0;
	this.deltaX = 0;
	this.maxClic = 20;
	this.speed = 0.6;
	this.clamp = 50;
};
$hxClasses["com.isartdigital.ruby.game.controller.Controller"] = com_isartdigital_ruby_game_controller_Controller;
com_isartdigital_ruby_game_controller_Controller.__name__ = ["com","isartdigital","ruby","game","controller","Controller"];
com_isartdigital_ruby_game_controller_Controller.getInstance = function() {
	if(com_isartdigital_ruby_game_controller_Controller.instance == null) {
		com_isartdigital_ruby_game_controller_Controller.instance = new com_isartdigital_ruby_game_controller_Controller();
	}
	return com_isartdigital_ruby_game_controller_Controller.instance;
};
com_isartdigital_ruby_game_controller_Controller.prototype = {
	init: function() {
		this.gameContainer.interactive = true;
		this.gameContainer.buttonMode = true;
		this.gameContainer.defaultCursor = "url(assets/Curseur.png), auto";
		com_isartdigital_ruby_game_controller_Controller.isDown = false;
		com_isartdigital_ruby_game_controller_Controller.isIn = true;
	}
	,detectClicLength: function() {
		if(com_isartdigital_ruby_game_controller_Controller.isTap) {
			com_isartdigital_ruby_game_controller_Controller.clicCounter++;
		}
		if(com_isartdigital_ruby_ui_popin_building_BuildingMenu.getInstance().isOpened) {
			com_isartdigital_ruby_game_controller_Controller.clicCounter = this.maxClic;
		}
		if(com_isartdigital_ruby_game_controller_Controller.shortClic) {
			com_isartdigital_ruby_game_controller_Controller.shortClic = false;
		}
	}
	,onTap: function() {
		com_isartdigital_ruby_game_controller_Controller.isTap = true;
		com_isartdigital_ruby_game_controller_Controller.isUp = false;
		com_isartdigital_ruby_game_controller_Controller.clicCounter = 0;
		com_isartdigital_ruby_game_controller_Controller.shortClic = false;
	}
	,onUntap: function() {
		if(com_isartdigital_ruby_game_controller_Controller.clicCounter < this.maxClic) {
			com_isartdigital_ruby_game_controller_Controller.shortClic = true;
		}
		com_isartdigital_ruby_game_controller_Controller.isUp = true;
		com_isartdigital_ruby_game_controller_Controller.isTap = false;
	}
	,onDown: function(pEvent) {
		com_isartdigital_ruby_game_controller_Controller.isDown = true;
		this.oldPos = this.getPosFrom(com_isartdigital_utils_game_GameStage.getInstance(),pEvent);
	}
	,onOut: function() {
		com_isartdigital_ruby_game_controller_Controller.isDown = false;
		com_isartdigital_ruby_game_controller_Controller.isIn = false;
	}
	,onOver: function() {
		com_isartdigital_ruby_game_controller_Controller.isIn = true;
	}
	,onUp: function() {
		com_isartdigital_ruby_game_controller_Controller.isDown = false;
	}
	,onMove: function(pEvent) {
		if(com_isartdigital_ruby_game_controller_Controller.isDown) {
			com_isartdigital_ruby_game_controller_Controller.isMoving = true;
			var currentPos = this.getPosFrom(com_isartdigital_utils_game_GameStage.getInstance(),pEvent);
			this.deltaX = (this.oldPos.x - currentPos.x) * this.speed;
			this.deltaY = (this.oldPos.y - currentPos.y) * this.speed;
			com_isartdigital_ruby_utils_Focus.getInstance();
			if(Math.abs(this.deltaX) > this.clamp) {
				Math.abs(this.deltaX);
			}
			com_isartdigital_ruby_utils_Focus.getInstance();
			if(Math.abs(this.deltaY) > this.clamp) {
				Math.abs(this.deltaY);
			}
			com_isartdigital_ruby_utils_Focus.getInstance().toMove(new PIXI.Point(this.deltaX,this.deltaY));
			this.oldPos = currentPos;
		} else {
			this.deltaX = 0;
			this.deltaY = 0;
			com_isartdigital_ruby_game_controller_Controller.isMoving = false;
		}
	}
	,getMouseRegion: function() {
		return com_isartdigital_ruby_game_world_World.getInstance().getRegion(js_Boot.__cast(this.getPosRegion().x , Int),js_Boot.__cast(this.getPosRegion().y , Int));
	}
	,getPosFrom: function(pContainer,pEvent) {
		return new PIXI.Point((js_Boot.__cast(com_isartdigital_ruby_Main.getInstance().renderer.plugins.interaction , PIXI.interaction.InteractionManager)).mouse.getLocalPosition(pContainer).x,(js_Boot.__cast(com_isartdigital_ruby_Main.getInstance().renderer.plugins.interaction , PIXI.interaction.InteractionManager)).mouse.getLocalPosition(pContainer).y);
	}
	,getIsoPosFrom: function(pContainer) {
		return com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(this.getPosFrom(pContainer));
	}
	,getPosRegion: function() {
		var lPoint = com_isartdigital_utils_game_iso_IsoManager.localToModel(this.getPosFrom(this.gameContainer));
		lPoint.x /= 26;
		lPoint.y /= 26;
		lPoint.x = Math.floor(lPoint.x);
		lPoint.y = Math.floor(lPoint.y);
		return lPoint;
	}
	,doAction: function() {
	}
	,__class__: com_isartdigital_ruby_game_controller_Controller
};
var com_isartdigital_ruby_game_controller_MouseController = function() {
	com_isartdigital_ruby_game_controller_Controller.call(this);
};
$hxClasses["com.isartdigital.ruby.game.controller.MouseController"] = com_isartdigital_ruby_game_controller_MouseController;
com_isartdigital_ruby_game_controller_MouseController.__name__ = ["com","isartdigital","ruby","game","controller","MouseController"];
com_isartdigital_ruby_game_controller_MouseController.getInstance = function() {
	if(com_isartdigital_ruby_game_controller_MouseController.instance == null) {
		com_isartdigital_ruby_game_controller_MouseController.instance = new com_isartdigital_ruby_game_controller_MouseController();
	}
	return com_isartdigital_ruby_game_controller_MouseController.instance;
};
com_isartdigital_ruby_game_controller_MouseController.__super__ = com_isartdigital_ruby_game_controller_Controller;
com_isartdigital_ruby_game_controller_MouseController.prototype = $extend(com_isartdigital_ruby_game_controller_Controller.prototype,{
	init: function() {
		com_isartdigital_ruby_game_controller_Controller.prototype.init.call(this);
		this.gameContainer.on("mousedown",$bind(this,this.onTap));
		this.alienContainer.on("mousedown",$bind(this,this.onTap));
		this.gameContainer.on("mouseup",$bind(this,this.onUntap));
		this.alienContainer.on("mouseup",$bind(this,this.onUntap));
		this.gameContainer.on("mousemove",$bind(this,this.onMove));
		this.gameContainer.on("mouseout",$bind(this,this.onOut));
		this.gameContainer.on("mouseover",$bind(this,this.onOver));
		this.gameContainer.on("mousedown",$bind(this,this.onDown));
		this.gameContainer.on("mouseup",$bind(this,this.onUp));
	}
	,destroy: function() {
		com_isartdigital_ruby_game_controller_MouseController.instance = null;
		this.gameContainer.off("click",$bind(this,this.onTap));
		this.gameContainer.off("mouseup",$bind(this,this.onUntap));
		this.gameContainer.off("mousemove",$bind(this,this.onMove));
		this.gameContainer.off("mouseout",$bind(this,this.onOut));
		this.gameContainer.off("mousedown",$bind(this,this.onDown));
		this.gameContainer.off("mouseup",$bind(this,this.onUp));
	}
	,__class__: com_isartdigital_ruby_game_controller_MouseController
});
var com_isartdigital_ruby_game_controller_TouchController = function() {
	com_isartdigital_ruby_game_controller_Controller.call(this);
};
$hxClasses["com.isartdigital.ruby.game.controller.TouchController"] = com_isartdigital_ruby_game_controller_TouchController;
com_isartdigital_ruby_game_controller_TouchController.__name__ = ["com","isartdigital","ruby","game","controller","TouchController"];
com_isartdigital_ruby_game_controller_TouchController.getInstance = function() {
	if(com_isartdigital_ruby_game_controller_TouchController.instance == null) {
		com_isartdigital_ruby_game_controller_TouchController.instance = new com_isartdigital_ruby_game_controller_TouchController();
	}
	return com_isartdigital_ruby_game_controller_TouchController.instance;
};
com_isartdigital_ruby_game_controller_TouchController.__super__ = com_isartdigital_ruby_game_controller_Controller;
com_isartdigital_ruby_game_controller_TouchController.prototype = $extend(com_isartdigital_ruby_game_controller_Controller.prototype,{
	init: function() {
		com_isartdigital_ruby_game_controller_Controller.prototype.init.call(this);
		this.gameContainer.on("tap",$bind(this,this.onTap));
		this.alienContainer.on("tap",$bind(this,this.onTap));
		this.gameContainer.on("touchstart",$bind(this,this.onDown));
		this.gameContainer.on("touchend",$bind(this,this.onUp));
		this.gameContainer.on("touchendoutside",$bind(this,this.onOut));
		this.gameContainer.on("touchmove",$bind(this,this.onMove));
	}
	,onUp: function() {
		com_isartdigital_ruby_game_controller_Controller.prototype.onUp.call(this);
		com_isartdigital_ruby_game_controller_Controller.isTap = false;
	}
	,destroy: function() {
		com_isartdigital_ruby_game_controller_TouchController.instance = null;
		this.gameContainer.off("tap",$bind(this,this.onTap));
		this.gameContainer.off("touchstart",$bind(this,this.onDown));
		this.gameContainer.off("touchend",$bind(this,this.onUp));
		this.gameContainer.off("touchendoutside",$bind(this,this.onOut));
		this.gameContainer.off("touchmove",$bind(this,this.onMove));
	}
	,__class__: com_isartdigital_ruby_game_controller_TouchController
});
var com_isartdigital_ruby_game_player_MissionsManager = function() {
};
$hxClasses["com.isartdigital.ruby.game.player.MissionsManager"] = com_isartdigital_ruby_game_player_MissionsManager;
com_isartdigital_ruby_game_player_MissionsManager.__name__ = ["com","isartdigital","ruby","game","player","MissionsManager"];
com_isartdigital_ruby_game_player_MissionsManager.getInstance = function() {
	if(com_isartdigital_ruby_game_player_MissionsManager.instance == null) {
		com_isartdigital_ruby_game_player_MissionsManager.instance = new com_isartdigital_ruby_game_player_MissionsManager();
	}
	return com_isartdigital_ruby_game_player_MissionsManager.instance;
};
com_isartdigital_ruby_game_player_MissionsManager.prototype = {
	init: function(pMission) {
		this.missions = [];
		this.missions = pMission.missions;
	}
	,destroy: function() {
		com_isartdigital_ruby_game_player_MissionsManager.instance = null;
	}
	,__class__: com_isartdigital_ruby_game_player_MissionsManager
};
var com_isartdigital_ruby_game_player_Player = function() {
};
$hxClasses["com.isartdigital.ruby.game.player.Player"] = com_isartdigital_ruby_game_player_Player;
com_isartdigital_ruby_game_player_Player.__name__ = ["com","isartdigital","ruby","game","player","Player"];
com_isartdigital_ruby_game_player_Player.getInstance = function() {
	if(com_isartdigital_ruby_game_player_Player.instance == null) {
		com_isartdigital_ruby_game_player_Player.instance = new com_isartdigital_ruby_game_player_Player();
	}
	return com_isartdigital_ruby_game_player_Player.instance;
};
com_isartdigital_ruby_game_player_Player.prototype = {
	set_email: function(pEmail) {
		return this.email = pEmail;
	}
	,loadSave: function(pSave) {
		if(pSave != null) {
			this.id = pSave.id;
			this.idFb = pSave.fbID;
			this.save = pSave;
			this.level = pSave.level;
			this.experience = pSave.xp;
			this.xpToLevel = com_isartdigital_ruby_game_player_XpToLevel.ref[this.level];
			this.hardCurrency = pSave.hardCurrency;
			this.softCurrency = pSave.softCurrency;
			this.currentEnergy = pSave.currentEnergy;
			this.maxEnergy = pSave.maxEnergy;
			this.ressource = pSave.ressource;
			this.ftueSteps = pSave.ftueSteps;
			this.gene1 = pSave.gene1;
			this.gene2 = pSave.gene2;
			this.gene3 = pSave.gene3;
			this.gene4 = pSave.gene4;
			this.gene5 = pSave.gene5;
			this.schemas = pSave.schemas;
		}
		this.calculateLevelAdvance();
		com_isartdigital_ruby_ui_hud_Hud.getInstance().update();
		this.geneArray = [this.gene1,this.gene2,this.gene3,this.gene4,this.gene5];
		com_isartdigital_services_monetization_Wallet.getMoney(this.email,$bind(this,this.callBackWallet));
	}
	,callBackWallet: function(pData) {
		if(pData == null) {
			haxe_Log.trace("Erreur Service",{ fileName : "Player.hx", lineNumber : 146, className : "com.isartdigital.ruby.game.player.Player", methodName : "callBackWallet"});
		} else if(pData.error != null) {
			haxe_Log.trace(pData.error,{ fileName : "Player.hx", lineNumber : 148, className : "com.isartdigital.ruby.game.player.Player", methodName : "callBackWallet"});
		} else {
			this.currentIsartPoint = parseFloat(Reflect.field(pData,"money"));
		}
	}
	,releaseSave: function() {
		this.save.xp = this.experience;
		this.save.level = this.level;
		this.save.hardCurrency = this.hardCurrency;
		this.save.softCurrency = this.softCurrency;
		this.save.ressource = this.ressource;
		this.save.currentEnergy = this.currentEnergy;
		this.save.maxEnergy = this.maxEnergy;
	}
	,addExp: function(pXp) {
		if(this.level == 20) {
			js_Browser.alert("Bravo ! Vous êtes arrivés au niveau max !");
			return;
		}
		if(this.experience + pXp < this.xpToLevel) {
			this.experience += pXp;
		} else {
			var numberLevel = Math.floor((this.experience + pXp) / this.xpToLevel);
			this.level = this.level + numberLevel;
			this.xpToLevel = com_isartdigital_ruby_game_player_XpToLevel.ref[this.level];
			this.experience = this.experience + pXp;
			com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_RewardNotifications.getInstance());
			com_isartdigital_ruby_ui_popin_RewardNotifications.getInstance().initLevelUp(this.level);
			com_isartdigital_utils_sounds_SoundManager.getSound("soundLevelUp").play();
		}
		this.calculateLevelAdvance();
		com_isartdigital_ruby_ui_hud_Hud.getInstance().update();
		com_isartdigital_utils_save_DataBaseAction.getInstance().changeExperience(this.experience,this.level);
		this.releaseSave();
	}
	,calculateLevelAdvance: function() {
		return (this.experience - com_isartdigital_ruby_game_player_XpToLevel.ref[this.level - 1]) / com_isartdigital_ruby_game_player_XpToLevel.xpToNextLevel[this.level] * 100;
	}
	,hasEnoughQuantity: function(pQuantity,pType) {
		return pType >= pQuantity;
	}
	,calculateXpToLevel: function(pLevel) {
		return pLevel * 1000;
	}
	,changePlayerValue: function(pValue,pValueType,pIsAddingBuilding) {
		if(pIsAddingBuilding == null) {
			pIsAddingBuilding = false;
		}
		var tmp;
		var tmp1;
		var tmp2;
		if(this.__properties__) {
			tmp = this.__properties__["get_" + pValueType];
			tmp2 = tmp;
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			tmp1 = this[tmp]();
		} else {
			tmp1 = this[pValueType];
		}
		if(tmp1 == null) {
			return;
		}
		if(pValue < 0) {
			var tmp3 = js_Boot.__cast(pValue , Int);
			var tmp4;
			var tmp5;
			var tmp6;
			if(this.__properties__) {
				tmp4 = this.__properties__["get_" + pValueType];
				tmp6 = tmp4;
			} else {
				tmp6 = false;
			}
			if(tmp6) {
				tmp5 = this[tmp4]();
			} else {
				tmp5 = this[pValueType];
			}
			if(!this.hasEnoughQuantity(tmp3,tmp5)) {
				return;
			}
		}
		var tmp7;
		var tmp8;
		var tmp9;
		if(this.__properties__) {
			tmp7 = this.__properties__["get_" + pValueType];
			tmp9 = tmp7;
		} else {
			tmp9 = false;
		}
		if(tmp9) {
			tmp8 = this[tmp7]();
		} else {
			tmp8 = this[pValueType];
		}
		var oldValue = tmp8;
		var tmp10;
		var tmp11;
		var tmp12;
		if(this.__properties__) {
			tmp10 = this.__properties__["get_" + pValueType];
			tmp12 = tmp10;
		} else {
			tmp12 = false;
		}
		if(tmp12) {
			tmp11 = this[tmp10]();
		} else {
			tmp11 = this[pValueType];
		}
		var newValue = tmp11 + js_Boot.__cast(pValue , Int);
		var tmp13;
		var tmp14;
		if(this.__properties__) {
			tmp13 = this.__properties__["set_" + pValueType];
			tmp14 = tmp13;
		} else {
			tmp14 = false;
		}
		if(tmp14) {
			this[tmp13](newValue);
		} else {
			this[pValueType] = newValue;
		}
		if(!pIsAddingBuilding) {
			com_isartdigital_utils_save_DataBaseAction.getInstance().changeCurrency(this.id,pValueType,-js_Boot.__cast(pValue , Int));
		}
		this.releaseSave();
		com_isartdigital_ruby_ui_hud_Hud.getInstance().update();
	}
	,hasEnoughEnergy: function(pEnergy) {
		if(pEnergy + this.currentEnergy <= this.maxEnergy) {
			return true;
		} else {
			return false;
		}
	}
	,increaseEnergyConsumed: function(pEnergy) {
		if(this.hasEnoughEnergy(pEnergy)) {
			this.currentEnergy += pEnergy;
			com_isartdigital_utils_save_DataBaseAction.getInstance().changeEnergy(this.id,this.currentEnergy);
		}
		this.releaseSave();
		com_isartdigital_ruby_ui_hud_Hud.getInstance().update();
	}
	,increaseMaxEnergy: function(pMaxEnergy) {
		this.maxEnergy += pMaxEnergy;
		com_isartdigital_utils_save_DataBaseAction.getInstance().changeMaxEnergy(this.id,this.maxEnergy);
		this.releaseSave();
		com_isartdigital_ruby_ui_hud_Hud.getInstance().update();
	}
	,setSchema: function(pSchema) {
		this.schemas = pSchema;
	}
	,destroy: function() {
		com_isartdigital_ruby_game_player_Player.instance = null;
	}
	,__class__: com_isartdigital_ruby_game_player_Player
	,__properties__: {set_email:"set_email"}
};
var com_isartdigital_ruby_game_player_XpToLevel = function() { };
$hxClasses["com.isartdigital.ruby.game.player.XpToLevel"] = com_isartdigital_ruby_game_player_XpToLevel;
com_isartdigital_ruby_game_player_XpToLevel.__name__ = ["com","isartdigital","ruby","game","player","XpToLevel"];
var com_isartdigital_utils_game_GameObject = function() {
	this.colorFilter = new PIXI.filters.ColorMatrixFilter();
	PIXI.Container.call(this);
	this.on("added",$bind(this,this.updateTransform));
	this.buttonMode = true;
	this.interactive = true;
	this.defaultCursor = "url(assets/Curseur.png), auto";
};
$hxClasses["com.isartdigital.utils.game.GameObject"] = com_isartdigital_utils_game_GameObject;
com_isartdigital_utils_game_GameObject.__name__ = ["com","isartdigital","utils","game","GameObject"];
com_isartdigital_utils_game_GameObject.__super__ = PIXI.Container;
com_isartdigital_utils_game_GameObject.prototype = $extend(PIXI.Container.prototype,{
	destroy: function() {
		this.off("added",$bind(this,this.updateTransform));
		PIXI.Container.prototype.destroy.call(this,true);
	}
	,__class__: com_isartdigital_utils_game_GameObject
});
var com_isartdigital_utils_game_IStateMachine = function() { };
$hxClasses["com.isartdigital.utils.game.IStateMachine"] = com_isartdigital_utils_game_IStateMachine;
com_isartdigital_utils_game_IStateMachine.__name__ = ["com","isartdigital","utils","game","IStateMachine"];
com_isartdigital_utils_game_IStateMachine.prototype = {
	__class__: com_isartdigital_utils_game_IStateMachine
};
var com_isartdigital_utils_game_StateMachine = function() {
	com_isartdigital_utils_game_GameObject.call(this);
	this.setModeVoid();
};
$hxClasses["com.isartdigital.utils.game.StateMachine"] = com_isartdigital_utils_game_StateMachine;
com_isartdigital_utils_game_StateMachine.__name__ = ["com","isartdigital","utils","game","StateMachine"];
com_isartdigital_utils_game_StateMachine.__interfaces__ = [com_isartdigital_utils_game_IStateMachine];
com_isartdigital_utils_game_StateMachine.__super__ = com_isartdigital_utils_game_GameObject;
com_isartdigital_utils_game_StateMachine.prototype = $extend(com_isartdigital_utils_game_GameObject.prototype,{
	setModeVoid: function() {
		this.doAction = $bind(this,this.doActionVoid);
	}
	,doActionVoid: function() {
	}
	,setModeNormal: function() {
		this.doAction = $bind(this,this.doActionNormal);
	}
	,doActionNormal: function() {
	}
	,start: function() {
		this.setModeNormal();
	}
	,destroy: function() {
		this.setModeVoid();
		com_isartdigital_utils_game_GameObject.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_utils_game_StateMachine
});
var com_isartdigital_utils_game_StateGraphic = function() {
	this.boxType = com_isartdigital_utils_game_BoxType.NONE;
	this.DEFAULT_STATE = "";
	this.BOX_SUFFIX = "box";
	this.ANIM_SUFFIX = "";
	com_isartdigital_utils_game_StateMachine.call(this);
};
$hxClasses["com.isartdigital.utils.game.StateGraphic"] = com_isartdigital_utils_game_StateGraphic;
com_isartdigital_utils_game_StateGraphic.__name__ = ["com","isartdigital","utils","game","StateGraphic"];
com_isartdigital_utils_game_StateGraphic.addBoxes = function(pJson) {
	if(com_isartdigital_utils_game_StateGraphic.boxesCache == null) {
		com_isartdigital_utils_game_StateGraphic.boxesCache = new haxe_ds_StringMap();
	}
	var lItem;
	var lObj;
	var _g = 0;
	var _g1 = Reflect.fields(pJson);
	while(_g < _g1.length) {
		var lName = _g1[_g];
		++_g;
		lItem = Reflect.field(pJson,lName);
		var v = new haxe_ds_StringMap();
		var _this = com_isartdigital_utils_game_StateGraphic.boxesCache;
		if(__map_reserved[lName] != null) {
			_this.setReserved(lName,v);
		} else {
			_this.h[lName] = v;
		}
		var _g2 = 0;
		var _g3 = Reflect.fields(lItem);
		while(_g2 < _g3.length) {
			var lObjName = _g3[_g2];
			++_g2;
			lObj = Reflect.field(lItem,lObjName);
			if(lObj.type == "Rectangle") {
				var _this1 = com_isartdigital_utils_game_StateGraphic.boxesCache;
				var this1 = __map_reserved[lName] != null?_this1.getReserved(lName):_this1.h[lName];
				var v1 = new PIXI.Rectangle(lObj.x,lObj.y,lObj.width,lObj.height);
				this1.set(lObjName,v1);
			} else if(lObj.type == "Ellipse") {
				var _this2 = com_isartdigital_utils_game_StateGraphic.boxesCache;
				var this2 = __map_reserved[lName] != null?_this2.getReserved(lName):_this2.h[lName];
				var v2 = new PIXI.Ellipse(lObj.x,lObj.y,lObj.width / 2,lObj.height / 2);
				this2.set(lObjName,v2);
			} else if(lObj.type == "Circle") {
				var _this3 = com_isartdigital_utils_game_StateGraphic.boxesCache;
				var this3 = __map_reserved[lName] != null?_this3.getReserved(lName):_this3.h[lName];
				var v3 = new PIXI.Circle(lObj.x,lObj.y,lObj.radius);
				this3.set(lObjName,v3);
			} else if(lObj.type == "Point") {
				var _this4 = com_isartdigital_utils_game_StateGraphic.boxesCache;
				var this4 = __map_reserved[lName] != null?_this4.getReserved(lName):_this4.h[lName];
				var v4 = new PIXI.Point(lObj.x,lObj.y);
				this4.set(lObjName,v4);
			}
		}
	}
};
com_isartdigital_utils_game_StateGraphic.__super__ = com_isartdigital_utils_game_StateMachine;
com_isartdigital_utils_game_StateGraphic.prototype = $extend(com_isartdigital_utils_game_StateMachine.prototype,{
	setAnimEnd: function() {
		this.isAnimEnd = true;
	}
	,setState: function(pState,pLoop,pAutoPlay,pStart) {
		if(pStart == null) {
			pStart = 0;
		}
		if(pAutoPlay == null) {
			pAutoPlay = true;
		}
		if(pLoop == null) {
			pLoop = false;
		}
		var lClassName = Type.getClassName(js_Boot.getClass(this));
		if(this.factory == null) {
			throw new js__$Boot_HaxeError(lClassName + " :: propriété factory non définie");
		}
		if(this.state == pState) {
			if(this.anim != null) {
				this.setBehavior(pLoop,pAutoPlay,pStart);
			}
			return;
		}
		if(this.assetName == null) {
			this.assetName = lClassName.split(".").pop();
		}
		this.state = pState;
		this.anim = this.factory.getAnim();
		if(this.anim == null) {
			if(this.boxType == com_isartdigital_utils_game_BoxType.SELF) {
				if(this.box != null) {
					this.removeChild(this.box);
				}
				this.box = null;
			}
			this.anim = this.factory.create(this.getID(this.state));
			this.anim.scale.set(1 / com_isartdigital_utils_system_DeviceCapabilities.textureRatio,1 / com_isartdigital_utils_system_DeviceCapabilities.textureRatio);
			if(com_isartdigital_utils_game_StateGraphic.animAlpha < 1) {
				this.anim.alpha = com_isartdigital_utils_game_StateGraphic.animAlpha;
			}
			this.addChild(this.anim);
		} else {
			this.factory.update(this.getID(this.state));
		}
		this.isAnimEnd = false;
		this.setBehavior(pLoop,pAutoPlay,pStart);
		if(this.box == null) {
			if(this.boxType == com_isartdigital_utils_game_BoxType.SELF) {
				this.box = this.anim;
				return;
			} else {
				this.box = new PIXI.Container();
				if(this.boxType != com_isartdigital_utils_game_BoxType.NONE) {
					this.createBox();
				}
			}
			this.addChild(this.box);
		} else if(this.boxType == com_isartdigital_utils_game_BoxType.MULTIPLE) {
			this.removeChild(this.box);
			this.box = new PIXI.Container();
			this.createBox();
			this.addChild(this.box);
		}
	}
	,setBehavior: function(pLoop,pAutoPlay,pStart) {
		if(pStart == null) {
			pStart = 0;
		}
		if(pAutoPlay == null) {
			pAutoPlay = true;
		}
		if(pLoop == null) {
			pLoop = false;
		}
		this.anim.loop = pLoop;
		this.factory.setFrame(pAutoPlay,pStart);
	}
	,getID: function(pState) {
		if(pState == this.DEFAULT_STATE) {
			return this.assetName + this.ANIM_SUFFIX;
		}
		return this.assetName + "_" + pState + this.ANIM_SUFFIX;
	}
	,createBox: function() {
		var lBoxes = this.getBox((this.boxType == com_isartdigital_utils_game_BoxType.MULTIPLE?this.state + "_":"") + this.BOX_SUFFIX);
		var lChild;
		var tmp = lBoxes.keys();
		while(tmp.hasNext()) {
			var lBox = tmp.next();
			lChild = new PIXI.Graphics();
			lChild.beginFill(16720418);
			if(js_Boot.__instanceof(__map_reserved[lBox] != null?lBoxes.getReserved(lBox):lBoxes.h[lBox],PIXI.Rectangle)) {
				lChild.drawRect((__map_reserved[lBox] != null?lBoxes.getReserved(lBox):lBoxes.h[lBox]).x,(__map_reserved[lBox] != null?lBoxes.getReserved(lBox):lBoxes.h[lBox]).y,(__map_reserved[lBox] != null?lBoxes.getReserved(lBox):lBoxes.h[lBox]).width,(__map_reserved[lBox] != null?lBoxes.getReserved(lBox):lBoxes.h[lBox]).height);
			} else if(js_Boot.__instanceof(__map_reserved[lBox] != null?lBoxes.getReserved(lBox):lBoxes.h[lBox],PIXI.Ellipse)) {
				lChild.drawEllipse((__map_reserved[lBox] != null?lBoxes.getReserved(lBox):lBoxes.h[lBox]).x,(__map_reserved[lBox] != null?lBoxes.getReserved(lBox):lBoxes.h[lBox]).y,(__map_reserved[lBox] != null?lBoxes.getReserved(lBox):lBoxes.h[lBox]).width,(__map_reserved[lBox] != null?lBoxes.getReserved(lBox):lBoxes.h[lBox]).height);
			} else if(js_Boot.__instanceof(__map_reserved[lBox] != null?lBoxes.getReserved(lBox):lBoxes.h[lBox],PIXI.Circle)) {
				lChild.drawCircle((__map_reserved[lBox] != null?lBoxes.getReserved(lBox):lBoxes.h[lBox]).x,(__map_reserved[lBox] != null?lBoxes.getReserved(lBox):lBoxes.h[lBox]).y,(__map_reserved[lBox] != null?lBoxes.getReserved(lBox):lBoxes.h[lBox]).radius);
			} else if(js_Boot.__instanceof(__map_reserved[lBox] != null?lBoxes.getReserved(lBox):lBoxes.h[lBox],PIXI.Point)) {
				lChild.drawCircle(0,0,10);
			}
			lChild.endFill();
			lChild.name = lBox;
			if(js_Boot.__instanceof(__map_reserved[lBox] != null?lBoxes.getReserved(lBox):lBoxes.h[lBox],PIXI.Point)) {
				lChild.position.set((__map_reserved[lBox] != null?lBoxes.getReserved(lBox):lBoxes.h[lBox]).x,(__map_reserved[lBox] != null?lBoxes.getReserved(lBox):lBoxes.h[lBox]).y);
			} else {
				lChild.hitArea = __map_reserved[lBox] != null?lBoxes.getReserved(lBox):lBoxes.h[lBox];
			}
			this.box.addChild(lChild);
		}
		if(com_isartdigital_utils_game_StateGraphic.boxAlpha == 0) {
			this.box.renderable = false;
		} else {
			this.box.alpha = com_isartdigital_utils_game_StateGraphic.boxAlpha;
		}
	}
	,getBox: function(pState) {
		var _this = com_isartdigital_utils_game_StateGraphic.boxesCache;
		var key = this.assetName + "_" + pState;
		return __map_reserved[key] != null?_this.getReserved(key):_this.h[key];
	}
	,pause: function() {
		if(this.anim != null) {
			this.anim.stop();
		}
	}
	,resume: function() {
		if(this.anim != null) {
			this.anim.play();
		}
	}
	,get_hitBox: function() {
		return this.box;
	}
	,get_hitPoints: function() {
		return null;
	}
	,destroy: function() {
		if(this.anim.stop != null) {
			this.anim.stop();
		}
		this.removeChild(this.anim);
		this.anim.destroy();
		if(this.box != this.anim) {
			this.removeChild(this.box);
			this.box.destroy();
			this.box = null;
		}
		this.anim = null;
		com_isartdigital_utils_game_StateMachine.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_utils_game_StateGraphic
	,__properties__: {get_hitPoints:"get_hitPoints",get_hitBox:"get_hitBox"}
});
var com_isartdigital_ruby_game_sprites_FlumpStateGraphic = function(pAsset) {
	com_isartdigital_utils_game_StateGraphic.call(this);
	if(pAsset != null) {
		this.assetName = pAsset;
	}
	this.name = this.assetName;
};
$hxClasses["com.isartdigital.ruby.game.sprites.FlumpStateGraphic"] = com_isartdigital_ruby_game_sprites_FlumpStateGraphic;
com_isartdigital_ruby_game_sprites_FlumpStateGraphic.__name__ = ["com","isartdigital","ruby","game","sprites","FlumpStateGraphic"];
com_isartdigital_ruby_game_sprites_FlumpStateGraphic.__super__ = com_isartdigital_utils_game_StateGraphic;
com_isartdigital_ruby_game_sprites_FlumpStateGraphic.prototype = $extend(com_isartdigital_utils_game_StateGraphic.prototype,{
	start: function() {
		this.factory = new com_isartdigital_utils_game_factory_FlumpMovieAnimFactory();
		com_isartdigital_utils_game_StateGraphic.prototype.start.call(this);
		this.setState(this.DEFAULT_STATE);
		this.boxType = com_isartdigital_utils_game_BoxType.SELF;
	}
	,__class__: com_isartdigital_ruby_game_sprites_FlumpStateGraphic
});
var com_isartdigital_utils_game_clipping_IClippable = function() { };
$hxClasses["com.isartdigital.utils.game.clipping.IClippable"] = com_isartdigital_utils_game_clipping_IClippable;
com_isartdigital_utils_game_clipping_IClippable.__name__ = ["com","isartdigital","utils","game","clipping","IClippable"];
com_isartdigital_utils_game_clipping_IClippable.prototype = {
	__class__: com_isartdigital_utils_game_clipping_IClippable
};
var com_isartdigital_utils_game_pooling_PoolObject = function(pAsset) {
	com_isartdigital_ruby_game_sprites_FlumpStateGraphic.call(this);
	this.assetName = pAsset;
};
$hxClasses["com.isartdigital.utils.game.pooling.PoolObject"] = com_isartdigital_utils_game_pooling_PoolObject;
com_isartdigital_utils_game_pooling_PoolObject.__name__ = ["com","isartdigital","utils","game","pooling","PoolObject"];
com_isartdigital_utils_game_pooling_PoolObject.__interfaces__ = [com_isartdigital_utils_game_clipping_IClippable];
com_isartdigital_utils_game_pooling_PoolObject.__super__ = com_isartdigital_ruby_game_sprites_FlumpStateGraphic;
com_isartdigital_utils_game_pooling_PoolObject.prototype = $extend(com_isartdigital_ruby_game_sprites_FlumpStateGraphic.prototype,{
	init: function(pElem) {
		if(pElem != null) {
			this.elem = pElem;
			this.elem.instance = this;
			this.instanceID = pElem.instanceID;
		}
		com_isartdigital_utils_game_pooling_PoolObject.activeObjectList.push(this);
	}
	,releaseElementList: function() {
		var _this = com_isartdigital_utils_game_pooling_PoolObject.elementList;
		var key = this.instanceID;
		if((__map_reserved[key] != null?_this.getReserved(key):_this.h[key]) != null) {
			var _this1 = com_isartdigital_utils_game_pooling_PoolObject.elementList;
			var key1 = this.instanceID;
			var value = this.elem;
			if(__map_reserved[key1] != null) {
				_this1.setReserved(key1,value);
			} else {
				_this1.h[key1] = value;
			}
		}
	}
	,dispose: function() {
		this.releaseElementList();
		this.removeAllListeners();
		this.setModeVoid();
		if(this.parent != null) {
			this.parent.removeChild(this);
		}
		HxOverrides.remove(com_isartdigital_utils_game_pooling_PoolObject.activeObjectList,this);
	}
	,destroy: function() {
		this.dispose();
		com_isartdigital_ruby_game_sprites_FlumpStateGraphic.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_utils_game_pooling_PoolObject
});
var com_isartdigital_ruby_game_sprites_elements_aliens_Alien = function(pAsset) {
	com_isartdigital_utils_game_pooling_PoolObject.call(this,pAsset);
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.aliens.Alien"] = com_isartdigital_ruby_game_sprites_elements_aliens_Alien;
com_isartdigital_ruby_game_sprites_elements_aliens_Alien.__name__ = ["com","isartdigital","ruby","game","sprites","elements","aliens","Alien"];
com_isartdigital_ruby_game_sprites_elements_aliens_Alien.getAlienType = function(pType,pTypes) {
	if(pTypes == null) {
		return null;
	}
	var _g = 0;
	while(_g < pTypes.length) {
		var alien = pTypes[_g];
		++_g;
		if(alien.name == pType) {
			return alien;
		}
	}
	return null;
};
com_isartdigital_ruby_game_sprites_elements_aliens_Alien.countAliensByName = function(pName) {
	var counter = 0;
	var _g = 0;
	var _g1 = com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList;
	while(_g < _g1.length) {
		var alien = _g1[_g];
		++_g;
		if(alien.name == pName) {
			++counter;
		}
	}
	return counter;
};
com_isartdigital_ruby_game_sprites_elements_aliens_Alien.__super__ = com_isartdigital_utils_game_pooling_PoolObject;
com_isartdigital_ruby_game_sprites_elements_aliens_Alien.prototype = $extend(com_isartdigital_utils_game_pooling_PoolObject.prototype,{
	__class__: com_isartdigital_ruby_game_sprites_elements_aliens_Alien
});
var com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens = function(pAsset) {
	this.powerRange = 2;
	this.bombNumber = 0;
	this.positionInGrid = new PIXI.Point(0,0);
	this.NORMAL_STATE = "";
	this.SELECTED_STATE = "Selected";
	com_isartdigital_ruby_game_sprites_elements_aliens_Alien.call(this,pAsset);
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.managers.SpecialFeatureAliens"] = com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens;
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens.__name__ = ["com","isartdigital","ruby","game","specialFeature","managers","SpecialFeatureAliens"];
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens.loadTypes = function(pTypes) {
	com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens.speFeatTypes = pTypes;
};
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens.__super__ = com_isartdigital_ruby_game_sprites_elements_aliens_Alien;
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_aliens_Alien.prototype,{
	getAssetName: function() {
		return this.assetName;
	}
	,changeAssetName: function(pName) {
		this.assetName = pName;
	}
	,changeAsset: function(pState,pAutoPlay) {
		if(pAutoPlay == null) {
			pAutoPlay = true;
		}
		if(pState != this.SELECTED_STATE) {
			pState = this.NORMAL_STATE;
		}
		this.setState(pState,true,pAutoPlay);
	}
	,destroy: function() {
		com_isartdigital_ruby_game_sprites_elements_aliens_Alien.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens
});
var com_isartdigital_ruby_game_specialFeature_aliens_AlienType = function(pAsset) {
	com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens.call(this,pAsset);
	this.state = "1_Normal";
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.aliens.AlienType"] = com_isartdigital_ruby_game_specialFeature_aliens_AlienType;
com_isartdigital_ruby_game_specialFeature_aliens_AlienType.__name__ = ["com","isartdigital","ruby","game","specialFeature","aliens","AlienType"];
com_isartdigital_ruby_game_specialFeature_aliens_AlienType.__super__ = com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens;
com_isartdigital_ruby_game_specialFeature_aliens_AlienType.prototype = $extend(com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens.prototype,{
	__class__: com_isartdigital_ruby_game_specialFeature_aliens_AlienType
});
var com_isartdigital_ruby_game_specialFeature_aliens_Bomber = function(pAsset) {
	com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens.call(this,pAsset);
	this.maxStamina = 4;
	this.bombNumber = 4;
	this.stamina = this.maxStamina;
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.aliens.Bomber"] = com_isartdigital_ruby_game_specialFeature_aliens_Bomber;
com_isartdigital_ruby_game_specialFeature_aliens_Bomber.__name__ = ["com","isartdigital","ruby","game","specialFeature","aliens","Bomber"];
com_isartdigital_ruby_game_specialFeature_aliens_Bomber.__super__ = com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens;
com_isartdigital_ruby_game_specialFeature_aliens_Bomber.prototype = $extend(com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens.prototype,{
	__class__: com_isartdigital_ruby_game_specialFeature_aliens_Bomber
});
var com_isartdigital_ruby_game_specialFeature_aliens_Driller = function(pAsset) {
	com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens.call(this,pAsset);
	this.maxStamina = 10;
	this.stamina = this.maxStamina;
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.aliens.Driller"] = com_isartdigital_ruby_game_specialFeature_aliens_Driller;
com_isartdigital_ruby_game_specialFeature_aliens_Driller.__name__ = ["com","isartdigital","ruby","game","specialFeature","aliens","Driller"];
com_isartdigital_ruby_game_specialFeature_aliens_Driller.__super__ = com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens;
com_isartdigital_ruby_game_specialFeature_aliens_Driller.prototype = $extend(com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens.prototype,{
	__class__: com_isartdigital_ruby_game_specialFeature_aliens_Driller
});
var com_isartdigital_ruby_game_specialFeature_aliens_Healer = function(pAsset) {
	com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens.call(this,pAsset);
	this.maxStamina = 8;
	this.stamina = this.maxStamina;
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.aliens.Healer"] = com_isartdigital_ruby_game_specialFeature_aliens_Healer;
com_isartdigital_ruby_game_specialFeature_aliens_Healer.__name__ = ["com","isartdigital","ruby","game","specialFeature","aliens","Healer"];
com_isartdigital_ruby_game_specialFeature_aliens_Healer.__super__ = com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens;
com_isartdigital_ruby_game_specialFeature_aliens_Healer.prototype = $extend(com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens.prototype,{
	__class__: com_isartdigital_ruby_game_specialFeature_aliens_Healer
});
var com_isartdigital_ruby_game_specialFeature_aliens_Tank = function(pAsset) {
	com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens.call(this,pAsset);
	this.maxStamina = 6;
	this.stamina = this.maxStamina;
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.aliens.Tank"] = com_isartdigital_ruby_game_specialFeature_aliens_Tank;
com_isartdigital_ruby_game_specialFeature_aliens_Tank.__name__ = ["com","isartdigital","ruby","game","specialFeature","aliens","Tank"];
com_isartdigital_ruby_game_specialFeature_aliens_Tank.__super__ = com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens;
com_isartdigital_ruby_game_specialFeature_aliens_Tank.prototype = $extend(com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens.prototype,{
	__class__: com_isartdigital_ruby_game_specialFeature_aliens_Tank
});
var com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager = function() {
	this.delay = 0;
	this.currentMode = "";
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.managers.SFAliensEventManager"] = com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager;
com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager.__name__ = ["com","isartdigital","ruby","game","specialFeature","managers","SFAliensEventManager"];
com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager.getInstance = function() {
	if(com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager.instance == null) {
		com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager.instance = new com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager();
	}
	return com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager.instance;
};
com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager.prototype = {
	actions: function() {
		var lAlien = com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien;
		com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().globalMousePos = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().getGlobalMouseCoords(com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().ressourcesContainer);
		com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().gridMousePos = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().getGridCoords(com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().globalMousePos);
		if(com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien != null) {
			var lAlienPos = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().getGridCoords(lAlien.position);
			if(this.currentMode == "Move") {
				if(com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().checkWallinNextPos(lAlienPos,com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().gridMousePos)) {
					return;
				}
				if(this.canMove(com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().gridMousePos)) {
					this.move();
				} else {
					this.dig(com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().gridMousePos);
				}
			} else if(this.currentMode == "Skill") {
				if(com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien.alienType == "Bomber") {
					this.canBomb(com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().gridMousePos);
				}
				if(com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien.alienType == "Healer") {
					this.canHeal(com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().gridMousePos);
				}
			}
		}
	}
	,setModeMove: function() {
		this.currentMode = "Move";
		var lAlien = com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien;
		var lVector3Array;
		var lAction;
		lVector3Array = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().getPropagationPath(lAlien.alienType,lAlien.positionInGrid,lAlien.stamina);
		com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.getInstance().removeSpecialTile();
		var _g = 0;
		while(_g < lVector3Array.length) {
			var vector = lVector3Array[_g];
			++_g;
			if(lAlien.stamina - vector.z == 1) {
				lAction = "dig";
			} else {
				lAction = "move";
			}
			com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.getInstance().addSpecialTile(lAction,new PIXI.Point(vector.x * 200,vector.y * 150));
		}
	}
	,setModeSkill: function() {
		this.currentMode = "Skill";
		var lAlien = com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien;
		if(lAlien.alienType == "Tank" || lAlien.alienType == "Driller" || lAlien.alienType == "Bomber" && lAlien.bombNumber == 0 || lAlien.alienType == "Healer" && lAlien.stamina == 0) {
			this.setModeMove();
			return;
		}
		var lAlienPos = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().getGridCoords(lAlien.position);
		var distance;
		com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.getInstance().removeSpecialTile();
		com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.getInstance();
		var tilePos;
		var _g = 0;
		while(_g < 9) {
			var j = _g++;
			var _g1 = 0;
			while(_g1 < 5) {
				tilePos = new PIXI.Point(j,_g1++);
				distance = Math.floor(Math.abs(lAlienPos.x - tilePos.x) + Math.abs(lAlienPos.y - tilePos.y));
				if(distance <= lAlien.powerRange) {
					com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.getInstance().addSpecialTile("skill",com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().getGlobalGridCoords(tilePos));
				}
			}
		}
	}
	,move: function() {
		var gridMousePos = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().gridMousePos;
		this.delay = 0;
		this.moveAtCoord(gridMousePos);
	}
	,moveAtCoord: function(pTarget) {
		var lAlien = com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien;
		var newPos = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().getGlobalGridCoords(com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().getGridCoords(com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().globalMousePos));
		var jsonList = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().jsonGrid[Math.floor(pTarget.x)][Math.floor(pTarget.y)];
		if(jsonList != null) {
			var _g1 = 0;
			var _g = jsonList.length;
			while(_g1 < _g) {
				var object = _g1++;
				if(jsonList[object].type.substring(0,4) == "Item" && com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().isAlienNextToTile(pTarget)) {
					this.rewardAnimation(jsonList[object],pTarget);
				}
			}
		}
		this.setModeMove();
		haxe_Log.trace(this.delay,{ fileName : "SFAliensEventManager.hx", lineNumber : 179, className : "com.isartdigital.ruby.game.specialFeature.managers.SFAliensEventManager", methodName : "moveAtCoord"});
		TweenMax.to(lAlien,0.2,{ x : newPos.x, y : newPos.y, delay : this.delay});
		com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance().updateAlienHud();
	}
	,rewardAnimation: function(pRessource,pTarget) {
		var effectParams = { originalPosition : com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().getGlobalGridCoords(pTarget), destinationPosition : com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().rewardContainer.toLocal(com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance().getRessourceHudPosition(pRessource.type)), whereToAddchild : com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().rewardContainer, numObjectsToInstanciate : 20, duration : 1, secondsBtwnaddchilds : 1, speed : 0.2, animationType : "dispersionToCurve", ressource : pRessource.type};
		com_isartdigital_ruby_utils_RessourcesEffectManager.getInstance().SetEffect(effectParams);
		var lParticle = com_isartdigital_ruby_utils_ParticleManager.getInstance().createParticle("bubble",["bubble"],5000);
		lParticle.position = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().getGlobalGridCoords(pTarget);
		com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().particleContainer.addChild(lParticle);
		com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().giveRewardToPlayer(pRessource.type);
		com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.getInstance().removeInTileList(pRessource);
	}
	,dig: function(pMousePos) {
		var jsonList = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().jsonGrid[Math.floor(pMousePos.x)][Math.floor(pMousePos.y)];
		var lAlien = com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien;
		if(!com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().hasEnoughStamina()) {
			return;
		}
		if(jsonList != null) {
			var _g1 = 0;
			var _g = jsonList.length;
			while(_g1 < _g) {
				var object = _g1++;
				if(jsonList[object].type.substring(0,4) == "Clue") {
					if(com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().isAlienNextToTile(pMousePos)) {
						var lParticle = com_isartdigital_ruby_utils_ParticleManager.getInstance().createParticle("dig",["bloc1","bloc2","bloc3","bloc4","smoke4"],5000);
						lParticle.position = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().getGlobalGridCoords(pMousePos);
						com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().particleContainer.addChild(lParticle);
						var params = { originalPosition : com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance().position.clone(), smoothness : 3, amplitude : 10, duration : 30, xQuantity : 0.5, yQuantity : 0.5, fadeOut : 1, randomShake : true, sound : null};
						com_isartdigital_ruby_utils_SmartShaker.getInstance().SetShaker(com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance(),params);
						com_isartdigital_utils_sounds_SoundManager.getSound("soundXenosDrillShort").play();
						com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.getInstance().removeInTileList(jsonList[object]);
						com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().decreaseStamina(lAlien);
						this.delay = 0.1;
						this.moveAtCoord(pMousePos);
					}
				}
			}
		}
		com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance().updateAlienHud();
	}
	,canMove: function(pMousePos) {
		var jsonList = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().jsonGrid[Math.round(pMousePos.x)][Math.round(pMousePos.y)];
		var lAlien = com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien;
		if(!com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().isAlienNextToTile(pMousePos)) {
			return false;
		}
		if(jsonList != null) {
			var _g1 = 0;
			var _g = jsonList.length;
			while(_g1 < _g) {
				var object = _g1++;
				if(jsonList[object].type.substring(0,4) == "Lava" && lAlien.alienType != "Tank") {
					return false;
				}
				if(jsonList[object].type.substring(0,4) == "Lava" && lAlien.alienType == "Tank") {
					com_isartdigital_utils_sounds_SoundManager.getSound("soundTankWalkLava").play();
				}
				if(jsonList[object].type.substring(0,4) == "Clue" || jsonList[object].type.substring(0,9) == "HardBrick") {
					return false;
				}
			}
		}
		return true;
	}
	,canBomb: function(pTarget) {
		var jsonList = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().jsonGrid[Math.floor(pTarget.x)][Math.floor(pTarget.y)];
		var lAlien = com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien;
		if(lAlien.bombNumber <= 0) {
			return false;
		}
		if(jsonList != null) {
			var _g1 = 0;
			var _g = jsonList.length;
			while(_g1 < _g) {
				var object = _g1++;
				if(jsonList[object].type.substring(0,4) == "Item") {
					this.rewardAnimation(jsonList[object],pTarget);
				}
				if(com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.getInstance().isTileInRange(pTarget) && (jsonList[object].type.substring(0,4) == "Clue" || jsonList[object].type.substring(0,9) == "HardBrick")) {
					var params = { originalPosition : com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance().position.clone(), smoothness : 7, amplitude : 15, duration : 30, xQuantity : 0.5, yQuantity : 0.5, fadeOut : 1, randomShake : true, sound : null};
					com_isartdigital_ruby_utils_SmartShaker.getInstance().SetShaker(com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance(),params);
					com_isartdigital_utils_sounds_SoundManager.getSound("soundXenosBomberPower").play();
					var lParticle = com_isartdigital_ruby_utils_ParticleManager.getInstance().createParticle("dig",["bloc1","bloc2","bloc3","bloc4","smoke4"],5000);
					lParticle.position = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().getGlobalGridCoords(pTarget);
					com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().particleContainer.addChild(lParticle);
					var lParticle2 = com_isartdigital_ruby_utils_ParticleManager.getInstance().createParticle("bomb",["bloc1","bloc2","bloc3","bloc4","smoke4"],5000);
					lParticle2.position = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().getGlobalGridCoords(pTarget);
					com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().particleContainer.addChild(lParticle2);
					com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.getInstance().removeInTileList(jsonList[object]);
					jsonList[object].type = "destroyed";
					lAlien.bombNumber--;
					this.setModeSkill();
					return true;
				}
			}
		}
		return false;
	}
	,canHeal: function(pTarget) {
		var result = false;
		var lPos;
		var lAlien = com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien;
		if(lAlien.stamina > 0) {
			var _g = 0;
			var _g1 = com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().activatedAlienList;
			while(_g < _g1.length) {
				var alien = _g1[_g];
				++_g;
				lPos = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().getGridCoords(alien.position);
				if(lPos.x == pTarget.x && lPos.y == pTarget.y) {
					com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().increaseStamina(1,alien);
					com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance().updateAlienHud();
					result = true;
				}
			}
			if(result) {
				com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().decreaseStamina(lAlien);
				com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance().updateAlienHud();
				com_isartdigital_utils_sounds_SoundManager.getSound("soundXenosHealerPower").play();
				return true;
			} else {
				return false;
			}
		} else {
			this.setModeMove();
			return false;
		}
	}
	,destroy: function() {
		com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager.instance = null;
	}
	,__class__: com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager
};
var com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager = function() {
	this.activatedAlienList = [];
	this.inactiveAlienList = [];
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.managers.SFAliensManager"] = com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager;
com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.__name__ = ["com","isartdigital","ruby","game","specialFeature","managers","SFAliensManager"];
com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance = function() {
	if(com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.instance == null) {
		com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.instance = new com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager();
	}
	return com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.instance;
};
com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.prototype = {
	initAliensList: function(pList) {
		var lAlien = null;
		var lAlienNameLength;
		var lAlienId;
		var _g = 0;
		while(_g < pList.length) {
			var alien = pList[_g];
			++_g;
			if(alien != null) {
				lAlienNameLength = alien.name.length;
				lAlienId = Std.parseInt(alien.name.substring(lAlienNameLength - 1));
				lAlien = js_Boot.__cast(com_isartdigital_utils_game_pooling_PoolManager.getFromPool(alien.carac.power + lAlienId) , com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens);
				lAlien.alienID = lAlienId;
				lAlien.alienType = alien.carac.power;
				lAlien.alienName = alien.carac.name;
				lAlien.stamina = alien.carac.stamina;
				lAlien.maxStamina = lAlien.stamina;
				this.inactiveAlienList.push(lAlien);
			}
		}
	}
	,instanciateAlien: function() {
		if(this.inactiveAlienList.length == 0) {
			return;
		}
		var lAlien = null;
		var _g = 0;
		var _g1 = com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.getInstance().tileList;
		while(_g < _g1.length) {
			var tile = _g1[_g];
			++_g;
			if(js_Boot.__instanceof(tile,com_isartdigital_ruby_game_specialFeature_tiles_classes_AlienSpawn) && this.inactiveAlienList.length > 0) {
				lAlien = this.inactiveAlienList.shift();
				lAlien.x = tile.x;
				lAlien.y = tile.y;
				lAlien.positionInGrid = tile.positionInGrid;
				this.activatedAlienList.push(lAlien);
				com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().alienContainer.addChild(lAlien);
				lAlien.start();
			}
		}
	}
	,getAlienType: function(pIndex) {
		if(pIndex > this.activatedAlienList.length - 1) {
			return "NO TYPE";
		}
		return this.activatedAlienList[pIndex].alienType;
	}
	,getAlienName: function(pIndex) {
		if(pIndex > this.activatedAlienList.length - 1) {
			return "NO NAME";
		}
		return this.activatedAlienList[pIndex].nomPropre;
	}
	,getStamina: function(pIndex) {
		return this.activatedAlienList[pIndex].stamina;
	}
	,getMaxStamina: function(pIndex) {
		return this.activatedAlienList[pIndex].maxStamina;
	}
	,isAlienNextToTile: function(pMousePos) {
		var lAlienPos = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().getGridCoords(this.selectedAlien.position);
		if(Math.abs(lAlienPos.x - pMousePos.x) + Math.abs(lAlienPos.y - pMousePos.y) == 1) {
			return true;
		}
		return false;
	}
	,hasEnoughStamina: function() {
		if(this.selectedAlien.stamina <= 0) {
			return false;
		}
		return true;
	}
	,decreaseStamina: function(pAlien) {
		pAlien.stamina--;
		com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance().updateRessourceHud();
		if(!com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().checkIfAliensStillHasStamina()) {
			com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().openEndMissionPoppin();
			com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance().onClose();
		}
	}
	,increaseStamina: function(pAmount,pAlien) {
		pAlien.stamina += pAmount;
		pAlien.stamina = Math.floor(Math.min(pAlien.stamina,pAlien.maxStamina));
		com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance().updateRessourceHud();
	}
	,destroy: function() {
		com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.instance = null;
	}
	,__class__: com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager
};
var com_isartdigital_ruby_game_specialFeature_managers_SFEventsManager = function() {
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.managers.SFEventsManager"] = com_isartdigital_ruby_game_specialFeature_managers_SFEventsManager;
com_isartdigital_ruby_game_specialFeature_managers_SFEventsManager.__name__ = ["com","isartdigital","ruby","game","specialFeature","managers","SFEventsManager"];
com_isartdigital_ruby_game_specialFeature_managers_SFEventsManager.getInstance = function() {
	if(com_isartdigital_ruby_game_specialFeature_managers_SFEventsManager.instance == null) {
		com_isartdigital_ruby_game_specialFeature_managers_SFEventsManager.instance = new com_isartdigital_ruby_game_specialFeature_managers_SFEventsManager();
	}
	return com_isartdigital_ruby_game_specialFeature_managers_SFEventsManager.instance;
};
com_isartdigital_ruby_game_specialFeature_managers_SFEventsManager.prototype = {
	selectAlienOnHud: function(pAlienIndex,pMode) {
		if(com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien != null) {
			com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().tileContainer.off("click",($_=com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager.getInstance(),$bind($_,$_.actions)));
			com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().tileContainer.off("tap",($_=com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager.getInstance(),$bind($_,$_.actions)));
		}
		if(this.oldAlien != null) {
			this.oldAlien.changeAssetName(this.oldAlien.alienType + Std.string(this.oldAlien.alienID));
			this.oldAlien.changeAsset("Normal");
		}
		com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien = com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().activatedAlienList[pAlienIndex];
		if(com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien.alienType == "Bomber") {
			com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerChooseXenosBomber").play();
		}
		if(com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien.alienType == "Driller") {
			com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerChooseXenosForeur").play();
		}
		if(com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien.alienType == "Healer") {
			com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerChooseXenosHealer").play();
		}
		if(com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien.alienType == "Tank") {
			com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerChooseXenosTank").play();
		}
		this.oldAlien = com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien;
		com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien.changeAssetName(com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien.alienType + Std.string(com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien.alienID));
		com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien.changeAsset("Selected");
		if(com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien != null) {
			if(pMode == "Move") {
				com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager.getInstance().setModeMove();
			}
			if(pMode == "Skill") {
				com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager.getInstance().setModeSkill();
			}
			com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().tileContainer.on("click",($_=com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager.getInstance(),$bind($_,$_.actions)));
			com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().tileContainer.on("tap",($_=com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager.getInstance(),$bind($_,$_.actions)));
		} else {
			com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().tileContainer.off("click",($_=com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager.getInstance(),$bind($_,$_.actions)));
			com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().tileContainer.off("tap",($_=com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager.getInstance(),$bind($_,$_.actions)));
		}
		com_isartdigital_ruby_utils_ColorFilterManager.getInstance().applyFilter(com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien,{ colorToApply : "orange", colorAmount : 1, duration : 1});
	}
	,destroy: function() {
		com_isartdigital_ruby_game_specialFeature_managers_SFEventsManager.instance = null;
	}
	,__class__: com_isartdigital_ruby_game_specialFeature_managers_SFEventsManager
};
var com_isartdigital_ruby_game_specialFeature_managers_SFGameManager = function() {
	this.isInit = false;
	this.xenoList = [];
	this.ressourcesContainer = new PIXI.Container();
	this.blocsContainer = new PIXI.Container();
	this.moveContainer = new PIXI.Container();
	this.skillContainer = new PIXI.Container();
	this.wallsContainer = new PIXI.Container();
	this.alienContainer = new PIXI.Container();
	this.rewardContainer = new PIXI.Container();
	this.particleContainer = new PIXI.Container();
	this.globalContainer = new PIXI.Container();
	this.rewardSchema = 0;
	this.currentMap = 1;
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.managers.SFGameManager"] = com_isartdigital_ruby_game_specialFeature_managers_SFGameManager;
com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.__name__ = ["com","isartdigital","ruby","game","specialFeature","managers","SFGameManager"];
com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance = function() {
	if(com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.instance == null) {
		com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.instance = new com_isartdigital_ruby_game_specialFeature_managers_SFGameManager();
	}
	return com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.instance;
};
com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.prototype = {
	init: function(pMission,pXenoList) {
		this.initReward();
		com_isartdigital_ruby_game_GameManager.getInstance().setModeSpecial();
		com_isartdigital_utils_sounds_SoundManager.getSound("soundAtmosphere").stop();
		com_isartdigital_utils_sounds_SoundManager.getSound("soundMusicSpecialFeature").play();
		this.missionParam = pMission;
		this.xenoList = pXenoList;
		this.currentMap = Std.parseInt(this.missionParam.map);
		this.alienSpawnNumber = this.missionParam.alienSpawner;
		if(this.isInit) {
			return;
		} else {
			this.isInit = true;
		}
		com_isartdigital_ruby_ui_UIManager.getInstance().closeAllPopins();
		com_isartdigital_ruby_ui_UIManager.getInstance().closeHud();
		com_isartdigital_ruby_ui_UIManager.getInstance().openScreen(com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance());
		com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().generateGrid();
		com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().initAliensList(pXenoList);
		com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().instanciateAlien();
		com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance().initContainers();
		this.tileContainer = com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance().tilesContainer;
		var tileContainerPosition = new PIXI.Point(this.tileContainer.position.x - this.tileContainer.width / 2 + 200 - 5,this.tileContainer.position.y - this.tileContainer.height / 2 + 75. - 5);
		this.rewardContainer.position = tileContainerPosition;
		this.particleContainer.position = tileContainerPosition;
		this.alienContainer.position = tileContainerPosition;
		this.wallsContainer.position = tileContainerPosition;
		this.skillContainer.position = tileContainerPosition;
		this.moveContainer.position = tileContainerPosition;
		this.blocsContainer.position = tileContainerPosition;
		this.ressourcesContainer.position = tileContainerPosition;
		this.tileContainer.addChild(this.ressourcesContainer);
		this.tileContainer.addChild(this.blocsContainer);
		this.tileContainer.addChild(this.moveContainer);
		this.tileContainer.addChild(this.skillContainer);
		this.tileContainer.addChild(this.wallsContainer);
		this.tileContainer.addChild(this.particleContainer);
		this.tileContainer.addChild(this.alienContainer);
		this.tileContainer.addChild(this.rewardContainer);
		this.tileContainer.interactive = true;
		com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance().initHud();
		com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance().updateRessourceHud();
	}
	,initReward: function() {
		this.collectedReward = { hc : 0, sc : 0, gene1 : 0, gene2 : 0, gene3 : 0, gene4 : 0, gene5 : 0, schema : 0, darkMatter : 0};
	}
	,checkIfAliensStillHasStamina: function() {
		com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance().closeFlag = true;
		var _g = 0;
		var _g1 = com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().activatedAlienList;
		while(_g < _g1.length) {
			var alien = _g1[_g];
			++_g;
			if(alien.stamina > 0) {
				return true;
			}
		}
		return false;
	}
	,openEndMissionPoppin: function() {
		com_isartdigital_ruby_ui_popin_RewardNotifications.getInstance().initMissionEnd(this.collectedReward,this.xenoList);
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_RewardNotifications.getInstance());
		com_isartdigital_utils_sounds_SoundManager.getSound("soundMissionEnd").play();
	}
	,giveRewardToPlayer: function(pRewardType) {
		if(pRewardType == "ItemGeneOne") {
			this.rewardGene1 = this.missionParam.rewards.gene1 | 0;
			com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(this.rewardGene1,"gene1");
			this.collectedReward.gene1 += this.rewardGene1;
		}
		if(pRewardType == "ItemGeneTwo") {
			this.rewardGene2 = this.missionParam.rewards.gene2 | 0;
			com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(this.rewardGene2,"gene2");
			this.collectedReward.gene2 += this.rewardGene2;
		}
		if(pRewardType == "ItemGeneThree") {
			this.rewardGene3 = this.missionParam.rewards.gene3 | 0;
			com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(this.rewardGene3,"gene3");
			this.collectedReward.gene3 += this.rewardGene3;
		}
		if(pRewardType == "ItemGeneFour") {
			this.rewardGene4 = this.missionParam.rewards.gene4 | 0;
			com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(this.rewardGene4,"gene4");
			this.collectedReward.gene4 += this.rewardGene4;
		}
		if(pRewardType == "ItemGeneFive") {
			this.rewardGene5 = this.missionParam.rewards.gene5 | 0;
			com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(this.rewardGene5,"gene5");
			this.collectedReward.gene5 += this.rewardGene5;
		}
		if(pRewardType == "ItemDarkMatter") {
			this.rewardDarkMatter = this.missionParam.rewards.darkMatter | 0;
			com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(this.rewardDarkMatter,"ressource");
			this.collectedReward.darkMatter += this.rewardDarkMatter;
		}
		if(pRewardType == "ItemHC") {
			this.rewardHC = this.missionParam.rewards.hc | 0;
			com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(this.rewardHC,"hardCurrency");
			this.collectedReward.hc += this.rewardHC;
		}
		if(pRewardType == "ItemSC") {
			this.rewardSC = this.missionParam.rewards.sc | 0;
			com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(this.rewardSC,"softCurrency");
			this.collectedReward.sc += this.rewardSC;
		}
		if(pRewardType == "ItemBluePrint") {
			this.giveLockedSchema();
			com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance().playerSchema++;
			this.collectedReward.schema++;
		}
		com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance().updateRessourceHud();
	}
	,giveLockedSchema: function() {
		var x = Reflect.field(com_isartdigital_utils_loader_GameLoader.getContent("schemas.json"),Std.string(this.currentMap));
		com_isartdigital_utils_save_DataManager.getInstance().addSchema(x | 0);
	}
	,destroy: function() {
		com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.instance = null;
	}
	,__class__: com_isartdigital_ruby_game_specialFeature_managers_SFGameManager
};
var com_isartdigital_ruby_game_specialFeature_managers_SFGridManager = function() {
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.managers.SFGridManager"] = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager;
com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.__name__ = ["com","isartdigital","ruby","game","specialFeature","managers","SFGridManager"];
com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance = function() {
	if(com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.instance == null) {
		com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.instance = new com_isartdigital_ruby_game_specialFeature_managers_SFGridManager();
	}
	return com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.instance;
};
com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.prototype = {
	initGrid: function() {
		this.jsonGrid = [];
		var _g = 0;
		while(_g < 9) {
			++_g;
			var lArrayCols = [];
			var _g1 = 0;
			while(_g1 < 5) {
				++_g1;
				lArrayCols.push([]);
			}
			this.jsonGrid.push(lArrayCols);
		}
		this.propagationGrid = [];
		var _g2 = 0;
		while(_g2 < 17) {
			var x = _g2++;
			this.propagationGrid.push([]);
			var _g11 = 0;
			while(_g11 < 9) this.propagationGrid[x].push(-1 * (x % 2) * (_g11++ % 2));
		}
	}
	,initJsonGrid: function() {
		var lInstance;
		var lType = null;
		var lX;
		var lY;
		var lElement;
		var lIndex;
		var _g = 0;
		var _g1 = Reflect.fields(com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.jSon);
		while(_g < _g1.length) {
			var object = _g1[_g];
			++_g;
			lInstance = Reflect.field(com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.jSon,object);
			lType = Reflect.field(lInstance,"type");
			lX = Reflect.field(lInstance,"x") | 0;
			lY = Reflect.field(lInstance,"y") | 0;
			lIndex = Reflect.field(lInstance,"index") | 0;
			lElement = { instanceID : lType, type : lType, width : 200, height : 150, x : lX, y : lY, globalX : lX * 200, globalY : lY * 150, index : lIndex};
			if(this.jsonGrid[lX] == null) {
				return;
			}
			if(this.jsonGrid[lX][lY] != null) {
				this.jsonGrid[lX][lY].push(lElement);
			}
		}
	}
	,generateGrid: function() {
		var lTile = null;
		com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.jSon = com_isartdigital_utils_loader_GameLoader.getContent("specialFeatureMaps/Map" + com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().currentMap + ".json");
		this.initGrid();
		this.initJsonGrid();
		var _g = 0;
		while(_g < 9) {
			var x = _g++;
			var _g1 = 0;
			while(_g1 < 5) {
				var y = _g1++;
				var _g3 = 0;
				var _g2 = this.jsonGrid[x][y].length;
				while(_g3 < _g2) {
					var object = _g3++;
					lTile = js_Boot.__cast(com_isartdigital_utils_game_pooling_PoolManager.getFromPool(this.jsonGrid[x][y][object].type) , com_isartdigital_ruby_game_specialFeature_tiles_Tile);
					lTile.type = this.jsonGrid[x][y][object].type;
					lTile.index = this.jsonGrid[x][y][object].index;
					lTile.x = this.jsonGrid[x][y][object].globalX;
					lTile.y = this.jsonGrid[x][y][object].globalY;
					lTile.positionInGrid = new PIXI.Point(x,y);
					this.addTileInRightContainer(lTile);
				}
			}
		}
	}
	,generatePropagationGrid: function(pAlienType) {
		var lCell;
		var _g = 0;
		while(_g < 17) {
			var x = _g++;
			var _g1 = 0;
			while(_g1 < 9) {
				var y = _g1++;
				this.propagationGrid[x][y] = -1 * (x % 2) * (y % 2);
			}
		}
		var _g2 = 0;
		while(_g2 < 9) {
			var x1 = _g2++;
			var _g11 = 0;
			while(_g11 < 5) {
				var y1 = _g11++;
				lCell = this.jsonGrid[x1][y1];
				var _g21 = 0;
				while(_g21 < lCell.length) {
					var object = lCell[_g21];
					++_g21;
					if(object.type.substring(0,4) == "Clue") {
						this.propagationGrid[2 * x1][2 * y1] = 1;
					} else if(object.type == "WallBot") {
						this.propagationGrid[2 * x1][2 * y1 + 1] = -1;
					} else if(object.type == "WallTop") {
						this.propagationGrid[2 * x1][2 * y1 - 1] = -1;
					} else if(object.type == "WallLeft") {
						this.propagationGrid[2 * x1 - 1][2 * y1] = -1;
					} else if(object.type == "WallRight") {
						this.propagationGrid[2 * x1 + 1][2 * y1] = -1;
					} else if(object.type == "HardBrick") {
						this.propagationGrid[2 * x1][2 * y1] = -1;
					} else if(object.type == "Lava") {
						if(pAlienType == "Tank") {
							this.propagationGrid[2 * x1][2 * y1] = 0;
						} else {
							this.propagationGrid[2 * x1][2 * y1] = -1;
						}
					}
				}
			}
		}
	}
	,addTileInRightContainer: function(pTile) {
		if(js_Boot.__instanceof(pTile,com_isartdigital_ruby_game_specialFeature_tiles_classes_AlienSpawn)) {
			pTile.start();
			com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.getInstance().tileList.push(pTile);
			com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().wallsContainer.addChild(pTile);
		}
		if(js_Boot.__instanceof(pTile,com_isartdigital_ruby_game_specialFeature_tiles_classes_Walls) || js_Boot.__instanceof(pTile,com_isartdigital_ruby_game_specialFeature_tiles_classes_Lava)) {
			pTile.start();
			com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.getInstance().tileList.push(pTile);
			com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().wallsContainer.addChild(pTile);
		} else if(js_Boot.__instanceof(pTile,com_isartdigital_ruby_game_specialFeature_tiles_classes_Clue) || js_Boot.__instanceof(pTile,com_isartdigital_ruby_game_specialFeature_tiles_classes_HardBrick)) {
			pTile.start();
			com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.getInstance().tileList.push(pTile);
			com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().blocsContainer.addChild(pTile);
		} else if(js_Boot.__instanceof(pTile,com_isartdigital_ruby_game_specialFeature_tiles_classes_SpecialFeatureItem)) {
			pTile.start();
			com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.getInstance().tileList.push(pTile);
			com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().ressourcesContainer.addChild(pTile);
		}
	}
	,calculatePropagation: function(pAlienPos,pStamina,pfirstTime) {
		if(pfirstTime == null) {
			pfirstTime = true;
		}
		var lVector3;
		if(pfirstTime) {
			this.propagationPath = [];
			lVector3 = { x : Math.floor(pAlienPos.x), y : Math.floor(pAlienPos.y), z : pStamina};
			this.propagationPath.push(lVector3);
		}
		var deltaX;
		var deltaY;
		var staminaCost;
		var lX;
		var lY;
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			deltaX = (1 - i % 2) * (1 - Math.floor(i / 2) * 2);
			deltaY = (1 - (i + 1) % 2) * (1 - Math.floor(i / 2) * 2);
			lX = Math.floor(pAlienPos.x) + deltaX;
			lY = Math.floor(pAlienPos.y) + deltaY;
			if(lX < 0 || lX >= 17 || lY < 0 || lY >= 9) {
				continue;
			}
			staminaCost = this.propagationGrid[lX][lY];
			lVector3 = { x : lX, y : lY, z : pStamina - staminaCost};
			if(staminaCost == -1) {
				continue;
			}
			if(lVector3.z < 0) {
				continue;
			}
			if(this.isInVectorArray(lVector3,this.propagationPath)) {
				continue;
			} else {
				this.propagationPath.push(lVector3);
				this.calculatePropagation(new PIXI.Point(lVector3.x,lVector3.y),lVector3.z,false);
			}
		}
	}
	,cleanVector3Array: function() {
		var lVector;
		var lLength = this.propagationPath.length;
		var _g1 = 0;
		while(_g1 < lLength) {
			lVector = this.propagationPath[lLength - 1 - _g1++];
			if(lVector.x % 2 == 1 || lVector.y % 2 == 1) {
				HxOverrides.remove(this.propagationPath,lVector);
			}
		}
		var _g = 0;
		var _g11 = this.propagationPath;
		while(_g < _g11.length) {
			var vector = _g11[_g];
			++_g;
			vector.x = Math.floor(vector.x / 2);
			vector.y = Math.floor(vector.y / 2);
		}
	}
	,isInVectorArray: function(pVector3,pVector3Array) {
		if(pVector3Array.length == 0) {
			return false;
		}
		var lVector;
		var lLength = pVector3Array.length;
		var _g1 = 0;
		while(_g1 < lLength) {
			lVector = pVector3Array[lLength - 1 - _g1++];
			if(lVector.x == pVector3.x && lVector.y == pVector3.y) {
				if(lVector.z < pVector3.z) {
					HxOverrides.remove(pVector3Array,lVector);
				} else {
					return true;
				}
			}
		}
		return false;
	}
	,getPropagationPath: function(pAlienType,pAlienPos,pStamina) {
		this.generatePropagationGrid(pAlienType);
		this.calculatePropagation(new PIXI.Point(pAlienPos.x * 2,pAlienPos.y * 2),pStamina);
		this.cleanVector3Array();
		return this.propagationPath;
	}
	,checkForRessource: function(pTarget) {
		var jsonList = this.jsonGrid[Math.round(pTarget.x)][Math.round(pTarget.y)];
		if(jsonList != null) {
			var _g1 = 0;
			var _g = jsonList.length;
			while(_g1 < _g) if(jsonList[_g1++].type.substring(0,4) == "Item") {
				return true;
			}
		}
		return false;
	}
	,checkWallinNextPos: function(pAlienPos,pTarget) {
		var DeltaX;
		var DeltaY;
		var alienList = this.jsonGrid[Math.round(pAlienPos.x)][Math.round(pAlienPos.y)];
		var targetList = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().jsonGrid[Math.round(pTarget.x)][Math.round(pTarget.y)];
		var direction = null;
		DeltaX = Math.floor(pTarget.x - pAlienPos.x);
		DeltaY = Math.floor(pTarget.y - pAlienPos.y);
		if(DeltaX != 0) {
			if(DeltaX == 1) {
				direction = "Right";
			} else {
				direction = "Left";
			}
		}
		if(DeltaY != 0) {
			if(DeltaY == 1) {
				direction = "Bot";
			} else {
				direction = "Top";
			}
		}
		var _g1 = 0;
		var _g = alienList.length;
		while(_g1 < _g) if(alienList[_g1++].type == "Wall" + direction) {
			return true;
		}
		if(DeltaX != 0) {
			if(DeltaX == -1) {
				direction = "Right";
			} else {
				direction = "Left";
			}
		}
		if(DeltaY != 0) {
			if(DeltaY == -1) {
				direction = "Bot";
			} else {
				direction = "Top";
			}
		}
		if(targetList != null) {
			var _g11 = 0;
			var _g2 = targetList.length;
			while(_g11 < _g2) if(targetList[_g11++].type == "Wall" + direction) {
				return true;
			}
		}
		return false;
	}
	,getGlobalMouseCoords: function(pContainer) {
		return com_isartdigital_ruby_game_controller_Controller.getInstance().getPosFrom(pContainer);
	}
	,getGlobalGridCoords: function(pPos) {
		return new PIXI.Point(pPos.x * 200,pPos.y * 150);
	}
	,getGridCoords: function(pGlobalPosition) {
		return new PIXI.Point(Math.round(pGlobalPosition.x / 200),Math.round(pGlobalPosition.y / 150));
	}
	,destroy: function() {
		com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.instance = null;
	}
	,__class__: com_isartdigital_ruby_game_specialFeature_managers_SFGridManager
};
var com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager = function() {
	this.skillTilesList = [];
	this.tileList = [];
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.managers.SFTilesManager"] = com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager;
com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.__name__ = ["com","isartdigital","ruby","game","specialFeature","managers","SFTilesManager"];
com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.getInstance = function() {
	if(com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.instance == null) {
		com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.instance = new com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager();
	}
	return com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.instance;
};
com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.prototype = {
	removeInTileList: function(pJsonObject) {
		var gridMousePos = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().gridMousePos;
		var _g1 = 0;
		var _g = this.tileList.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.tileList[i].positionInGrid.x == gridMousePos.x && this.tileList[i].positionInGrid.y == gridMousePos.y && this.tileList[i].type == pJsonObject.type) {
				if(pJsonObject.type.substring(0,4) == "Item") {
					com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().ressourcesContainer.removeChild(this.tileList[i]);
				}
				if(pJsonObject.type.substring(0,4) == "Clue" || pJsonObject.type.substring(0,9) == "HardBrick") {
					com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().blocsContainer.removeChild(this.tileList[i]);
				}
				if(pJsonObject.type.substring(0,4) != "Wall") {
					pJsonObject.type = "destroyed";
				}
				return;
			}
		}
	}
	,addSpecialTile: function(pTileType,pTarget) {
		var lTile = null;
		if(pTileType == "dig") {
			lTile = js_Boot.__cast(com_isartdigital_utils_game_pooling_PoolManager.getFromPool("ClueEmptyOrange") , com_isartdigital_ruby_game_specialFeature_tiles_Tile);
		} else if(pTileType == "move") {
			lTile = js_Boot.__cast(com_isartdigital_utils_game_pooling_PoolManager.getFromPool("ClueEmptyBlue") , com_isartdigital_ruby_game_specialFeature_tiles_Tile);
		} else if(pTileType == "skill") {
			lTile = js_Boot.__cast(com_isartdigital_utils_game_pooling_PoolManager.getFromPool("ClueEmptyOrange") , com_isartdigital_ruby_game_specialFeature_tiles_Tile);
		} else {
			return;
		}
		com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().skillContainer.addChild(lTile);
		lTile.position = pTarget;
		lTile.start();
	}
	,removeSpecialTile: function() {
		var length = com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().skillContainer.children.length;
		var child;
		var _g1 = 0;
		while(_g1 < length) {
			var i = _g1++;
			child = js_Boot.__cast(com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().skillContainer.children[length - 1 - i] , com_isartdigital_utils_game_pooling_PoolObject);
			child.dispose();
		}
	}
	,isTileInRange: function(pTarget) {
		var lAlien = com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().selectedAlien;
		var lAlienPos = com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.getInstance().getGridCoords(lAlien.position);
		return Math.floor(Math.abs(lAlienPos.x - pTarget.x) + Math.abs(lAlienPos.y - pTarget.y)) <= lAlien.powerRange;
	}
	,destroy: function() {
		com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.instance = null;
	}
	,__class__: com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager
};
var com_isartdigital_utils_ui_UIComponent = function(pID) {
	this.modal = true;
	this.modalImage = "assets/alpha_bg.png";
	this.positionables = [];
	com_isartdigital_utils_game_GameObject.call(this);
	if(pID == null) {
		this.componentName = Type.getClassName(js_Boot.getClass(this));
		this.componentName = this.componentName.substring(this.componentName.lastIndexOf(".") + 1);
	} else {
		this.componentName = pID;
	}
};
$hxClasses["com.isartdigital.utils.ui.UIComponent"] = com_isartdigital_utils_ui_UIComponent;
com_isartdigital_utils_ui_UIComponent.__name__ = ["com","isartdigital","utils","ui","UIComponent"];
com_isartdigital_utils_ui_UIComponent.__super__ = com_isartdigital_utils_game_GameObject;
com_isartdigital_utils_ui_UIComponent.prototype = $extend(com_isartdigital_utils_game_GameObject.prototype,{
	set_modalImage: function(pImage) {
		this.modalImage = pImage;
		if(this.modalZone != null) {
			this.modalZone.texture = PIXI.Texture.fromImage(this.modalImage);
		}
		return this.modalImage;
	}
	,build: function(pFrame) {
		if(pFrame == null) {
			pFrame = 0;
		}
		var lItems = com_isartdigital_utils_ui_smart_UIBuilder.build(this.componentName,pFrame);
		var _g = 0;
		while(_g < lItems.length) {
			var lItem = lItems[_g];
			++_g;
			this.addChild(lItem.item);
			if(lItem.align != "") {
				this.positionables.push(lItem);
			}
		}
	}
	,open: function() {
		if(this.isOpened) {
			return;
		}
		this.isOpened = true;
		this.set_modal(this.modal);
		com_isartdigital_utils_game_GameStage.getInstance().on("resize",$bind(this,this.onResize));
		this.onResize();
	}
	,set_modal: function(pModal) {
		this.modal = pModal;
		if(this.modal) {
			if(this.modalZone == null) {
				this.modalZone = new PIXI.Sprite(PIXI.Texture.fromImage(com_isartdigital_utils_Config.url(this.modalImage)));
				this.modalZone.interactive = true;
				this.modalZone.on("click",$bind(this,this.stopPropagation));
				this.modalZone.on("tap",$bind(this,this.stopPropagation));
				this.positionables.unshift({ item : this.modalZone, align : "fitScreen", offsetX : 0, offsetY : 0});
			}
			if(this.parent != null) {
				this.parent.addChildAt(this.modalZone,this.parent.getChildIndex(this));
			}
		} else if(this.modalZone != null) {
			if(this.modalZone.parent != null) {
				this.modalZone.parent.removeChild(this.modalZone);
			}
			this.modalZone.off("click",$bind(this,this.stopPropagation));
			this.modalZone.off("tap",$bind(this,this.stopPropagation));
			this.modalZone = null;
			if(this.positionables[0].item == this.modalZone) {
				this.positionables.shift();
			}
		}
		return this.modal;
	}
	,stopPropagation: function(pEvent) {
	}
	,close: function() {
		if(!this.isOpened) {
			return;
		}
		this.isOpened = false;
		this.set_modal(false);
		this.destroy();
	}
	,onResize: function(pEvent) {
		var _g = 0;
		var _g1 = this.positionables;
		while(_g < _g1.length) {
			var lObj = _g1[_g];
			++_g;
			if(lObj.update) {
				if(lObj.align == "top" || lObj.align == "topLeft" || lObj.align == "topRight") {
					lObj.offsetY = this.parent.y + lObj.item.y;
				} else if(lObj.align == "bottom" || lObj.align == "bottomLeft" || lObj.align == "bottomRight") {
					lObj.offsetY = com_isartdigital_utils_game_GameStage.getInstance().get_safeZone().height - this.parent.y - lObj.item.y;
				}
				if(lObj.align == "left" || lObj.align == "topLeft" || lObj.align == "bottomLeft") {
					lObj.offsetX = this.parent.x + lObj.item.x;
				} else if(lObj.align == "right" || lObj.align == "topRight" || lObj.align == "bottomRight") {
					lObj.offsetX = com_isartdigital_utils_game_GameStage.getInstance().get_safeZone().width - this.parent.x - lObj.item.x;
				}
				lObj.update = false;
			}
			com_isartdigital_utils_ui_UIPosition.setPosition(lObj.item,lObj.align,lObj.offsetX,lObj.offsetY);
		}
	}
	,destroy: function() {
		this.close();
		com_isartdigital_utils_game_GameStage.getInstance().off("resize",$bind(this,this.onResize));
		com_isartdigital_utils_game_GameObject.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_utils_ui_UIComponent
	,__properties__: {set_modal:"set_modal",set_modalImage:"set_modalImage"}
});
var com_isartdigital_utils_ui_Screen = function(pID) {
	com_isartdigital_utils_ui_UIComponent.call(this,pID);
	this.set_modalImage("assets/black_bg.png");
};
$hxClasses["com.isartdigital.utils.ui.Screen"] = com_isartdigital_utils_ui_Screen;
com_isartdigital_utils_ui_Screen.__name__ = ["com","isartdigital","utils","ui","Screen"];
com_isartdigital_utils_ui_Screen.__super__ = com_isartdigital_utils_ui_UIComponent;
com_isartdigital_utils_ui_Screen.prototype = $extend(com_isartdigital_utils_ui_UIComponent.prototype,{
	__class__: com_isartdigital_utils_ui_Screen
});
var com_isartdigital_utils_ui_smart_SmartScreen = function(pID) {
	com_isartdigital_utils_ui_Screen.call(this,pID);
	this.build();
	this.buttonMode = true;
	this.interactive = true;
	this.defaultCursor = "url(assets/Curseur.png), auto";
};
$hxClasses["com.isartdigital.utils.ui.smart.SmartScreen"] = com_isartdigital_utils_ui_smart_SmartScreen;
com_isartdigital_utils_ui_smart_SmartScreen.__name__ = ["com","isartdigital","utils","ui","smart","SmartScreen"];
com_isartdigital_utils_ui_smart_SmartScreen.__super__ = com_isartdigital_utils_ui_Screen;
com_isartdigital_utils_ui_smart_SmartScreen.prototype = $extend(com_isartdigital_utils_ui_Screen.prototype,{
	__class__: com_isartdigital_utils_ui_smart_SmartScreen
});
var com_isartdigital_ruby_ui_screens_SmartScreenRegister = function(pID) {
	com_isartdigital_utils_ui_smart_SmartScreen.call(this,pID);
	this.name = this.componentName;
	this.ftueRegister();
};
$hxClasses["com.isartdigital.ruby.ui.screens.SmartScreenRegister"] = com_isartdigital_ruby_ui_screens_SmartScreenRegister;
com_isartdigital_ruby_ui_screens_SmartScreenRegister.__name__ = ["com","isartdigital","ruby","ui","screens","SmartScreenRegister"];
com_isartdigital_ruby_ui_screens_SmartScreenRegister.__super__ = com_isartdigital_utils_ui_smart_SmartScreen;
com_isartdigital_ruby_ui_screens_SmartScreenRegister.prototype = $extend(com_isartdigital_utils_ui_smart_SmartScreen.prototype,{
	ftueRegister: function() {
		var _g1 = 0;
		var _g = this.children.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(js_Boot.__instanceof(this.children[i],com_isartdigital_utils_ui_smart_SmartButton)) {
				com_isartdigital_ruby_ui_ftue_FTUEManager.register(this.children[i]);
			} else if(js_Boot.__instanceof(this.children[i],com_isartdigital_utils_ui_smart_SmartComponent)) {
				com_isartdigital_ruby_ui_ftue_FTUEManager.register(this.children[i]);
			}
		}
	}
	,close: function() {
		com_isartdigital_utils_ui_smart_SmartScreen.prototype.close.call(this);
	}
	,__class__: com_isartdigital_ruby_ui_screens_SmartScreenRegister
});
var com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen = function(pID) {
	this.playerSchema = 0;
	this.closeFlag = false;
	this.alienHudList = [];
	this.alienHudInfoList = [];
	com_isartdigital_ruby_ui_screens_SmartScreenRegister.call(this,pID);
	this.set_modalImage("assets/sft.png");
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.managers.SpecialFeatureScreen"] = com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen;
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.__name__ = ["com","isartdigital","ruby","game","specialFeature","managers","SpecialFeatureScreen"];
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.getInstance = function() {
	if(com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.instance == null) {
		com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.instance = new com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen();
	}
	return com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.instance;
};
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.__super__ = com_isartdigital_ruby_ui_screens_SmartScreenRegister;
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.prototype = $extend(com_isartdigital_ruby_ui_screens_SmartScreenRegister.prototype,{
	initContainers: function() {
		this.aliensContainer = js_Boot.__cast(this.getChildByName("ItemContainer") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.tilesContainer = js_Boot.__cast(this.getChildByName("CaseContainer") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.hcContainer = js_Boot.__cast(this.getChildByName("HCContainer") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.scContainer = js_Boot.__cast(this.getChildByName("SCContainer") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.mnContainer = js_Boot.__cast(this.getChildByName("MNContainer") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.schemasContainer = js_Boot.__cast(this.getChildByName("ArchivesContainer") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.genesContainer = js_Boot.__cast(this.getChildByName("GeneContainer") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.geneContainer1 = js_Boot.__cast(this.genesContainer.getChildByName("Gene #0") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.geneContainer2 = js_Boot.__cast(this.genesContainer.getChildByName("Gene #1") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.geneContainer3 = js_Boot.__cast(this.genesContainer.getChildByName("Gene #2") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.geneContainer4 = js_Boot.__cast(this.genesContainer.getChildByName("Gene #3") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.geneContainer5 = js_Boot.__cast(this.genesContainer.getChildByName("Gene #4") , com_isartdigital_utils_ui_smart_SmartComponent);
		var _g = 0;
		while(_g < 3) {
			this.alienSuffixe = js_Boot.__cast(this.aliensContainer.getChildByName("item #" + _g++) , com_isartdigital_utils_ui_smart_SmartComponent);
			this.alienSuffixe.visible = false;
		}
	}
	,initHud: function() {
		this.activatedAlienList = com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().activatedAlienList;
		this.initAlienHud();
		this.updateRessourceHud();
		this.updateAlienHud();
		(this.alienSelection(0,"Move"))();
		this.btnInfo = js_Boot.__cast(this.getChildByName("SpecialFeature_btn_Info") , com_isartdigital_utils_ui_smart_SmartButton);
		this.btnInfo.on("click",$bind(this,this.onInfo));
		this.btnInfo.on("tap",$bind(this,this.onInfo));
		this.btnClose = js_Boot.__cast(this.getChildByName("btn_Close") , com_isartdigital_utils_ui_smart_SmartButton);
		this.btnClose.on("click",$bind(this,this.onClose));
		this.btnClose.on("tap",$bind(this,this.onClose));
	}
	,onInfo: function() {
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_TutoSpecialFeature.getInstance());
	}
	,alienSelection: function(pAlienIndex,pMode) {
		return function() {
			com_isartdigital_ruby_game_specialFeature_managers_SFEventsManager.getInstance().selectAlienOnHud(pAlienIndex,pMode);
		};
	}
	,updateRessourceHud: function() {
		(js_Boot.__cast(this.hcContainer.getChildByName("txt_Reward") , com_isartdigital_utils_ui_smart_TextSprite)).set_text(Std.string(com_isartdigital_ruby_game_player_Player.getInstance().hardCurrency));
		(js_Boot.__cast(this.scContainer.getChildByName("txt_Reward") , com_isartdigital_utils_ui_smart_TextSprite)).set_text(Std.string(com_isartdigital_ruby_game_player_Player.getInstance().softCurrency));
		(js_Boot.__cast(this.mnContainer.getChildByName("txt_Reward") , com_isartdigital_utils_ui_smart_TextSprite)).set_text(Std.string(com_isartdigital_ruby_game_player_Player.getInstance().ressource));
		(js_Boot.__cast(this.schemasContainer.getChildByName("txt_Reward") , com_isartdigital_utils_ui_smart_TextSprite)).set_text(Std.string(this.playerSchema));
		(js_Boot.__cast(this.geneContainer1.getChildByName("txt_Reward") , com_isartdigital_utils_ui_smart_TextSprite)).set_text(Std.string(_$UInt_UInt_$Impl_$.toFloat(com_isartdigital_ruby_game_player_Player.getInstance().gene1)));
		(js_Boot.__cast(this.geneContainer2.getChildByName("txt_Reward") , com_isartdigital_utils_ui_smart_TextSprite)).set_text(Std.string(_$UInt_UInt_$Impl_$.toFloat(com_isartdigital_ruby_game_player_Player.getInstance().gene2)));
		(js_Boot.__cast(this.geneContainer3.getChildByName("txt_Reward") , com_isartdigital_utils_ui_smart_TextSprite)).set_text(Std.string(_$UInt_UInt_$Impl_$.toFloat(com_isartdigital_ruby_game_player_Player.getInstance().gene3)));
		(js_Boot.__cast(this.geneContainer4.getChildByName("txt_Reward") , com_isartdigital_utils_ui_smart_TextSprite)).set_text(Std.string(_$UInt_UInt_$Impl_$.toFloat(com_isartdigital_ruby_game_player_Player.getInstance().gene4)));
		(js_Boot.__cast(this.geneContainer5.getChildByName("txt_Reward") , com_isartdigital_utils_ui_smart_TextSprite)).set_text(Std.string(_$UInt_UInt_$Impl_$.toFloat(com_isartdigital_ruby_game_player_Player.getInstance().gene5)));
	}
	,updateAlienHud: function() {
		var index = 0;
		var _g = 0;
		var _g1 = this.activatedAlienList;
		while(_g < _g1.length) {
			var alien = _g1[_g];
			++_g;
			this.staminaBarWidth = alien.stamina * this.staminaBarMaxWidth / alien.maxStamina;
			if(this.staminaBarWidth >= this.staminaBarMaxWidth) {
				this.staminaBarWidth = this.staminaBarMaxWidth;
			}
			if(this.staminaBarWidth <= 0) {
				this.staminaBarWidth = 0;
			}
			this.alienHudList[index].staminaBar.width = this.staminaBarWidth;
			++index;
		}
	}
	,initAlienHud: function() {
		var alienHud;
		var index = 0;
		var _g = 0;
		var _g1 = this.activatedAlienList;
		while(_g < _g1.length) {
			var alien = _g1[_g];
			++_g;
			this.alienSuffixe = js_Boot.__cast(this.aliensContainer.getChildByName("item #" + index) , com_isartdigital_utils_ui_smart_SmartComponent);
			this.alienSuffixe.visible = true;
			alienHud = { skillBtn : js_Boot.__cast(this.alienSuffixe.getChildByName("SwitchSkill") , com_isartdigital_utils_ui_smart_SmartComponent), moveBtn : js_Boot.__cast(this.alienSuffixe.getChildByName("SwitchMove") , com_isartdigital_utils_ui_smart_SmartComponent), staminaBar : js_Boot.__cast(this.alienSuffixe.getChildByName("XenoBarCharging") , com_isartdigital_utils_ui_smart_UISprite), xenoName : js_Boot.__cast(this.alienSuffixe.getChildByName("txt_XenoName") , com_isartdigital_utils_ui_smart_TextSprite)};
			alienHud.xenoName.set_text(alien.alienType);
			(js_Boot.__cast(this.alienSuffixe.getChildByName("SwitchSkill") , com_isartdigital_ruby_ui_items_switchItems_SpecialFeatureSwitchSkill)).init();
			(js_Boot.__cast(this.alienSuffixe.getChildByName("SwitchSkill") , com_isartdigital_ruby_ui_items_switchItems_SpecialFeatureSwitchSkill)).initAlien(alien);
			this.staminaBarMaxWidth = alienHud.staminaBar.width;
			this.staminaBarWidth = alien.stamina * this.staminaBarMaxWidth / alien.maxStamina;
			alienHud.staminaBar.width = this.staminaBarWidth;
			alienHud.moveBtn.interactive = true;
			alienHud.skillBtn.interactive = true;
			alienHud.moveBtn.on("click",this.alienSelection(index,"Move"));
			alienHud.moveBtn.on("tap",this.alienSelection(index,"Move"));
			alienHud.skillBtn.on("click",this.alienSelection(index,"Skill"));
			alienHud.skillBtn.on("tap",this.alienSelection(index,"Skill"));
			this.alienHudList.push(alienHud);
			++index;
		}
	}
	,getRessourceHudPosition: function(pRewardType) {
		if(pRewardType == "ItemGeneOne") {
			return this.genesContainer.toGlobal(this.geneContainer1.position);
		}
		if(pRewardType == "ItemGeneTwo") {
			return this.genesContainer.toGlobal(this.geneContainer2.position);
		}
		if(pRewardType == "ItemGeneThree") {
			return this.genesContainer.toGlobal(this.geneContainer3.position);
		}
		if(pRewardType == "ItemGeneFour") {
			return this.genesContainer.toGlobal(this.geneContainer4.position);
		}
		if(pRewardType == "ItemGeneFive") {
			return this.genesContainer.toGlobal(this.geneContainer5.position);
		}
		if(pRewardType == "ItemDarkMatter") {
			return this.toGlobal(this.mnContainer.position);
		}
		if(pRewardType == "ItemBluePrint") {
			return this.toGlobal(this.schemasContainer.position);
		}
		if(pRewardType == "ItemHC") {
			return this.toGlobal(this.hcContainer.position);
		}
		if(pRewardType == "ItemSC") {
			return this.toGlobal(this.scContainer.position);
		} else {
			return this.toGlobal(this.btnClose.position);
		}
	}
	,onClose: function() {
		this.removeAllListeners();
		com_isartdigital_ruby_game_GameManager.getInstance().setModeNormal();
		com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().destroy();
		com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.getInstance().destroy();
		com_isartdigital_ruby_game_specialFeature_managers_SFEventsManager.getInstance().destroy();
		com_isartdigital_ruby_game_specialFeature_managers_SFAliensEventManager.getInstance().destroy();
		com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().destroy();
		com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.getInstance().destroy();
		com_isartdigital_utils_sounds_SoundManager.getSound("soundMusicSpecialFeature").stop();
		com_isartdigital_ruby_ui_UIManager.getInstance().closeScreens();
		com_isartdigital_ruby_ui_UIManager.getInstance().openHud();
		com_isartdigital_ruby_ui_hud_Hud.getInstance().update();
		com_isartdigital_ruby_ui_popin_SmartPopinRegister.event.emit("onClose");
	}
	,destroy: function() {
		com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.instance = null;
	}
	,__class__: com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen
});
var com_isartdigital_ruby_game_specialFeature_tiles_Tile = function(pAsset) {
	com_isartdigital_utils_game_pooling_PoolObject.call(this,pAsset);
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.tiles.Tile"] = com_isartdigital_ruby_game_specialFeature_tiles_Tile;
com_isartdigital_ruby_game_specialFeature_tiles_Tile.__name__ = ["com","isartdigital","ruby","game","specialFeature","tiles","Tile"];
com_isartdigital_ruby_game_specialFeature_tiles_Tile.__super__ = com_isartdigital_utils_game_pooling_PoolObject;
com_isartdigital_ruby_game_specialFeature_tiles_Tile.prototype = $extend(com_isartdigital_utils_game_pooling_PoolObject.prototype,{
	getRandomNumber: function(pMaxValue) {
		return Math.floor(Math.random() * pMaxValue);
	}
	,dispose: function() {
		com_isartdigital_utils_game_pooling_PoolObject.prototype.dispose.call(this);
	}
	,__class__: com_isartdigital_ruby_game_specialFeature_tiles_Tile
});
var com_isartdigital_ruby_game_specialFeature_tiles_classes_AlienSpawn = function(pAsset) {
	com_isartdigital_ruby_game_specialFeature_tiles_Tile.call(this,pAsset);
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.tiles.classes.AlienSpawn"] = com_isartdigital_ruby_game_specialFeature_tiles_classes_AlienSpawn;
com_isartdigital_ruby_game_specialFeature_tiles_classes_AlienSpawn.__name__ = ["com","isartdigital","ruby","game","specialFeature","tiles","classes","AlienSpawn"];
com_isartdigital_ruby_game_specialFeature_tiles_classes_AlienSpawn.__super__ = com_isartdigital_ruby_game_specialFeature_tiles_Tile;
com_isartdigital_ruby_game_specialFeature_tiles_classes_AlienSpawn.prototype = $extend(com_isartdigital_ruby_game_specialFeature_tiles_Tile.prototype,{
	__class__: com_isartdigital_ruby_game_specialFeature_tiles_classes_AlienSpawn
});
var com_isartdigital_ruby_game_specialFeature_tiles_classes_Clue = function(pAsset) {
	if(pAsset != "ClueEmptyOrange" && pAsset != "ClueEmptyOrange" && pAsset != "ClueEmptyBlue") {
		pAsset += this.getRandomNumber(3);
	}
	com_isartdigital_ruby_game_specialFeature_tiles_Tile.call(this,pAsset);
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.tiles.classes.Clue"] = com_isartdigital_ruby_game_specialFeature_tiles_classes_Clue;
com_isartdigital_ruby_game_specialFeature_tiles_classes_Clue.__name__ = ["com","isartdigital","ruby","game","specialFeature","tiles","classes","Clue"];
com_isartdigital_ruby_game_specialFeature_tiles_classes_Clue.__super__ = com_isartdigital_ruby_game_specialFeature_tiles_Tile;
com_isartdigital_ruby_game_specialFeature_tiles_classes_Clue.prototype = $extend(com_isartdigital_ruby_game_specialFeature_tiles_Tile.prototype,{
	__class__: com_isartdigital_ruby_game_specialFeature_tiles_classes_Clue
});
var com_isartdigital_ruby_game_specialFeature_tiles_classes_HardBrick = function(pAsset) {
	com_isartdigital_ruby_game_specialFeature_tiles_Tile.call(this,pAsset);
	this.assetName = pAsset + this.getRandomNumber(3);
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.tiles.classes.HardBrick"] = com_isartdigital_ruby_game_specialFeature_tiles_classes_HardBrick;
com_isartdigital_ruby_game_specialFeature_tiles_classes_HardBrick.__name__ = ["com","isartdigital","ruby","game","specialFeature","tiles","classes","HardBrick"];
com_isartdigital_ruby_game_specialFeature_tiles_classes_HardBrick.__super__ = com_isartdigital_ruby_game_specialFeature_tiles_Tile;
com_isartdigital_ruby_game_specialFeature_tiles_classes_HardBrick.prototype = $extend(com_isartdigital_ruby_game_specialFeature_tiles_Tile.prototype,{
	__class__: com_isartdigital_ruby_game_specialFeature_tiles_classes_HardBrick
});
var com_isartdigital_ruby_game_specialFeature_tiles_classes_Lava = function(pAsset) {
	com_isartdigital_ruby_game_specialFeature_tiles_Tile.call(this,pAsset);
	this.assetName = pAsset + this.getRandomNumber(3);
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.tiles.classes.Lava"] = com_isartdigital_ruby_game_specialFeature_tiles_classes_Lava;
com_isartdigital_ruby_game_specialFeature_tiles_classes_Lava.__name__ = ["com","isartdigital","ruby","game","specialFeature","tiles","classes","Lava"];
com_isartdigital_ruby_game_specialFeature_tiles_classes_Lava.__super__ = com_isartdigital_ruby_game_specialFeature_tiles_Tile;
com_isartdigital_ruby_game_specialFeature_tiles_classes_Lava.prototype = $extend(com_isartdigital_ruby_game_specialFeature_tiles_Tile.prototype,{
	__class__: com_isartdigital_ruby_game_specialFeature_tiles_classes_Lava
});
var com_isartdigital_ruby_game_specialFeature_tiles_classes_SpecialFeatureItem = function(pAsset) {
	com_isartdigital_ruby_game_specialFeature_tiles_Tile.call(this,pAsset);
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.tiles.classes.SpecialFeatureItem"] = com_isartdigital_ruby_game_specialFeature_tiles_classes_SpecialFeatureItem;
com_isartdigital_ruby_game_specialFeature_tiles_classes_SpecialFeatureItem.__name__ = ["com","isartdigital","ruby","game","specialFeature","tiles","classes","SpecialFeatureItem"];
com_isartdigital_ruby_game_specialFeature_tiles_classes_SpecialFeatureItem.__super__ = com_isartdigital_ruby_game_specialFeature_tiles_Tile;
com_isartdigital_ruby_game_specialFeature_tiles_classes_SpecialFeatureItem.prototype = $extend(com_isartdigital_ruby_game_specialFeature_tiles_Tile.prototype,{
	__class__: com_isartdigital_ruby_game_specialFeature_tiles_classes_SpecialFeatureItem
});
var com_isartdigital_ruby_game_specialFeature_tiles_classes_Walls = function(pAsset) {
	com_isartdigital_ruby_game_specialFeature_tiles_Tile.call(this,pAsset);
};
$hxClasses["com.isartdigital.ruby.game.specialFeature.tiles.classes.Walls"] = com_isartdigital_ruby_game_specialFeature_tiles_classes_Walls;
com_isartdigital_ruby_game_specialFeature_tiles_classes_Walls.__name__ = ["com","isartdigital","ruby","game","specialFeature","tiles","classes","Walls"];
com_isartdigital_ruby_game_specialFeature_tiles_classes_Walls.__super__ = com_isartdigital_ruby_game_specialFeature_tiles_Tile;
com_isartdigital_ruby_game_specialFeature_tiles_classes_Walls.prototype = $extend(com_isartdigital_ruby_game_specialFeature_tiles_Tile.prototype,{
	__class__: com_isartdigital_ruby_game_specialFeature_tiles_classes_Walls
});
var com_isartdigital_utils_game_iso_IZSortable = function() { };
$hxClasses["com.isartdigital.utils.game.iso.IZSortable"] = com_isartdigital_utils_game_iso_IZSortable;
com_isartdigital_utils_game_iso_IZSortable.__name__ = ["com","isartdigital","utils","game","iso","IZSortable"];
com_isartdigital_utils_game_iso_IZSortable.prototype = {
	__class__: com_isartdigital_utils_game_iso_IZSortable
};
var com_isartdigital_utils_loader_GameLoader = function() {
	this.soundsList = [];
	this.soundsSpecs = new haxe_ds_StringMap();
	PIXI.loaders.Loader.call(this);
	this.once("complete",$bind(this,this.onComplete));
};
$hxClasses["com.isartdigital.utils.loader.GameLoader"] = com_isartdigital_utils_loader_GameLoader;
com_isartdigital_utils_loader_GameLoader.__name__ = ["com","isartdigital","utils","loader","GameLoader"];
com_isartdigital_utils_loader_GameLoader.getContent = function(pFile) {
	var key = com_isartdigital_utils_Config.get_txtsPath() + pFile;
	var _this = com_isartdigital_utils_loader_GameLoader.txtLoaded;
	if(__map_reserved[key] != null) {
		return _this.getReserved(key);
	} else {
		return _this.h[key];
	}
};
com_isartdigital_utils_loader_GameLoader.getContentXml = function(pFile) {
	var key = com_isartdigital_utils_Config.get_langPath() + pFile;
	var _this = com_isartdigital_utils_loader_GameLoader.xmlLoaded;
	if(__map_reserved[key] != null) {
		return _this.getReserved(key);
	} else {
		return _this.h[key];
	}
};
com_isartdigital_utils_loader_GameLoader.__super__ = PIXI.loaders.Loader;
com_isartdigital_utils_loader_GameLoader.prototype = $extend(PIXI.loaders.Loader.prototype,{
	addTxtFile: function(pUrl) {
		this.add(com_isartdigital_utils_Config.url(com_isartdigital_utils_Config.get_txtsPath() + pUrl));
	}
	,addAssetFile: function(pUrl) {
		this.add(com_isartdigital_utils_Config.url(com_isartdigital_utils_Config.get_assetsPath() + pUrl));
	}
	,addSoundFile: function(pUrl) {
		var lUrl = com_isartdigital_utils_Config.get_soundsPath() + pUrl;
		this.soundsList.push(lUrl);
		this.add(com_isartdigital_utils_Config.url(lUrl));
	}
	,addFontFile: function(pUrl) {
		if(com_isartdigital_utils_system_DeviceCapabilities.get_isCanvasPlus()) {
			return;
		}
		this.add(com_isartdigital_utils_Config.url(com_isartdigital_utils_Config.get_fontsPath() + pUrl));
	}
	,addXMLFile: function(pUrl) {
		this.add(com_isartdigital_utils_Config.url(com_isartdigital_utils_Config.get_langPath() + pUrl));
	}
	,parseData: function(pResource,pNext) {
		com_isartdigital_utils_loader_GameLoader.ressourceName = pResource.url + " loaded";
		var lUrl = pResource.url.split("?")[0];
		if(lUrl.indexOf(".css") > 0) {
			var lData = pResource.data.split(";");
			var lFamilies = [];
			var lReg = new EReg("font-family:\\s?(.*)","");
			var _g1 = 0;
			var _g = lData.length;
			while(_g1 < _g) if(lReg.match(lData[_g1++])) {
				lFamilies.push(lReg.matched(1));
			}
			WebFont.load({ custom : { families : lFamilies, urls : [com_isartdigital_utils_Config.get_fontsPath() + "fonts.css"]}, active : pNext});
			return;
		}
		if(pResource.isJson) {
			var v = pResource.data;
			var _this = com_isartdigital_utils_loader_GameLoader.txtLoaded;
			if(__map_reserved[lUrl] != null) {
				_this.setReserved(lUrl,v);
			} else {
				_this.h[lUrl] = v;
			}
			if(HxOverrides.substr(lUrl,-12,12) == "library.json" && Object.prototype.hasOwnProperty.call(pResource.data,"md5") && Object.prototype.hasOwnProperty.call(pResource.data,"movies") && Object.prototype.hasOwnProperty.call(pResource.data,"textureGroups") && Object.prototype.hasOwnProperty.call(pResource.data,"frameRate")) {
				(pixi_flump_Parser.parse(1,com_isartdigital_utils_Config.cache))(pResource,pNext);
				return;
			} else if(this.soundsList.length > 0) {
				var lData1;
				var _g11 = 0;
				var _g2 = this.soundsList.length;
				while(_g11 < _g2) {
					var i = _g11++;
					if(lUrl == this.soundsList[i]) {
						this.soundsList.splice(i,1);
						lData1 = pResource.data;
						if(com_isartdigital_utils_system_DeviceCapabilities.get_isCocoonJS()) {
							if(lData1.extensions.indexOf("ogg") == -1) {
								throw new js__$Boot_HaxeError("CocoonJs needs ogg sounds. No sound will be played in the application.");
							} else {
								lData1.extensions = ["ogg"];
							}
						}
						var _g3 = 0;
						var _g21 = lData1.extensions.length;
						while(_g3 < _g21) if(Howler.codecs(lData1.extensions[_g3++])) {
							this.addSounds(lData1.fxs,false,lData1.extensions,lData1.extensions[i]);
							this.addSounds(lData1.musics,true,lData1.extensions,lData1.extensions[i]);
							break;
						}
						break;
					}
				}
			}
		} else if(pResource.isXml) {
			var v1 = Xml.parse(new XMLSerializer().serializeToString(pResource.data));
			var _this1 = com_isartdigital_utils_loader_GameLoader.txtLoaded;
			if(__map_reserved[lUrl] != null) {
				_this1.setReserved(lUrl,v1);
			} else {
				_this1.h[lUrl] = v1;
			}
		} else {
			var v2 = pResource.data;
			var _this2 = com_isartdigital_utils_loader_GameLoader.xmlLoaded;
			if(__map_reserved[lUrl] != null) {
				_this2.setReserved(lUrl,v2);
			} else {
				_this2.h[lUrl] = v2;
			}
		}
		pNext();
	}
	,manageCache: function(pResource,pNext) {
		if(pResource.name != pResource.url) {
			pResource.url = com_isartdigital_utils_Config.url(pResource.url);
		}
		pNext();
	}
	,addSounds: function(pList,pLoop,pExtensions,pCodec) {
		var lUrl;
		var _g = 0;
		var _g1 = Reflect.fields(pList);
		while(_g < _g1.length) {
			var lID = _g1[_g];
			++_g;
			lUrl = com_isartdigital_utils_Config.url(com_isartdigital_utils_Config.get_soundsPath() + lID + "." + pCodec);
			var value = { src : [lUrl], volume : Reflect.field(pList,lID) / 100, loop : pLoop};
			var _this = this.soundsSpecs;
			if(__map_reserved[lID] != null) {
				_this.setReserved(lID,value);
			} else {
				_this.h[lID] = value;
			}
			this.add(lUrl);
		}
	}
	,load: function(cb) {
		this.before($bind(this,this.manageCache));
		this.after($bind(this,this.parseData));
		return PIXI.loaders.Loader.prototype.load.call(this);
	}
	,onComplete: function() {
		var tmp = this.soundsSpecs.keys();
		while(tmp.hasNext()) {
			var lID = tmp.next();
			var _this = this.soundsSpecs;
			com_isartdigital_utils_sounds_SoundManager.addSound(lID,new Howl(__map_reserved[lID] != null?_this.getReserved(lID):_this.h[lID]));
		}
	}
	,__class__: com_isartdigital_utils_loader_GameLoader
});
var com_isartdigital_utils_Config = function() { };
$hxClasses["com.isartdigital.utils.Config"] = com_isartdigital_utils_Config;
com_isartdigital_utils_Config.__name__ = ["com","isartdigital","utils","Config"];
com_isartdigital_utils_Config.__properties__ = {get_data:"get_data",get_fontsPath:"get_fontsPath",get_soundsPath:"get_soundsPath",get_assetsPath:"get_assetsPath",get_txtsPath:"get_txtsPath",get_langPath:"get_langPath",get_qrcode:"get_qrcode",get_fps:"get_fps",get_debug:"get_debug",get_languages:"get_languages",get_language:"get_language",get_version:"get_version",get_gameName:"get_gameName"}
com_isartdigital_utils_Config.init = function(pConfig) {
	var _g = 0;
	var _g1 = Reflect.fields(pConfig);
	while(_g < _g1.length) {
		var i = _g1[_g];
		++_g;
		com_isartdigital_utils_Config._data[i] = Reflect.field(pConfig,i);
	}
	if(com_isartdigital_utils_Config._data.version == null || com_isartdigital_utils_Config._data.version == "") {
		com_isartdigital_utils_Config._data.version = "0.0.0";
	}
	if(com_isartdigital_utils_Config._data.gameName == null) {
		com_isartdigital_utils_Config._data.gameName = "";
	}
	var lStorage = js_Browser.getLocalStorage();
	var lVersion = lStorage.getItem(com_isartdigital_utils_Config.get_gameName()) == null?null:JSON.parse(lStorage.getItem(com_isartdigital_utils_Config.get_gameName())).version;
	if(lVersion != null) {
		com_isartdigital_utils_Config.cache = com_isartdigital_utils_Config.get_version() == lVersion;
	}
	lStorage.setItem(com_isartdigital_utils_Config.get_gameName(),JSON.stringify({ version : com_isartdigital_utils_Config.get_version()}));
	if(com_isartdigital_utils_Config._data.languages == "" || com_isartdigital_utils_Config._data.languages == []) {
		throw new js__$Boot_HaxeError("Pas de langues dans la liste des langues supportées");
	}
	if(com_isartdigital_utils_Config._data.language == null || com_isartdigital_utils_Config._data.language == "") {
		com_isartdigital_utils_Config._data.language = HxOverrides.substr(window.navigator.language,0,2);
	}
	if(com_isartdigital_utils_Config._data.languages.indexOf(com_isartdigital_utils_Config._data.language) == -1) {
		com_isartdigital_utils_Config._data.language = com_isartdigital_utils_Config._data.languages[0];
	}
	if(com_isartdigital_utils_Config._data.debug == null || com_isartdigital_utils_Config._data.debug == "") {
		com_isartdigital_utils_Config._data.debug = false;
	}
	if(com_isartdigital_utils_Config._data.fps == null || com_isartdigital_utils_Config._data.fps == "") {
		com_isartdigital_utils_Config._data.fps = false;
	}
	if(com_isartdigital_utils_Config._data.qrcode == null || com_isartdigital_utils_Config._data.qrcode == "") {
		com_isartdigital_utils_Config._data.qrcode = false;
	}
	if(com_isartdigital_utils_Config._data.langPath == null) {
		com_isartdigital_utils_Config._data.langPath = "";
	}
	if(com_isartdigital_utils_Config._data.txtsPath == null) {
		com_isartdigital_utils_Config._data.txtsPath = "";
	}
	if(com_isartdigital_utils_Config._data.assetsPath == null) {
		com_isartdigital_utils_Config._data.assetsPath = "";
	}
	if(com_isartdigital_utils_Config._data.fontsPath == null) {
		com_isartdigital_utils_Config._data.fontsPath = "";
	}
	if(com_isartdigital_utils_Config._data.soundsPath == null) {
		com_isartdigital_utils_Config._data.soundsPath = "";
	}
};
com_isartdigital_utils_Config.url = function(pPath) {
	return pPath + "?" + com_isartdigital_utils_Config.get_version();
};
com_isartdigital_utils_Config.get_data = function() {
	return com_isartdigital_utils_Config._data;
};
com_isartdigital_utils_Config.get_gameName = function() {
	return com_isartdigital_utils_Config._data.gameName;
};
com_isartdigital_utils_Config.get_version = function() {
	return com_isartdigital_utils_Config._data.version;
};
com_isartdigital_utils_Config.get_language = function() {
	return com_isartdigital_utils_Config.get_data().language;
};
com_isartdigital_utils_Config.get_languages = function() {
	return com_isartdigital_utils_Config.get_data().languages;
};
com_isartdigital_utils_Config.get_debug = function() {
	return com_isartdigital_utils_Config.get_data().debug;
};
com_isartdigital_utils_Config.get_fps = function() {
	return com_isartdigital_utils_Config.get_data().fps;
};
com_isartdigital_utils_Config.get_qrcode = function() {
	return com_isartdigital_utils_Config.get_data().qrcode;
};
com_isartdigital_utils_Config.get_langPath = function() {
	return com_isartdigital_utils_Config._data.langPath;
};
com_isartdigital_utils_Config.get_txtsPath = function() {
	return com_isartdigital_utils_Config._data.txtsPath;
};
com_isartdigital_utils_Config.get_assetsPath = function() {
	return com_isartdigital_utils_Config._data.assetsPath;
};
com_isartdigital_utils_Config.get_fontsPath = function() {
	return com_isartdigital_utils_Config._data.fontsPath;
};
com_isartdigital_utils_Config.get_soundsPath = function() {
	return com_isartdigital_utils_Config._data.soundsPath;
};
var com_isartdigital_ruby_game_sprites_elements_GameElement = function(pAsset) {
	this.contextualOpened = false;
	this.UPGRADING_STATE = "Upgrading";
	this.COLLECTING_STATE = "Recolting";
	this.WAITING_STATE = "Wait";
	this.CONSTRUCTING_STATE = "Constructing";
	this.SPAWNING_STATE = "Spawning";
	this.greyFilter = new PIXI.filters.ColorMatrixFilter();
	this.redFilter = new PIXI.filters.ColorMatrixFilter();
	this.hoverFilter = new PIXI.filters.ColorMatrixFilter();
	this.maxLevel = 1;
	this.level = 1;
	this.margin = 0;
	com_isartdigital_utils_game_pooling_PoolObject.call(this,pAsset);
	this.className = Type.getClassName(js_Boot.getClass(this)).split(".").pop();
	this.name = this.className;
	this.interactive = true;
	this.hoverFilter.matrix = [1.3,0,0,0,0,0,1.3,0,0,0,0,0,1.3,0,0,0,0,0,1,0];
	this.greyFilter.matrix = [0.309,0.609,0.082,0,0,0.309,0.609,0.082,0,0,0.309,0.609,0.082,0,0,0,0,0,1,0];
	this.redFilter.matrix = [1,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0];
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.GameElement"] = com_isartdigital_ruby_game_sprites_elements_GameElement;
com_isartdigital_ruby_game_sprites_elements_GameElement.__name__ = ["com","isartdigital","ruby","game","sprites","elements","GameElement"];
com_isartdigital_ruby_game_sprites_elements_GameElement.__interfaces__ = [com_isartdigital_utils_game_iso_IZSortable];
com_isartdigital_ruby_game_sprites_elements_GameElement.__super__ = com_isartdigital_utils_game_pooling_PoolObject;
com_isartdigital_ruby_game_sprites_elements_GameElement.prototype = $extend(com_isartdigital_utils_game_pooling_PoolObject.prototype,{
	changeAsset: function(pState,pAutoPlay) {
		if(pAutoPlay == null) {
			pAutoPlay = true;
		}
		if(pState == this.UPGRADING_STATE) {
			pState = this.CONSTRUCTING_STATE;
		} else if(pState == "WaitValidation") {
			pState = this.WAITING_STATE;
		}
		if(this.maxLevel == 1 || js_Boot.__instanceof(this,com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienTrainingCenter) || js_Boot.__instanceof(this,com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule1) || js_Boot.__instanceof(this,com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule2) || js_Boot.__instanceof(this,com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule3) || js_Boot.__instanceof(this,com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant1) || js_Boot.__instanceof(this,com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule3) || js_Boot.__instanceof(this,com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant2) || js_Boot.__instanceof(this,com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule3) || js_Boot.__instanceof(this,com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant3)) {
			this.setState(pState,true,pAutoPlay);
		} else {
			this.setState(pState + "_Lvl" + this.level,true,pAutoPlay);
		}
	}
	,init: function(pElem) {
		com_isartdigital_utils_game_pooling_PoolObject.prototype.init.call(this,pElem);
		this.initColAndRow();
		this.dateEndBuilding = pElem.dateEndBuilding;
		this.dateStartBuilding = pElem.dateStartBuilding;
		this.currentRegionCoor = new PIXI.Point(pElem.regionX,pElem.regionY);
	}
	,initColAndRow: function() {
		this.colMin = this.elem.x;
		this.rowMin = this.elem.y;
		this.colMax = this.colMin + this.localWidth - 1;
		this.rowMax = this.rowMin + this.localHeight - 1;
	}
	,changePosition: function(pX,pY) {
		this.colMin = pX;
		this.rowMin = pY;
	}
	,setTimeToBuild: function(pSec,pMin,pHour,pDay) {
		this.timeToBuild = { seconds : pSec, minutes : pMin, hours : pHour, days : pDay};
	}
	,setModeDestroy: function() {
		var lParticle2 = com_isartdigital_ruby_utils_ParticleManager.getInstance().createParticle("destroy",["smoke4","sparks3"],5000);
		lParticle2.position = this.position.clone();
		var lParticle = com_isartdigital_ruby_utils_ParticleManager.getInstance().createParticle("dig",["bloc1","bloc2","bloc3","bloc4","smoke4"],5000);
		lParticle.position = this.position.clone();
		com_isartdigital_utils_game_GameStage.getInstance().getGameContainer().addChild(lParticle);
		com_isartdigital_utils_game_GameStage.getInstance().getGameContainer().addChild(lParticle2);
		com_isartdigital_utils_save_DataBaseAction.getInstance().destroyBuilding(this.elem.instanceID);
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerDestroyBuilding").play();
		com_isartdigital_ruby_game_world_World.getInstance().getRegion(js_Boot.__cast(this.currentRegionCoor.x , Int),js_Boot.__cast(this.currentRegionCoor.y , Int)).layers[1].remove(this);
		this.dispose();
		com_isartdigital_utils_game_pooling_PoolObject.elementList.remove(this.instanceID);
		com_isartdigital_utils_save_DataManager.getInstance().save(com_isartdigital_utils_game_pooling_PoolObject.elementList);
		this.doAction = $bind(this,this.doActionDestroy);
	}
	,hasSameCoordonatesAs: function(pBuilding) {
		if(this.currentRegionCoor.x == pBuilding.currentRegionCoor.x && this.currentRegionCoor.y == pBuilding.currentRegionCoor.y && this.colMin == pBuilding.colMin && this.rowMin == pBuilding.rowMin) {
			return true;
		} else {
			return false;
		}
	}
	,applyHoverFilter: function() {
		if(this.filters == null) {
			if(!this.contextualOpened) {
				com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerClic").play();
				this.filters = [this.hoverFilter];
			}
		}
	}
	,removeHoverFilter: function() {
		if(this.filters != null) {
			this.filters = null;
		}
	}
	,applyGreyFilter: function() {
		if(this.filters == null) {
			this.filters = [this.greyFilter];
		}
	}
	,removeGreyFilter: function() {
		if(this.filters != null) {
			this.filters = null;
		}
	}
	,applyRedFilter: function() {
		if(this.filters == null) {
			this.filters = [this.redFilter];
		}
	}
	,removeRedFilter: function() {
		if(this.filters != null) {
			this.filters = null;
		}
	}
	,doActionDestroy: function() {
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_GameElement
});
var com_isartdigital_ruby_game_sprites_elements_Building = function(pAsset) {
	this.hardToSkipTimer = 3;
	this.allowedFilter = new PIXI.filters.ColorMatrixFilter();
	this.canReceiveDrillers = false;
	this.canReceiveAliens = false;
	this.collectTime = "CollectingTimeLevel";
	this.upgradeTime = "UpgradingTimeLevel";
	this.constructTime = "ConstructTime";
	com_isartdigital_ruby_game_sprites_elements_GameElement.call(this,pAsset);
	this.margin = 1;
	this.buildingType = com_isartdigital_utils_save_DataManager.getInstance().listBuildingTypes.get(this.className);
	this.energyCost = this.buildingType.energyCost;
	this.costSC = this.buildingType.softCurrencyCost;
	this.costHC = this.buildingType.hardCurrencyCost;
	this.costMN = this.buildingType.ressourcesCost;
	this.allowedFilter.matrix = [1,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,1,0];
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.Building"] = com_isartdigital_ruby_game_sprites_elements_Building;
com_isartdigital_ruby_game_sprites_elements_Building.__name__ = ["com","isartdigital","ruby","game","sprites","elements","Building"];
com_isartdigital_ruby_game_sprites_elements_Building.updateBuildingsCarac = function() {
	var _g = 0;
	var _g1 = com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.alienPaddockList;
	while(_g < _g1.length) {
		var paddock = _g1[_g];
		++_g;
		(js_Boot.__cast(paddock.instance , com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock)).getBuildingOnAera();
	}
};
com_isartdigital_ruby_game_sprites_elements_Building.__super__ = com_isartdigital_ruby_game_sprites_elements_GameElement;
com_isartdigital_ruby_game_sprites_elements_Building.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_GameElement.prototype,{
	init: function(pElem) {
		com_isartdigital_ruby_game_sprites_elements_GameElement.prototype.init.call(this,pElem);
		if(pElem.levelUpGrade != null) {
			this.level = pElem.levelUpGrade;
		}
		this.currentState = pElem.mode;
		if(pElem.dateStartBuilding != null) {
			this.dateStartBuilding = pElem.dateStartBuilding;
		}
		this.globalPosition = new PIXI.Point(this.elem.globalX,this.elem.globalY);
		if(this.level != this.maxLevel && !js_Boot.__instanceof(this,com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienTrainingCenter)) {
			this.setUpgradeCost();
		}
		this.changeState();
	}
	,start: function() {
		this.boxType = com_isartdigital_utils_game_BoxType.SIMPLE;
		this.factory = new com_isartdigital_utils_game_factory_FlumpMovieAnimFactory();
		if(this.elem == null) {
			this.currentState = this.SPAWNING_STATE;
		} else {
			switch(this.elem.mode) {
			case "Constructing":
				this.setModeConstruct();
				break;
			case "Recolting":
				this.setModeCollect();
				break;
			case "Upgrading":
				this.setModeConstruct(true);
				break;
			case "Wait":
				this.setModeNormal();
				break;
			case "WaitValidation":
				this.setModeValidationConstruct();
				break;
			}
		}
		this.changeAsset(this.currentState);
	}
	,changeState: function() {
		if(this.elem.mode == this.CONSTRUCTING_STATE) {
			this.currentState = this.CONSTRUCTING_STATE;
		}
		if(this.elem.mode == this.COLLECTING_STATE) {
			this.currentState = this.COLLECTING_STATE;
		}
		if(this.elem.mode == this.WAITING_STATE) {
			this.currentState = this.WAITING_STATE;
		}
		if(this.elem.mode == this.UPGRADING_STATE) {
			this.currentState = this.UPGRADING_STATE;
		}
		if(this.elem.mode == "WaitValidation") {
			this.currentState = this.WAITING_STATE;
		}
	}
	,setModeConstruct: function(isUpgrading) {
		if(isUpgrading == null) {
			isUpgrading = false;
		}
		if(this.dateEndBuilding == null || isUpgrading) {
			if(isUpgrading) {
				this.newTimeToUpgrade();
			} else {
				this.newTimeToBuild();
			}
			com_isartdigital_ruby_utils_TimeManager.getInstance().init(this);
			this.elem.dateStartBuilding = new Date();
		}
		if(isUpgrading) {
			this.currentState = this.UPGRADING_STATE;
		} else {
			this.currentState = this.CONSTRUCTING_STATE;
		}
		this.changeAsset(this.currentState);
		this.doAction = $bind(this,this.doActionConstruct);
		this.elem.dateEndBuilding = this.dateEndBuilding;
		this.elem.mode = this.currentState;
		if(isUpgrading) {
			com_isartdigital_utils_save_DataBaseAction.getInstance().releaseBuildingMode(this.elem.instanceID,this.elem.mode);
		}
		this.releaseElementList();
		this.timerContainer = new com_isartdigital_utils_ui_smart_UISprite("Building_WaitingTime");
		com_isartdigital_utils_game_GameStage.getInstance().getInfoBulleContainer().addChild(this.timerContainer);
		var lPoint = new PIXI.Point(0,0);
		lPoint.x = this.elem.regionX * 26 + this.elem.x;
		lPoint.y = this.elem.regionY * 26 + this.elem.y;
		this.timerContainer.position = com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(lPoint);
		this.timerContainer.position.y -= 100;
		this.timerContainer.interactive = true;
		this.timerContainer.buttonMode = true;
		this.addBtnSkipCDTimer();
		this.timerContainer.name = "timerContainer" + this.name;
		com_isartdigital_ruby_ui_ftue_FTUEManager.register(this.timerContainer);
		var bump = new TweenMax(this.timerContainer.scale,0.5,{ repeatDelay : 0.3, x : 0.9, y : 0.9, repeat : -1, ease : Quart.easeIn, yoyo : true});
	}
	,doActionConstruct: function() {
		if(this.smartTime != null) {
			this.smartTime.refreshText(com_isartdigital_ruby_utils_TimeManager.getInstance().getTimeToFinishBuildingStringFormat(this.dateEndBuilding));
		}
		if(com_isartdigital_ruby_utils_TimeManager.getInstance().getTimeInSecondsToFinishBuilding(this.dateEndBuilding) >= 0) {
			if(this.currentState == this.UPGRADING_STATE) {
				this.upgrade();
			}
			if(this.timerContainer != null) {
				this.timerContainer.off("click",$bind(this,this.onSkipCdTimer));
				this.timerContainer.on("mouseover",$bind(this,this.onDisplayTime));
				this.timerContainer.on("mouseout",$bind(this,this.offDisplayTime));
				com_isartdigital_utils_game_GameStage.getInstance().getInfoBulleContainer().removeChild(this.timerContainer);
			}
			this.setModeValidationConstruct();
		} else {
			this.timeConstruction = com_isartdigital_ruby_utils_TimeManager.getInstance().getTimeToFinishBuildingStringFormat(this.elem.dateEndBuilding);
		}
	}
	,setModeValidationConstruct: function() {
		this.stateTest = this.DEFAULT_STATE;
		this.currentState = this.WAITING_STATE;
		this.changeAsset(this.WAITING_STATE);
		this.filters = null;
		this.elem.mode = "WaitValidation";
		this.releaseElementList();
		com_isartdigital_utils_save_DataManager.getInstance().save(com_isartdigital_utils_game_pooling_PoolObject.elementList);
		com_isartdigital_utils_save_DataBaseAction.getInstance().releaseBuildingMode(this.elem.instanceID,this.elem.mode);
		if(!com_isartdigital_ruby_juicy_bullesxp_BullesManager.getInstance().isBuildingHasBulles(this.instanceID)) {
			com_isartdigital_ruby_juicy_bullesxp_BullesManager.getInstance().initBulles(100,this);
		}
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerFinishCreateBuilding").play();
		this.doAction = $bind(this,this.doActionValidationConstruct);
	}
	,doActionValidationConstruct: function() {
	}
	,setModeNormal: function() {
		this.stateTest = this.DEFAULT_STATE;
		this.currentState = this.WAITING_STATE;
		this.changeAsset(this.currentState);
		this.filters = null;
		this.elem.mode = this.currentState;
		this.releaseElementList();
		com_isartdigital_utils_save_DataManager.getInstance().save(com_isartdigital_utils_game_pooling_PoolObject.elementList);
		com_isartdigital_utils_save_DataBaseAction.getInstance().releaseBuildingMode(this.elem.instanceID,this.elem.mode);
		com_isartdigital_ruby_game_sprites_elements_GameElement.prototype.setModeNormal.call(this);
	}
	,doActionNormal: function() {
		com_isartdigital_ruby_game_sprites_elements_GameElement.prototype.doActionNormal.call(this);
	}
	,setModeCollect: function() {
		this.currentState = this.COLLECTING_STATE;
		this.changeAsset(this.currentState);
		this.elem.mode = this.currentState;
		this.releaseElementList();
		com_isartdigital_utils_save_DataManager.getInstance().save(com_isartdigital_utils_game_pooling_PoolObject.elementList);
		com_isartdigital_utils_save_DataBaseAction.getInstance().releaseBuildingMode(this.elem.instanceID,this.elem.mode);
		this.doAction = $bind(this,this.doActionCollecting);
	}
	,doActionCollecting: function() {
	}
	,setModeMove: function() {
		com_isartdigital_ruby_game_world_World.getInstance().getRegion(js_Boot.__cast(this.currentRegionCoor.x , Int),js_Boot.__cast(this.currentRegionCoor.y , Int)).layers[1].remove(this);
		com_isartdigital_ruby_game_world_World.getInstance().getRegion(js_Boot.__cast(this.currentRegionCoor.x , Int),js_Boot.__cast(this.currentRegionCoor.y , Int)).layers[1].container.removeChild(this);
		com_isartdigital_ruby_game_Spawner.getInstance().moveBuilding(this);
	}
	,onBulleExplose: function() {
		haxe_Timer.delay($bind(this,this.onTime),1500);
		this.setModeNormal();
	}
	,onTime: function() {
		var lXp = com_isartdigital_ruby_ui_ftue_FTUEManager.isFTUEon()?Math.round(com_isartdigital_ruby_game_player_XpToLevel.xpToNextLevel[com_isartdigital_ruby_game_player_Player.getInstance().level] / com_isartdigital_ruby_game_player_Player.getInstance().level):20;
		if(com_isartdigital_ruby_game_player_Player.getInstance().level == 2) {
			lXp = 20;
		}
		com_isartdigital_ruby_game_player_Player.getInstance().addExp(lXp);
		com_isartdigital_ruby_game_sprites_elements_Building.event.emit("onBulle");
	}
	,startUpgrading: function() {
		if(this.level < this.maxLevel) {
			this.payForUpgrade();
			this.setModeConstruct(true);
			com_isartdigital_utils_sounds_SoundManager.getSound("soundBuildingUpgrade").play();
			com_isartdigital_ruby_ui_UIManager.getInstance().closeCurrentPopin();
		}
	}
	,upgrade: function() {
		if(this.level < this.maxLevel) {
			this.energyCost = this.costUpgradeEnergy;
			this.elem.levelUpGrade = ++this.level;
			this.changeAsset(this.currentState);
			this.releaseElementList();
			com_isartdigital_utils_save_DataManager.getInstance().save(com_isartdigital_utils_game_pooling_PoolObject.elementList);
			com_isartdigital_utils_save_DataBaseAction.getInstance().changeBuildingLevel(this.elem.instanceID,this.level);
			if(this.level != this.maxLevel) {
				this.setUpgradeCost();
			}
			this.changeBehavior();
			com_isartdigital_ruby_game_player_Player.getInstance().addExp(35);
		}
	}
	,changeBehavior: function() {
		switch(this.level) {
		case 2:
			this.changeBehaviorLevel2();
			break;
		case 3:
			this.changeBehaviorLevel3();
			break;
		case 4:
			this.changeBehaviorLevel4();
			break;
		}
	}
	,changeBehaviorLevel2: function() {
	}
	,changeBehaviorLevel3: function() {
	}
	,changeBehaviorLevel4: function() {
	}
	,canAffordUpgrade: function() {
		this.energyAdded = this.costUpgradeEnergy - this.energyCost;
		if(com_isartdigital_ruby_game_GameManager.getInstance().godMode) {
			return true;
		}
		var lHasEnoughSC = com_isartdigital_ruby_game_player_Player.getInstance().hasEnoughQuantity(this.costUpgradeSC,com_isartdigital_ruby_game_player_Player.getInstance().softCurrency);
		var lHasEnoughMN = com_isartdigital_ruby_game_player_Player.getInstance().hasEnoughQuantity(this.costUpgradeMN,com_isartdigital_ruby_game_player_Player.getInstance().ressource);
		var lHasEnoughNRJ = com_isartdigital_ruby_game_player_Player.getInstance().hasEnoughEnergy(this.energyAdded);
		if(lHasEnoughSC && lHasEnoughMN && lHasEnoughNRJ) {
			return true;
		} else {
			if(!lHasEnoughMN) {
				com_isartdigital_ruby_ui_hud_Hud.getInstance().noMaterialAnimation();
			}
			if(!lHasEnoughSC) {
				com_isartdigital_ruby_ui_hud_Hud.getInstance().noSCAnimation();
			}
			if(!lHasEnoughNRJ) {
				com_isartdigital_ruby_ui_hud_Hud.getInstance().noEnergyAnimation();
			}
			return false;
		}
	}
	,setUpgradeCost: function() {
		var JSON_CONFIG = com_isartdigital_ruby_game_sprites_elements_GameElement.JSON_CONFIG;
		var lTimeToUpgrade = this.upgradeTime + Std.string(this.level + 1);
		this.costUpgradeSC = Reflect.field(Reflect.field(JSON_CONFIG,this.className),lTimeToUpgrade).costSC;
		this.costUpgradeMN = Reflect.field(Reflect.field(JSON_CONFIG,this.className),lTimeToUpgrade).costMN;
		this.costUpgradeEnergy = Reflect.field(Reflect.field(JSON_CONFIG,this.className),lTimeToUpgrade).costEnergy;
	}
	,payForUpgrade: function() {
		if(!com_isartdigital_ruby_game_GameManager.getInstance().godMode) {
			com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(-this.costUpgradeSC,"softCurrency",false);
			com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(-this.costUpgradeMN,"ressource",false);
			com_isartdigital_ruby_game_player_Player.getInstance().increaseEnergyConsumed(this.energyAdded);
		}
	}
	,newTimeToBuild: function() {
		var JSON_CONFIG = com_isartdigital_ruby_game_sprites_elements_GameElement.JSON_CONFIG;
		this.timeToBuild = { seconds : Reflect.field(Reflect.field(JSON_CONFIG,this.className),this.constructTime).seconds, minutes : Reflect.field(Reflect.field(JSON_CONFIG,this.className),this.constructTime).minutes, hours : Reflect.field(Reflect.field(JSON_CONFIG,this.className),this.constructTime).hours, days : Reflect.field(Reflect.field(JSON_CONFIG,this.className),this.constructTime).days};
	}
	,newTimeToUpgrade: function() {
		var JSON_CONFIG = com_isartdigital_ruby_game_sprites_elements_GameElement.JSON_CONFIG;
		var lTimeToUpgrade = this.upgradeTime + Std.string(this.level + 1);
		this.timeToBuild = { seconds : Reflect.field(Reflect.field(JSON_CONFIG,this.className),lTimeToUpgrade).seconds, minutes : Reflect.field(Reflect.field(JSON_CONFIG,this.className),lTimeToUpgrade).minutes, hours : Reflect.field(Reflect.field(JSON_CONFIG,this.className),lTimeToUpgrade).hours, days : Reflect.field(Reflect.field(JSON_CONFIG,this.className),lTimeToUpgrade).days};
	}
	,addBtnSkipCDTimer: function() {
		this.timerContainer.on("click",$bind(this,this.onSkipCdTimer));
		this.timerContainer.on("mouseover",$bind(this,this.onDisplayTime));
		this.timerContainer.on("mouseout",$bind(this,this.offDisplayTime));
	}
	,onDisplayTime: function() {
		this.smartTime = new com_isartdigital_utils_ui_SmartText(com_isartdigital_utils_game_GameStage.getInstance().getInfoBulleContainer(),100,100,40,"Arial Black","white","left",false,"blue",0,30,0,0,20,20);
		this.smartTime.refreshText(com_isartdigital_ruby_utils_TimeManager.getInstance().getTimeToFinishBuildingStringFormat(this.dateEndBuilding));
		this.timerContainer.addChild(this.smartTime);
		this.smartTime.position.x -= 100;
		this.smartTime.position.y -= 150;
	}
	,offDisplayTime: function() {
		if(this.smartTime != null) {
			this.timerContainer.removeChild(this.smartTime);
		}
		this.smartTime = null;
	}
	,onSkipCdTimer: function() {
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_TimeBased.getInstance());
		com_isartdigital_ruby_ui_popin_TimeBased.getInstance().setText(this);
	}
	,cdTimerSkiped: function() {
		if(com_isartdigital_ruby_game_player_Player.getInstance().hasEnoughQuantity(this.hardToSkipTimer,com_isartdigital_ruby_game_player_Player.getInstance().hardCurrency) || com_isartdigital_ruby_game_Spawner.getInstance().godMode) {
			if(this.timerContainer != null) {
				this.timerContainer.off("click",$bind(this,this.onSkipCdTimer));
				this.timerContainer.off("mouseover",$bind(this,this.onDisplayTime));
				this.timerContainer.off("mouseout",$bind(this,this.offDisplayTime));
			}
			this.dateEndBuilding = new Date();
			if(_$UInt_UInt_$Impl_$.gte(com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep,com_isartdigital_ruby_ui_ftue_FTUEManager.steps.length)) {
				com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(-this.hardToSkipTimer,"hardCurrency");
			}
			com_isartdigital_utils_game_GameStage.getInstance().getInfoBulleContainer().removeChild(this.timerContainer);
			if(this.currentState == this.UPGRADING_STATE) {
				this.upgrade();
			}
			this.setModeValidationConstruct();
			this.elem.dateEndBuilding = this.dateEndBuilding;
			this.releaseElementList();
		} else {
			com_isartdigital_ruby_ui_hud_Hud.getInstance().noHCAnimation();
		}
	}
	,changePosition: function(pX,pY) {
		com_isartdigital_ruby_game_sprites_elements_GameElement.prototype.changePosition.call(this,pX,pY);
		this.colMax = this.colMin + this.localWidth - 1;
		this.rowMax = this.rowMin + this.localHeight - 1;
	}
	,saveNewPosition: function(pX,pY,pRegionX,pRegionY) {
		var lRegion = com_isartdigital_ruby_game_Spawner.getInstance().currentRegion;
		this.elem.x = pX;
		this.elem.y = pY;
		this.position = com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(new PIXI.Point(pX,pY));
		var lGlobalPoint = new PIXI.Point(0,0);
		lGlobalPoint.x = lRegion.x * 26 + pX;
		lGlobalPoint.y = lRegion.y * 26 + pY;
		lGlobalPoint = com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(lGlobalPoint);
		this.elem.globalX = lGlobalPoint.x;
		this.elem.globalY = lGlobalPoint.y;
		this.initColAndRow();
		this.globalPosition = new PIXI.Point(this.elem.globalX,this.elem.globalY);
		this.elem.regionX = pRegionX == null?lRegion.x:pRegionX;
		this.elem.regionY = pRegionY == null?lRegion.y:pRegionY;
		this.currentRegionCoor = new PIXI.Point(this.elem.regionX,this.elem.regionY);
		com_isartdigital_ruby_game_world_World.getInstance().getRegion(js_Boot.__cast(this.currentRegionCoor.x , Int),js_Boot.__cast(this.currentRegionCoor.y , Int)).layers[1].add(this);
		com_isartdigital_ruby_game_world_World.getInstance().getRegion(js_Boot.__cast(this.currentRegionCoor.x , Int),js_Boot.__cast(this.currentRegionCoor.y , Int)).layers[1].container.addChild(this);
		com_isartdigital_utils_save_DataBaseAction.getInstance().releaseBuildingPosition(this.elem.instanceID,this.elem.regionX,this.elem.regionY,this.elem.x,this.elem.y);
	}
	,addEnergyToPlayer: function() {
		com_isartdigital_ruby_game_player_Player.getInstance().increaseEnergyConsumed(this.energyCost);
	}
	,setModeDestroy: function() {
		com_isartdigital_ruby_game_sprites_elements_GameElement.prototype.setModeDestroy.call(this);
		com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(this.sellingCost,"softCurrency",false);
		com_isartdigital_ruby_game_player_Player.getInstance().increaseEnergyConsumed(-this.energyCost);
		com_isartdigital_ruby_game_sprites_elements_Building.updateBuildingsCarac();
	}
	,applyAllowedFilter: function() {
		if(this.filters == null) {
			this.filters = [this.allowedFilter];
		}
	}
	,removeAllowedFilter: function() {
		if(this.filters != null) {
			this.filters = null;
		}
	}
	,dispose: function() {
		if(com_isartdigital_ruby_juicy_bullesxp_BullesManager.getInstance().isBuildingHasBulles(this.instanceID)) {
			com_isartdigital_ruby_juicy_bullesxp_BullesManager.getInstance().destroyGroupOfBulles(this.instanceID,true);
		}
		if(this.timerContainer != null) {
			this.timerContainer.off("click",$bind(this,this.onSkipCdTimer));
			this.timerContainer.off("mouseover",$bind(this,this.onDisplayTime));
			this.timerContainer.off("mouseout",$bind(this,this.offDisplayTime));
			com_isartdigital_utils_game_GameStage.getInstance().getInfoBulleContainer().removeChild(this.timerContainer);
			this.timerContainer = null;
		}
		com_isartdigital_ruby_game_sprites_elements_GameElement.prototype.dispose.call(this);
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_Building
});
var com_isartdigital_ruby_game_sprites_elements_ElementType = function() { };
$hxClasses["com.isartdigital.ruby.game.sprites.elements.ElementType"] = com_isartdigital_ruby_game_sprites_elements_ElementType;
com_isartdigital_ruby_game_sprites_elements_ElementType.__name__ = ["com","isartdigital","ruby","game","sprites","elements","ElementType"];
var com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienCryoCenter = function(pAsset) {
	this.lengthSizeFactor = 2;
	this.storageLength = 15;
	this.xenosStorage = [];
	com_isartdigital_ruby_game_sprites_elements_Building.call(this,pAsset);
	this.buildingName = "CryoCenter";
	this.description = "Stocke les xenos implaçables.";
	this.localWidth = 3;
	this.localHeight = 3;
	this.maxLevel = 4;
	this.canReceiveAliens = false;
	this.sellingCost = 4375;
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.alienbuilding.AlienCryoCenter"] = com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienCryoCenter;
com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienCryoCenter.__name__ = ["com","isartdigital","ruby","game","sprites","elements","alienbuilding","AlienCryoCenter"];
com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienCryoCenter.__super__ = com_isartdigital_ruby_game_sprites_elements_Building;
com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienCryoCenter.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_Building.prototype,{
	init: function(pElem) {
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.init.call(this,pElem);
		var _g = 0;
		var _g1 = com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList;
		while(_g < _g1.length) {
			var alien = _g1[_g];
			++_g;
			if(alien.idBuilding == this.elem.instanceID) {
				this.xenosStorage.push(alien);
			}
		}
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienCryoCenter
});
var com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienIncubator = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_Building.call(this,pAsset);
	this.buildingName = "Incubator";
	this.description = "Permet de créer un Xénos.";
	this.localWidth = 6;
	this.localHeight = 3;
	this.maxLevel = 2;
	this.canReceiveAliens = true;
	this.sellingCost = 3125;
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.alienbuilding.AlienIncubator"] = com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienIncubator;
com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienIncubator.__name__ = ["com","isartdigital","ruby","game","sprites","elements","alienbuilding","AlienIncubator"];
com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienIncubator.__super__ = com_isartdigital_ruby_game_sprites_elements_Building;
com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienIncubator.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_Building.prototype,{
	init: function(pElem) {
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.init.call(this,pElem);
	}
	,start: function() {
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.start.call(this);
		if(this.alienSlot1 != null && this.alienSlot1.mode == "Constructing" || this.alienSlot2 != null && this.alienSlot2.mode == "Constructing") {
			this.doAction = $bind(this,this.doActionCollecting);
		}
	}
	,setModeCollect: function() {
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.setModeCollect.call(this);
	}
	,doActionCollecting: function() {
		if(this.alienSlot1 == null && this.alienSlot2 == null) {
			this.setModeNormal();
			return;
		}
		if(this.alienSlot1 != null && this.alienSlot1Time == null && this.alienSlot1.endTime != null) {
			this.alienSlot1Time = HxOverrides.strDate(this.alienSlot1.endTime);
		}
		if(this.alienSlot2 != null && this.alienSlot2Time == null && this.alienSlot2.endTime != null) {
			this.alienSlot2Time = HxOverrides.strDate(this.alienSlot2.endTime);
		}
		if(this.alienSlot1 != null && this.alienSlot1Time != null) {
			if(com_isartdigital_ruby_utils_TimeManager.getInstance().getTimeInSecondsToFinishBuilding(this.alienSlot1Time) >= 0) {
				com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList[com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList.indexOf(this.alienSlot1)].mode = "Waiting";
				this.alienSlot1.mode = "Waiting";
				com_isartdigital_utils_save_DataBaseAction.getInstance().releaseAlienMode(this.alienSlot1.idAlien,this.alienSlot1.mode);
				this.alienSlot1 = null;
			}
		}
		if(this.alienSlot2 != null && this.alienSlot2Time != null) {
			if(com_isartdigital_ruby_utils_TimeManager.getInstance().getTimeInSecondsToFinishBuilding(this.alienSlot2Time) >= 0) {
				com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList[com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList.indexOf(this.alienSlot2)].mode = "Waiting";
				this.alienSlot2 = null;
			}
		}
	}
	,addAlien: function(pAlien,pSlotAlien,pCategory) {
		var field = "alienSlot" + pSlotAlien;
		var tmp;
		var lAlien;
		var tmp1;
		if(this.__properties__) {
			tmp = this.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			lAlien = this[tmp]();
		} else {
			lAlien = this[field];
		}
		var alienID = pAlien.name + new Date().getTime();
		var lAlienElem = { idAlien : alienID, idBuilding : this.elem.instanceID, mode : "Constructing", name : pAlien.name, type : pAlien.type, nomPropre : "", stamina : pAlien.stamina | 0, level : 1, startTime : null, endTime : null, carac : com_isartdigital_ruby_game_sprites_elements_aliens_Alien.getAlienType("name",com_isartdigital_utils_save_DataManager.getInstance().getAlienArray(pAlien.type)), idPlayer : com_isartdigital_ruby_game_player_Player.getInstance().id};
		com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList.push(lAlienElem);
		com_isartdigital_utils_save_DataBaseAction.getInstance().addAlien(alienID,this.elem.instanceID,pAlien.type,pAlien.name,"",pAlien.stamina,pAlien.time);
		var field1 = "alienSlot" + pSlotAlien;
		var tmp2;
		var tmp3;
		if(this.__properties__) {
			tmp2 = this.__properties__["set_" + field1];
			tmp3 = tmp2;
		} else {
			tmp3 = false;
		}
		if(tmp3) {
			this[tmp2](lAlienElem);
		} else {
			this[field1] = lAlienElem;
		}
		this.doAction = $bind(this,this.doActionCollecting);
	}
	,setTime: function(pAlienSlot,pAlienSlotTime) {
		HxOverrides.strDate(pAlienSlot.endTime);
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienIncubator
});
var com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock = function(pAsset) {
	this.buffAeraSize = 3;
	this.buildingBuffedList = [];
	this.maxRessources = 0;
	this.currentRessources = 0;
	this.hardToSkip = 3;
	com_isartdigital_ruby_game_sprites_elements_Building.call(this,pAsset);
	this.buildingName = "Paddock";
	this.description = "Permet de placer des Xénos pour qu'ils produisent de l'or.";
	this.alienProds = [];
	this.alienBuffers = [];
	this.totalAliens = [];
	this.canReceiveAliens = true;
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.alienbuilding.AlienPaddock"] = com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock;
com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.__name__ = ["com","isartdigital","ruby","game","sprites","elements","alienbuilding","AlienPaddock"];
com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.__super__ = com_isartdigital_ruby_game_sprites_elements_Building;
com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_Building.prototype,{
	addAlien: function(pAlienElem) {
		var _g = 0;
		var _g1 = this.totalAliens;
		while(_g < _g1.length) {
			var alien = _g1[_g];
			++_g;
			if(pAlienElem == alien) {
				com_isartdigital_ruby_game_world_MapInteractor.getInstance().stopAlienMode();
				return;
			}
		}
		if(this.totalAliens.length >= this.room) {
			com_isartdigital_ruby_game_world_MapInteractor.getInstance().stopAlienMode();
			js_Browser.alert("Plus de place dans l'enclos");
		} else {
			pAlienElem.idBuilding = this.elem.instanceID;
			com_isartdigital_utils_save_DataBaseAction.getInstance().changeAlienIdBuilding(pAlienElem.idAlien,pAlienElem.idBuilding);
			com_isartdigital_ruby_game_world_MapInteractor.getInstance().stopAlienMode();
			this.displayAliens();
		}
		com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.event.emit("onAddAlien");
	}
	,removeAlien: function(pAlienElem) {
		pAlienElem.idBuilding = "no Building";
		com_isartdigital_utils_save_DataBaseAction.getInstance().changeAlienIdBuilding(pAlienElem.idAlien,pAlienElem.idBuilding);
		this.totalAliens.splice(this.totalAliens.indexOf(pAlienElem),1);
		if(pAlienElem.type == "AlienBuffer") {
			this.removeBuffer(pAlienElem);
		} else if(pAlienElem.type == "AlienProducer") {
			this.removeProducer(pAlienElem);
		}
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerRetakeXenos").play();
		this.displayAliens();
	}
	,removeBuffer: function(pAlienElem) {
		var lLength = this.alienBuffers.length;
		var _g1 = 0;
		while(_g1 < lLength) {
			var i = _g1++;
			if(this.alienBuffers[i].aElem == pAlienElem) {
				com_isartdigital_utils_game_GameStage.getInstance().getAlienContainer().removeChild(this.alienBuffers[i]);
				this.alienBuffers.splice(this.alienBuffers.indexOf(this.alienBuffers[i]),1);
				com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerSelectXenosBomber").play();
				return;
			}
		}
	}
	,removeProducer: function(pAlienElem) {
		var lLength = this.alienProds.length;
		var _g1 = 0;
		while(_g1 < lLength) {
			var i = _g1++;
			if(this.alienProds[i].aElem == pAlienElem) {
				com_isartdigital_utils_game_GameStage.getInstance().getAlienContainer().removeChild(this.alienProds[i]);
				this.alienProds.splice(this.alienProds.indexOf(this.alienProds[i]),1);
				com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerSelectXenosForeur").play();
				return;
			}
		}
	}
	,init: function(pElem) {
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.init.call(this,pElem);
		if(com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.alienPaddockList.indexOf(this.elem) == -1) {
			com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.alienPaddockList.push(this.elem);
		}
		this.displayAliens();
	}
	,displayAliens: function() {
		var _g1 = 0;
		var _g = com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList.length;
		while(_g1 < _g) {
			var lAlienElem = com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList[_g1++];
			if(lAlienElem.idBuilding == this.instanceID) {
				this.createAlien(lAlienElem);
			}
		}
	}
	,createAlien: function(pAlienElem) {
		this.totalAliens.push(pAlienElem);
		var lIndex = this.totalAliens.indexOf(pAlienElem);
		if(pAlienElem.type == "AlienBuffer") {
			var lAlien = new com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienBuffer();
			lAlien.setElem(pAlienElem);
			com_isartdigital_utils_game_GameStage.getInstance().getAlienContainer().addChild(lAlien);
			lAlien.start();
			lAlien.ownPaddock = this;
			lAlien.position = this.setPosition(lIndex);
			lAlien.setPosition(com_isartdigital_utils_game_iso_IsoManager.isoViewToModel(this.setPosition(lIndex)));
			this.alienBuffers.push(lAlien);
			com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerChooseXenosForeur").play();
		}
		if(pAlienElem.type == "AlienProducer") {
			var lAlien1 = new com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienProducer();
			lAlien1.setElem(pAlienElem);
			com_isartdigital_utils_game_GameStage.getInstance().getAlienContainer().addChild(lAlien1);
			lAlien1.start();
			lAlien1.ownPaddock = this;
			lAlien1.position = this.setPosition(lIndex);
			lAlien1.setPosition(com_isartdigital_utils_game_iso_IsoManager.isoViewToModel(this.setPosition(lIndex)));
			this.alienProds.push(lAlien1);
			this.checkForContainer();
		}
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerChooseXenosBomber").play();
	}
	,setPosition: function(pIndex) {
		return new PIXI.Point(this.elem.globalX,this.elem.globalY);
	}
	,setModeNormal: function() {
		this.checkForContainer();
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.setModeNormal.call(this);
	}
	,checkForContainer: function() {
	}
	,doActionNormal: function() {
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.doActionNormal.call(this);
		var lTotalRessources = 0;
		var lTotalMaxProd = 0;
		var _g = 0;
		var _g1 = this.alienProds;
		while(_g < _g1.length) {
			var alien = _g1[_g];
			++_g;
			alien.doAction();
			lTotalRessources += alien.ressources;
			lTotalMaxProd += alien.maxProduction;
		}
		if(lTotalMaxProd != this.maxRessources || lTotalRessources != this.currentRessources) {
			this.currentRessources = lTotalRessources;
			this.maxRessources = lTotalMaxProd;
		}
		var tmp = this.alienProds.length > 0 && this.areTheyAllFilled();
	}
	,areTheyAllFilled: function() {
		var _g = 0;
		var _g1 = this.alienProds;
		while(_g < _g1.length) {
			var alien = _g1[_g];
			++_g;
			if(!alien.isFilled) {
				return false;
			}
		}
		return true;
	}
	,setModeCollectable: function() {
		this.changebuttonToCollect();
		this.isFilled = true;
		this.doAction = $bind(this,this.doActionCollectable);
	}
	,doActionCollectable: function() {
		var _g = 0;
		var _g1 = this.alienProds;
		while(_g < _g1.length) {
			var alien = _g1[_g];
			++_g;
			alien.doAction();
		}
	}
	,changebuttonToCollect: function() {
		haxe_Log.trace("harvest",{ fileName : "AlienPaddock.hx", lineNumber : 282, className : "com.isartdigital.ruby.game.sprites.elements.alienbuilding.AlienPaddock", methodName : "changebuttonToCollect"});
	}
	,addBtnSkipCooldown: function() {
		this.prodContainer.on("click",$bind(this,this.onSkipCooldown));
	}
	,onSkipCooldown: function() {
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_DynamicPopin.getInstance());
		com_isartdigital_ruby_ui_popin_DynamicPopin.getInstance().init("skip cooldown with " + this.hardToSkip + " hard currency ?",$bind(this,this.cooldownSkiped));
	}
	,cooldownSkiped: function() {
		this.isFilled = true;
		if(com_isartdigital_ruby_game_player_Player.getInstance().hasEnoughQuantity(this.hardToSkip,com_isartdigital_ruby_game_player_Player.getInstance().hardCurrency)) {
			var _g = 0;
			var _g1 = this.alienProds;
			while(_g < _g1.length) {
				var alien = _g1[_g];
				++_g;
				alien.isFilled = true;
			}
			com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(-this.hardToSkip,"hardCurrency");
			this.cooldownSkipedAnimation();
		} else {
			com_isartdigital_ruby_ui_hud_Hud.getInstance().noHCAnimation();
		}
	}
	,onCollect: function() {
		this.isFilled = false;
		this.collect();
		this.setModeNormal();
	}
	,collect: function() {
		var lAllRessources = 0;
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerHarvest").play();
		this.ressourceCollectAnimation();
		var _g = 0;
		var _g1 = this.alienProds;
		while(_g < _g1.length) {
			var alien = _g1[_g];
			++_g;
			lAllRessources += alien.ressources;
			alien.isFilled = false;
		}
		com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(lAllRessources,"softCurrency");
	}
	,cooldownSkipedAnimation: function() {
		var ressourceHCgoToBuilding = { originalPosition : com_isartdigital_utils_game_GameStage.getInstance().getHudContainer().toLocal(com_isartdigital_ruby_ui_hud_Hud.getInstance().hcAddButton.parent.toGlobal(com_isartdigital_ruby_ui_hud_Hud.getInstance().hcAddButton.position.clone())), destinationPosition : com_isartdigital_utils_game_GameStage.getInstance().getHudContainer().toLocal(this.parent.toGlobal(this.position.clone())), whereToAddchild : com_isartdigital_utils_game_GameStage.getInstance().getHudContainer(), numObjectsToInstanciate : this.hardToSkip, duration : 1, secondsBtwnaddchilds : 1, speed : 0.2, animationType : "dispersionToCurve", ressource : com_isartdigital_ruby_utils_RessourceType.HardCurrency};
		com_isartdigital_ruby_utils_RessourcesEffectManager.getInstance().SetEffect(ressourceHCgoToBuilding);
	}
	,ressourceCollectAnimation: function() {
		var ressourceSCgoToHud = { originalPosition : com_isartdigital_utils_game_GameStage.getInstance().getHudContainer().toLocal(this.parent.toGlobal(this.position.clone())), destinationPosition : com_isartdigital_utils_game_GameStage.getInstance().getHudContainer().toLocal(com_isartdigital_ruby_ui_hud_Hud.getInstance().scAddButton.parent.toGlobal(com_isartdigital_ruby_ui_hud_Hud.getInstance().scAddButton.position.clone())), whereToAddchild : com_isartdigital_utils_game_GameStage.getInstance().getHudContainer(), numObjectsToInstanciate : 20, duration : 1, secondsBtwnaddchilds : 1, speed : 0.2, animationType : "dispersionToCurve", ressource : com_isartdigital_ruby_utils_RessourceType.SoftCurrency};
		com_isartdigital_ruby_utils_RessourcesEffectManager.getInstance().SetEffect(ressourceSCgoToHud);
	}
	,addProducer: function(pType) {
		this.alienProds.push(new com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienProducer());
	}
	,addBuffer: function(pName) {
		var lBuffer = new com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienBuffer(pName);
		lBuffer.initBuff();
		this.alienBuffers.push(lBuffer);
		if(this.buffAeraSize != null) {
			this.buffAeraSize = 3;
		}
	}
	,getBuildingOnAera: function(pIsFirstLoad) {
		if(pIsFirstLoad == null) {
			pIsFirstLoad = false;
		}
		var listBuildingCanBeBuff = [];
		var lRegion = com_isartdigital_ruby_game_world_World.getInstance().getRegion(this.elem.regionX,this.elem.regionY);
		lRegion.layers[1].getCell(this.elem.x,this.elem.y);
		var xMin = this.colMin - this.buffAeraSize;
		var xMax = this.colMax + this.buffAeraSize;
		var yMin = this.rowMin - this.buffAeraSize;
		var yMax = this.rowMax + this.buffAeraSize;
		var _g1 = xMin;
		var _g = xMax + 1;
		while(_g1 < _g) {
			var x = _g1++;
			var _g3 = yMin;
			var _g2 = yMax + 1;
			while(_g3 < _g2) {
				var y = _g3++;
				if(lRegion.layers[1].getCell(x,y) != null) {
					var lBuilding = js_Boot.__cast(lRegion.layers[1].getCell(x,y) , com_isartdigital_ruby_game_sprites_elements_Building);
					if(js_Boot.__instanceof(lBuilding,com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock)) {
						continue;
					}
					if(listBuildingCanBeBuff.indexOf(lBuilding) == -1 && this.isBuildingCanBeBuff(lBuilding)) {
						listBuildingCanBeBuff.push(lBuilding);
					}
				}
			}
		}
		if(this.buildingBuffedList != listBuildingCanBeBuff && !pIsFirstLoad) {
			this.updateBuildingBuffedList(listBuildingCanBeBuff);
		} else if(pIsFirstLoad) {
			this.buildingBuffedList = listBuildingCanBeBuff;
		}
	}
	,updateBuildingBuffedList: function(pArray) {
		var lBuilding;
		var lBuildingToDebuff = [];
		var lBuildingToBuff = [];
		var i = this.buildingBuffedList.length - 1;
		while(i >= 0) {
			lBuilding = this.buildingBuffedList[i];
			if(pArray.indexOf(lBuilding) == -1) {
				lBuildingToDebuff.push(lBuilding);
				HxOverrides.remove(this.buildingBuffedList,lBuilding);
			}
			--i;
		}
		var _g1 = 0;
		var _g = pArray.length;
		while(_g1 < _g) {
			lBuilding = pArray[_g1++];
			if(this.buildingBuffedList.indexOf(lBuilding) == -1) {
				lBuildingToBuff.push(lBuilding);
				this.buildingBuffedList.push(lBuilding);
			}
		}
		this.AddOrRemoveBuff(lBuildingToDebuff,false);
		this.AddOrRemoveBuff(lBuildingToBuff,true);
	}
	,AddOrRemoveBuff: function(pArray,isAdd) {
		if(isAdd == null) {
			isAdd = true;
		}
		var _g = 0;
		var _g1 = this.alienBuffers;
		while(_g < _g1.length) {
			var alien = _g1[_g];
			++_g;
			if(alien.buffType == "energy") {
				var _g2 = 0;
				while(_g2 < pArray.length) {
					var building = pArray[_g2];
					++_g2;
					if(js_Boot.__instanceof(building,com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer)) {
						(js_Boot.__cast(building , com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer)).Buff(alien.buffCoef,isAdd);
					}
				}
			} else if(alien.buffType == "darkMater") {
				var _g21 = 0;
				while(_g21 < pArray.length) {
					var building1 = pArray[_g21];
					++_g21;
					if(js_Boot.__instanceof(building1,com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingAutoOutPost) || js_Boot.__instanceof(building1,com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingCenter)) {
						(js_Boot.__cast(building1 , com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer)).Buff(alien.buffCoef,isAdd);
					}
				}
			} else if(alien.buffType == "gene") {
				var _g22 = 0;
				while(_g22 < pArray.length) {
					var building2 = pArray[_g22];
					++_g22;
					if(js_Boot.__instanceof(building2,com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingAutoOutPost) || js_Boot.__instanceof(building2,com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingCenter)) {
						(js_Boot.__cast(building2 , com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer)).Buff(alien.buffCoef,isAdd);
					}
				}
			}
		}
	}
	,isBuildingCanBeBuff: function(pBuilding) {
		if(js_Boot.__instanceof(pBuilding,com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer) || js_Boot.__instanceof(pBuilding,com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingCenter) || js_Boot.__instanceof(pBuilding,com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingAutoOutPost)) {
			return true;
		} else {
			return false;
		}
	}
	,applyHoverFilter: function() {
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.applyHoverFilter.call(this);
		if(this.alienBuffers.length > 0 && this.buffAera == null) {
			this.showBuffAera();
		}
	}
	,removeHoverFilter: function() {
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.removeHoverFilter.call(this);
		if(this.buffAera != null) {
			this.buffAera.clear();
			com_isartdigital_utils_game_GameStage.getInstance().getGameContainer().removeChild(this.buffAera);
			this.buffAera = null;
		}
	}
	,initBuffAeraGraph: function() {
		this.buffAera = new PIXI.Graphics();
		this.buffAera.alpha = 0.2;
		this.buffAera.clear();
		this.buffAera.beginFill(13434777);
		var lStart = com_isartdigital_utils_game_iso_IsoManager.isoViewToModel(this.position);
		var lIsoTop = com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(new PIXI.Point(lStart.x - this.buffAeraSize,lStart.y - this.buffAeraSize));
		var lIsoRight = com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(new PIXI.Point(lStart.x + this.localWidth + this.buffAeraSize,lStart.y - this.buffAeraSize));
		var lIsoBottom = com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(new PIXI.Point(lStart.x + this.localWidth + this.buffAeraSize,lStart.y + this.localHeight + this.buffAeraSize));
		var lIsoLeft = com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(new PIXI.Point(lStart.x - this.buffAeraSize,lStart.y + this.localHeight + this.buffAeraSize));
		this.buffAera.drawPolygon([lIsoTop.x,lIsoTop.y,lIsoRight.x,lIsoRight.y,lIsoBottom.x,lIsoBottom.y,lIsoLeft.x,lIsoLeft.y]);
		this.buffAera.endFill();
	}
	,showBuffAera: function() {
		if(this.buffAera == null) {
			this.initBuffAeraGraph();
		}
		if(this.buffAera != null) {
			com_isartdigital_utils_game_GameStage.getInstance().getGameContainer().addChild(this.buffAera);
		}
	}
	,dispose: function() {
		if(this.prodContainer != null) {
			if(this.isFilled) {
				this.prodContainer.off("click",$bind(this,this.onCollect));
			} else {
				this.prodContainer.off("click",$bind(this,this.onSkipCooldown));
			}
			this.prodContainer.destroyTimer();
		}
		var _g = 0;
		var _g1 = this.alienProds;
		while(_g < _g1.length) {
			var alien = _g1[_g];
			++_g;
			alien.dispose();
		}
		var _g2 = 0;
		var _g11 = this.alienBuffers;
		while(_g2 < _g11.length) {
			var alien1 = _g11[_g2];
			++_g2;
			alien1.dispose();
		}
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.dispose.call(this);
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock
});
var com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienResearchCenter = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_Building.call(this,pAsset);
	this.buildingName = "Reseerch Center";
	this.description = "Permet d'effectuer des recherches scientifiques pour découvrir des schémas de nouvelles races xenos.";
	this.localWidth = 4;
	this.localHeight = 3;
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.alienbuilding.AlienResearchCenter"] = com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienResearchCenter;
com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienResearchCenter.__name__ = ["com","isartdigital","ruby","game","sprites","elements","alienbuilding","AlienResearchCenter"];
com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienResearchCenter.__super__ = com_isartdigital_ruby_game_sprites_elements_Building;
com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienResearchCenter.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_Building.prototype,{
	init: function(pElem) {
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.init.call(this,pElem);
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienResearchCenter
});
var com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienTrainingCenter = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_Building.call(this,pAsset);
	this.buildingName = "Training Center";
	this.description = "Permet de faire evoluer les xénos.";
	this.localWidth = 3;
	this.localHeight = 3;
	this.sellingCost = 6250;
	this.canReceiveAliens = true;
	this.maxLevel = 3;
	this.aliens = [];
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.alienbuilding.AlienTrainingCenter"] = com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienTrainingCenter;
com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienTrainingCenter.__name__ = ["com","isartdigital","ruby","game","sprites","elements","alienbuilding","AlienTrainingCenter"];
com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienTrainingCenter.__super__ = com_isartdigital_ruby_game_sprites_elements_Building;
com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienTrainingCenter.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_Building.prototype,{
	upgrade: function() {
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.upgrade.call(this);
	}
	,init: function(pElem) {
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.init.call(this,pElem);
		if(this.level == 2) {
			this.slot1Bought = true;
		}
		if(this.level == 3) {
			this.slot2Bought = true;
		}
	}
	,addAlien: function(pAlienElem) {
		pAlienElem.idBuilding = this.elem.instanceID;
		this.alien = pAlienElem;
		com_isartdigital_utils_save_DataBaseAction.getInstance().changeAlienIdBuilding(pAlienElem.idAlien,pAlienElem.idBuilding);
		com_isartdigital_ruby_game_world_MapInteractor.getInstance().stopAlienMode();
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerPutXenos").play();
		com_isartdigital_ruby_ui_popin_upgradeCenter_UpgradeCenter.getInstance().initializationCurrentBuildingTrainingCenter(this);
		com_isartdigital_ruby_ui_popin_upgradeCenter_UpgradeCenter.getInstance().setAlien();
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_upgradeCenter_UpgradeCenter.getInstance());
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienTrainingCenter
});
var com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockBig = function(pAsset) {
	this.localWidth = 3;
	this.localHeight = 2;
	com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.call(this,pAsset);
	this.room = 6;
	this.sellingCost = 3750;
	this.description = "Placez-y jusqu'à 6 xenos produisant de l'or";
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.alienbuilding.paddocks.AlienPaddockBig"] = com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockBig;
com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockBig.__name__ = ["com","isartdigital","ruby","game","sprites","elements","alienbuilding","paddocks","AlienPaddockBig"];
com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockBig.__super__ = com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock;
com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockBig.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.prototype,{
	setPosition: function(pIndex) {
		switch(pIndex) {
		case 0:
			return new PIXI.Point(this.elem.globalX,this.elem.globalY);
		case 1:
			return new PIXI.Point(this.elem.globalX + 100,this.elem.globalY + 50);
		case 2:
			return new PIXI.Point(this.elem.globalX + 200,this.elem.globalY + 100);
		case 3:
			return new PIXI.Point(this.elem.globalX - 100,this.elem.globalY + 50);
		case 4:
			return new PIXI.Point(this.elem.globalX,this.elem.globalY + 100);
		case 5:
			return new PIXI.Point(this.elem.globalX + 100,this.elem.globalY + 150);
		}
		return new PIXI.Point(0,0);
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockBig
});
var com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockMedium = function(pAsset) {
	this.localWidth = 2;
	this.localHeight = 2;
	com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.call(this,pAsset);
	this.room = 4;
	this.description = "Placez-y jusqu'à 4 xenos produisant de l'or";
	this.sellingCost = 2500;
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.alienbuilding.paddocks.AlienPaddockMedium"] = com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockMedium;
com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockMedium.__name__ = ["com","isartdigital","ruby","game","sprites","elements","alienbuilding","paddocks","AlienPaddockMedium"];
com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockMedium.__super__ = com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock;
com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockMedium.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.prototype,{
	setPosition: function(pIndex) {
		switch(pIndex) {
		case 0:
			return new PIXI.Point(this.elem.globalX,this.elem.globalY);
		case 1:
			return new PIXI.Point(this.elem.globalX + 100,this.elem.globalY + 50);
		case 2:
			return new PIXI.Point(this.elem.globalX - 100,this.elem.globalY + 50);
		case 3:
			return new PIXI.Point(this.elem.globalX,this.elem.globalY + 100);
		}
		return new PIXI.Point(0,0);
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockMedium
});
var com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockSmall = function(pAsset) {
	this.localWidth = 3;
	this.localHeight = 1;
	com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.call(this,pAsset);
	this.description = "Placez-y jusqu'à 3 xenos produisant de l'or";
	this.room = 3;
	this.sellingCost = 2000;
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.alienbuilding.paddocks.AlienPaddockSmall"] = com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockSmall;
com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockSmall.__name__ = ["com","isartdigital","ruby","game","sprites","elements","alienbuilding","paddocks","AlienPaddockSmall"];
com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockSmall.__super__ = com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock;
com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockSmall.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.prototype,{
	setPosition: function(pIndex) {
		switch(pIndex) {
		case 0:
			return new PIXI.Point(this.elem.globalX,this.elem.globalY);
		case 1:
			return new PIXI.Point(this.elem.globalX + 100,this.elem.globalY + 50);
		case 2:
			return new PIXI.Point(this.elem.globalX + 200,this.elem.globalY + 100);
		}
		return new PIXI.Point(0,0);
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockSmall
});
var com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockTiny = function(pAsset) {
	this.localWidth = 1;
	this.localHeight = 1;
	this.description = "Placez-y jusqu'à 1 xenos produisant de l'or";
	com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.call(this,pAsset);
	this.room = 1;
	this.sellingCost = 1000;
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.alienbuilding.paddocks.AlienPaddockTiny"] = com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockTiny;
com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockTiny.__name__ = ["com","isartdigital","ruby","game","sprites","elements","alienbuilding","paddocks","AlienPaddockTiny"];
com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockTiny.__super__ = com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock;
com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockTiny.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.prototype,{
	__class__: com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockTiny
});
var com_isartdigital_ruby_game_sprites_elements_aliens_AlienEsthetique = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_aliens_Alien.call(this,pAsset);
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.aliens.AlienEsthetique"] = com_isartdigital_ruby_game_sprites_elements_aliens_AlienEsthetique;
com_isartdigital_ruby_game_sprites_elements_aliens_AlienEsthetique.__name__ = ["com","isartdigital","ruby","game","sprites","elements","aliens","AlienEsthetique"];
com_isartdigital_ruby_game_sprites_elements_aliens_AlienEsthetique.loadTypes = function(pTypes) {
	com_isartdigital_ruby_game_sprites_elements_aliens_AlienEsthetique.esthetiqueTypes = pTypes;
};
com_isartdigital_ruby_game_sprites_elements_aliens_AlienEsthetique.__super__ = com_isartdigital_ruby_game_sprites_elements_aliens_Alien;
com_isartdigital_ruby_game_sprites_elements_aliens_AlienEsthetique.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_aliens_Alien.prototype,{
	__class__: com_isartdigital_ruby_game_sprites_elements_aliens_AlienEsthetique
});
var com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienPaddockable = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_aliens_Alien.call(this,pAsset);
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.aliens.alienspaddockable.AlienPaddockable"] = com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienPaddockable;
com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienPaddockable.__name__ = ["com","isartdigital","ruby","game","sprites","elements","aliens","alienspaddockable","AlienPaddockable"];
com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienPaddockable.__interfaces__ = [com_isartdigital_utils_game_iso_IZSortable];
com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienPaddockable.__super__ = com_isartdigital_ruby_game_sprites_elements_aliens_Alien;
com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienPaddockable.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_aliens_Alien.prototype,{
	setPosition: function(pPos) {
		this.colMin = this.colMax = pPos.x;
		this.rowMin = this.rowMax = pPos.y;
	}
	,setPaddock: function(pPaddock) {
		this.ownPaddock = pPaddock;
		this.on("click",$bind(this,this.onClickk));
	}
	,onClickk: function() {
	}
	,setElem: function(pElem) {
		this.aElem = pElem;
		this.assetName = this.aElem.name;
		this.level = this.aElem.level;
	}
	,start: function() {
		this.boxType = com_isartdigital_utils_game_BoxType.NONE;
		this.factory = new com_isartdigital_utils_game_factory_FlumpMovieAnimFactory();
		this.changeAsset("Harvest");
	}
	,changeAsset: function(pState) {
		this.setState(pState + "_Lvl" + this.level);
	}
	,loopanim: function() {
		if((js_Boot.__cast(this.anim , pixi_flump_Movie)).get_currentFrame() >= (js_Boot.__cast(this.anim , pixi_flump_Movie)).get_totalFrames() - 2) {
			this.changeAsset("Harvest");
		}
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienPaddockable
});
var com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienBuffer = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienPaddockable.call(this,pAsset);
	this.name = pAsset;
	com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienBuffer.buffTypes = com_isartdigital_utils_loader_GameLoader.getContent("../balance/alienBalance.json").buffers;
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.aliens.alienspaddockable.AlienBuffer"] = com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienBuffer;
com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienBuffer.__name__ = ["com","isartdigital","ruby","game","sprites","elements","aliens","alienspaddockable","AlienBuffer"];
com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienBuffer.loadTypes = function(pTypes) {
	com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienBuffer.bufferTypes = pTypes;
};
com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienBuffer.__super__ = com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienPaddockable;
com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienBuffer.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienPaddockable.prototype,{
	start: function() {
		com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienPaddockable.prototype.start.call(this);
		this.setModeBuff();
	}
	,initBuff: function() {
		var _g = 0;
		var _g1 = com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienBuffer.buffTypes;
		while(_g < _g1.length) {
			var alienType = _g1[_g];
			++_g;
			if(alienType.name == this.name) {
				this.carac = alienType;
			}
		}
		if(this.carac == null) {
			return;
		}
		this.buffType = this.carac.buffType;
		var o = this.carac;
		var field = "coef" + this.level;
		var tmp;
		var tmp1;
		if(o == null) {
			tmp1 = null;
		} else {
			var tmp2;
			if(o.__properties__) {
				tmp = o.__properties__["get_" + field];
				tmp2 = tmp;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				tmp1 = o[tmp]();
			} else {
				tmp1 = o[field];
			}
		}
		this.buffCoef = tmp1;
	}
	,setModeBuff: function() {
		this.doAction = $bind(this,this.doActionBuff);
	}
	,doActionBuff: function() {
		this.loopanim();
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienBuffer
});
var com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienProducer = function(pAsset) {
	this.isFilled = false;
	this.ressources = 0;
	this.cycleTimeInMin = 1;
	this.productionPerCycle = 1000;
	this.productionSpeedCoef = 1;
	this.maxProduction = 10000;
	com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienPaddockable.call(this,pAsset);
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.aliens.alienspaddockable.AlienProducer"] = com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienProducer;
com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienProducer.__name__ = ["com","isartdigital","ruby","game","sprites","elements","aliens","alienspaddockable","AlienProducer"];
com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienProducer.loadTypes = function(pTypes) {
	com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienProducer.prodTypes = pTypes;
};
com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienProducer.__super__ = com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienPaddockable;
com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienProducer.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienPaddockable.prototype,{
	start: function() {
		com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienPaddockable.prototype.start.call(this);
		if(this.aElem.startTime != null && this.aElem.endTime != null) {
			this.startTime = HxOverrides.strDate(this.aElem.startTime);
			this.endTime = HxOverrides.strDate(this.aElem.endTime);
		}
		if(com_isartdigital_ruby_ui_ftue_FTUEManager.isFTUEon()) {
			this.ressources = this.maxProduction;
			this.setModeFilled();
		} else if(this.endTime != null) {
			if(new Date().getTime() >= this.endTime.getTime()) {
				this.ressources = this.maxProduction;
				this.setModeFilled();
			} else {
				this.setModeProduction();
			}
		} else {
			this.setModeProduction();
		}
	}
	,setModeProduction: function() {
		if(this.ressources == 0) {
			this.calculateEndProductionTime();
		}
		this.doAction = $bind(this,this.doActionProduction);
	}
	,doActionProduction: function() {
		this.loopanim();
		this.ressources = Math.round(com_isartdigital_ruby_utils_TimeManager.getInstance().getPercentage(this.startTime,this.endTime) * this.maxProduction / 100);
		if(com_isartdigital_ruby_utils_TimeManager.getInstance().getTimeInSecondsToFinishBuilding(this.endTime) >= 0 || this.isFilled) {
			this.setModeFilled();
		}
	}
	,setModeFilled: function() {
		this.isFilled = true;
		this.ressources = this.maxProduction;
		this.doAction = $bind(this,this.doActionFilled);
		this.gold = new com_isartdigital_utils_ui_smart_UISprite("Building_Harvest");
		this.addChild(this.gold);
		this.gold.position.y -= 70;
		new TweenMax(this.gold.scale,0.5,{ repeatDelay : 0.3, x : 0.95, y : 0.95, repeat : -1, ease : Quart.easeIn, yoyo : true});
		this.on("click",$bind(this,this.onHarve));
		this.on("tap",$bind(this,this.onHarve));
	}
	,doActionFilled: function() {
		this.loopanim();
		if(!this.isFilled) {
			this.ressources = 0;
			this.setModeProduction();
		}
	}
	,calculateEndProductionTime: function() {
		this.startTime = new Date();
		var lStartTimeStamps = this.startTime.getTime();
		var time = Math.round(this.maxProduction / this.productionPerCycle * (this.cycleTimeInMin * this.productionSpeedCoef) * 60000);
		var lEndtimeStamps = lStartTimeStamps + time;
		this.endTime = new Date(lEndtimeStamps);
		this.aElem.startTime = HxOverrides.dateStr(this.startTime);
		this.aElem.endTime = HxOverrides.dateStr(this.endTime);
	}
	,onHarve: function() {
		this.off("click",$bind(this,this.onHarve));
		this.off("tap",$bind(this,this.onHarve));
		this.removeChild(this.gold);
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerHarvest").play();
		this.ressourceCollectAnimation();
		com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(this.ressources,"softCurrency");
		this.ressources = 0;
		this.isFilled = false;
		this.setModeProduction();
	}
	,ressourceCollectAnimation: function() {
		var ressourceSCgoToHud = { originalPosition : com_isartdigital_utils_game_GameStage.getInstance().getHudContainer().toLocal(this.parent.toGlobal(this.position.clone())), destinationPosition : com_isartdigital_utils_game_GameStage.getInstance().getHudContainer().toLocal(com_isartdigital_ruby_ui_hud_Hud.getInstance().scAddButton.parent.toGlobal(com_isartdigital_ruby_ui_hud_Hud.getInstance().scAddButton.position.clone())), whereToAddchild : com_isartdigital_utils_game_GameStage.getInstance().getHudContainer(), numObjectsToInstanciate : 20, duration : 1, secondsBtwnaddchilds : 1, speed : 0.2, animationType : "dispersionToCurve", ressource : com_isartdigital_ruby_utils_RessourceType.SoftCurrency};
		com_isartdigital_ruby_utils_RessourcesEffectManager.getInstance().SetEffect(ressourceSCgoToHud);
	}
	,destroy: function() {
		if(this.gold != null) {
			this.removeChild(this.gold);
		}
		this.off("click",$bind(this,this.onHarve));
		this.off("tap",$bind(this,this.onHarve));
		com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienPaddockable.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienProducer
});
var com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_Building.call(this,pAsset);
	this.buildingName = "Decorative";
	this.margin = 0;
	this.localWidth = 1;
	this.localHeight = 1;
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.cosmeticbuilding.CosmeticBuilding"] = com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding;
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding.__name__ = ["com","isartdigital","ruby","game","sprites","elements","cosmeticbuilding","CosmeticBuilding"];
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding.__super__ = com_isartdigital_ruby_game_sprites_elements_Building;
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_Building.prototype,{
	init: function(pElem) {
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.init.call(this,pElem);
		this.colMin = pElem.x;
		this.rowMin = pElem.y;
		this.elem.mode = this.WAITING_STATE;
		this.sellingCost = _$UInt_UInt_$Impl_$.toFloat(this.elem.softCurrency) / _$UInt_UInt_$Impl_$.toFloat(4) | 0;
	}
	,start: function() {
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.start.call(this);
	}
	,changeAsset: function(pState,pAutoPlay) {
		if(pAutoPlay == null) {
			pAutoPlay = true;
		}
		this.setState("",true,pAutoPlay);
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding
});
var com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule1 = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding.call(this,pAsset);
	this.description = com_isartdigital_utils_system_Localization.getLabel(com_isartdigital_ruby_ui_LocalizationByType.COSMETIC_CAPSULE1);
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.cosmeticbuilding.cosmetictype.BuildingCosmeticCapsule1"] = com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule1;
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule1.__name__ = ["com","isartdigital","ruby","game","sprites","elements","cosmeticbuilding","cosmetictype","BuildingCosmeticCapsule1"];
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule1.__super__ = com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding;
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule1.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding.prototype,{
	__class__: com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule1
});
var com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule2 = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding.call(this,pAsset);
	this.description = com_isartdigital_utils_system_Localization.getLabel(com_isartdigital_ruby_ui_LocalizationByType.COSMETIC_CAPSULE2);
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.cosmeticbuilding.cosmetictype.BuildingCosmeticCapsule2"] = com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule2;
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule2.__name__ = ["com","isartdigital","ruby","game","sprites","elements","cosmeticbuilding","cosmetictype","BuildingCosmeticCapsule2"];
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule2.__super__ = com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding;
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule2.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding.prototype,{
	__class__: com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule2
});
var com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule3 = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding.call(this,pAsset);
	this.description = com_isartdigital_utils_system_Localization.getLabel(com_isartdigital_ruby_ui_LocalizationByType.COSMETIC_CAPSULE3);
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.cosmeticbuilding.cosmetictype.BuildingCosmeticCapsule3"] = com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule3;
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule3.__name__ = ["com","isartdigital","ruby","game","sprites","elements","cosmeticbuilding","cosmetictype","BuildingCosmeticCapsule3"];
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule3.__super__ = com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding;
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule3.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding.prototype,{
	__class__: com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule3
});
var com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant1 = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding.call(this,pAsset);
	this.description = com_isartdigital_utils_system_Localization.getLabel(com_isartdigital_ruby_ui_LocalizationByType.COSMETIC_PLANT1);
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.cosmeticbuilding.cosmetictype.BuildingCosmeticPlant1"] = com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant1;
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant1.__name__ = ["com","isartdigital","ruby","game","sprites","elements","cosmeticbuilding","cosmetictype","BuildingCosmeticPlant1"];
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant1.__super__ = com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding;
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant1.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding.prototype,{
	__class__: com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant1
});
var com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant2 = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding.call(this,pAsset);
	this.description = com_isartdigital_utils_system_Localization.getLabel(com_isartdigital_ruby_ui_LocalizationByType.COSMETIC_PLANT2);
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.cosmeticbuilding.cosmetictype.BuildingCosmeticPlant2"] = com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant2;
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant2.__name__ = ["com","isartdigital","ruby","game","sprites","elements","cosmeticbuilding","cosmetictype","BuildingCosmeticPlant2"];
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant2.__super__ = com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding;
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant2.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding.prototype,{
	__class__: com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant2
});
var com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant3 = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding.call(this,pAsset);
	this.description = com_isartdigital_utils_system_Localization.getLabel(com_isartdigital_ruby_ui_LocalizationByType.COSMETIC_PLANT3);
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.cosmeticbuilding.cosmetictype.BuildingCosmeticPlant3"] = com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant3;
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant3.__name__ = ["com","isartdigital","ruby","game","sprites","elements","cosmeticbuilding","cosmetictype","BuildingCosmeticPlant3"];
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant3.__super__ = com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding;
com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant3.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding.prototype,{
	__class__: com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant3
});
var com_isartdigital_ruby_game_sprites_elements_destructible_Destructible = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_GameElement.call(this,pAsset);
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.destructible.Destructible"] = com_isartdigital_ruby_game_sprites_elements_destructible_Destructible;
com_isartdigital_ruby_game_sprites_elements_destructible_Destructible.__name__ = ["com","isartdigital","ruby","game","sprites","elements","destructible","Destructible"];
com_isartdigital_ruby_game_sprites_elements_destructible_Destructible.createDestructibles = function(pRegion) {
	var currentConfig = com_isartdigital_utils_loader_GameLoader.getContent(com_isartdigital_ruby_game_sprites_elements_destructible_Destructible.arrayConfigDestructible[Math.round(Math.random() * (com_isartdigital_ruby_game_sprites_elements_destructible_Destructible.arrayConfigDestructible.length - 1))]);
	var _g = 0;
	var _g1 = Reflect.fields(currentConfig);
	while(_g < _g1.length) {
		var instance = _g1[_g];
		++_g;
		var destructible = Reflect.field(currentConfig,instance);
		var lDestructible = new com_isartdigital_ruby_game_sprites_elements_destructible_Destructible(destructible.type);
		var lElement = { instanceID : Std.string(destructible.type) + Std.string(new Date().getTime()), type : destructible.type, width : com_isartdigital_utils_save_DataManager.getInstance().listDestructableTypes.get(destructible.type).width, height : com_isartdigital_utils_save_DataManager.getInstance().listDestructableTypes.get(destructible.type).height, x : Std.parseInt(destructible.x), y : Std.parseInt(destructible.y), globalX : Std.parseInt(destructible.globalX), globalY : Std.parseInt(destructible.globalY), regionX : pRegion.x, regionY : pRegion.y, layer : 1, assetName : destructible.type, mode : "Waiting", dateStartBuilding : new Date(), softCurrency : com_isartdigital_utils_save_DataManager.getInstance().listDestructableTypes.get(destructible.type).softCurrencyCost};
		lDestructible.init(lElement);
		lDestructible.start();
		pRegion.layers[1].add(lDestructible);
		pRegion.layers[1].container.addChild(lDestructible);
		lDestructible.position = com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(new PIXI.Point(lElement.x,lElement.y));
		var _this = com_isartdigital_utils_game_pooling_PoolObject.elementList;
		var key = lElement.instanceID;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,lElement);
		} else {
			_this.h[key] = lElement;
		}
		com_isartdigital_utils_save_DataBaseAction.getInstance().addDestructible(lElement.assetName,lElement.instanceID,lElement.regionX,lElement.regionY,lElement.x,lElement.y,lElement.layer);
	}
};
com_isartdigital_ruby_game_sprites_elements_destructible_Destructible.createFirstDestructible = function(pAsset,pX,pY) {
	var lDestructible = new com_isartdigital_ruby_game_sprites_elements_destructible_Destructible(pAsset);
	var lType = com_isartdigital_utils_save_DataManager.getInstance().listDestructableTypes.get(pAsset);
	var lElement = { instanceID : pAsset + Std.string(new Date().getTime()), type : pAsset, width : com_isartdigital_utils_save_DataManager.getInstance().listDestructableTypes.get(pAsset).width, height : com_isartdigital_utils_save_DataManager.getInstance().listDestructableTypes.get(pAsset).height, x : pX, y : pY, globalX : 0, globalY : 0, regionX : pX, regionY : pY, layer : 1, assetName : pAsset, mode : "Waiting", dateStartBuilding : new Date(), softCurrency : com_isartdigital_utils_save_DataManager.getInstance().listDestructableTypes.get(pAsset).softCurrencyCost};
	lDestructible.init(lElement);
	lDestructible.start();
	com_isartdigital_ruby_game_world_World.getInstance().getRegion(0,0).layers[1].add(lDestructible);
	com_isartdigital_ruby_game_world_World.getInstance().getRegion(0,0).layers[1].container.addChild(lDestructible);
	lDestructible.position = com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(new PIXI.Point(lElement.x,lElement.y));
	var _this = com_isartdigital_utils_game_pooling_PoolObject.elementList;
	var key = lElement.instanceID;
	if(__map_reserved[key] != null) {
		_this.setReserved(key,lElement);
	} else {
		_this.h[key] = lElement;
	}
	com_isartdigital_utils_save_DataBaseAction.getInstance().addDestructible(lElement.assetName,lElement.instanceID,lElement.regionX,lElement.regionY,lElement.x,lElement.y,lElement.layer);
};
com_isartdigital_ruby_game_sprites_elements_destructible_Destructible.__super__ = com_isartdigital_ruby_game_sprites_elements_GameElement;
com_isartdigital_ruby_game_sprites_elements_destructible_Destructible.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_GameElement.prototype,{
	init: function(pElem) {
		var lDestructible = com_isartdigital_utils_save_DataManager.getInstance().listDestructableTypes.get(pElem.assetName);
		this.localWidth = lDestructible.width;
		this.localHeight = lDestructible.height;
		com_isartdigital_ruby_game_sprites_elements_GameElement.prototype.init.call(this,pElem);
		this.assetName = this.elem.assetName;
		this.destructableType = com_isartdigital_utils_save_DataManager.getInstance().listDestructableTypes.get(this.assetName);
		var timeString = com_isartdigital_utils_save_DataManager.getInstance().listDestructableTypes.get(this.assetName).destructionTime;
		timeString.split(":");
	}
	,start: function() {
		com_isartdigital_ruby_game_sprites_elements_GameElement.prototype.start.call(this);
		this.changeState();
	}
	,changeState: function() {
		if(this.elem.mode == "Destruction") {
			this.setModeDestruction();
		}
	}
	,convertTimeStamp: function(pHour,pMin,pSec) {
		var lMin = pMin;
		var lHour = pHour;
		lMin *= 60;
		lHour *= 3600;
		return (pSec + lMin + lHour) * 1000.0;
	}
	,setModeDestruction: function() {
		this.doAction = $bind(this,this.doActionDestruction);
		this.releaseElementList();
		this.timerContainer = new com_isartdigital_utils_ui_SmartText(com_isartdigital_utils_game_GameStage.getInstance().getInfoBulleContainer(),100,100,40,"Arial Black","white","left",false,"blue",0.9,30,0,0,20,20);
		com_isartdigital_utils_game_GameStage.getInstance().getInfoBulleContainer().addChild(this.timerContainer);
		this.addChild(this.timerContainer);
		this.timerContainer.interactive = true;
		this.timerContainer.buttonMode = true;
		this.addBtnSkipCDTimer();
	}
	,destructionDB: function() {
		var dataTime = com_isartdigital_utils_save_DataManager.getInstance().listDestructableTypes.get(this.assetName).destructionTime;
		var arrayTime = dataTime.split(":");
		this.elem.dateStartBuilding = new Date();
		this.dateStartBuilding = this.elem.dateStartBuilding;
		var t = this.convertTimeStamp(Std.parseInt(arrayTime[0]),Std.parseInt(arrayTime[1]),Std.parseInt(arrayTime[2]));
		var t1 = this.dateStartBuilding.getTime() + t;
		this.elem.dateEndBuilding = new Date(t1);
		this.dateEndBuilding = this.elem.dateEndBuilding;
		this.elem.mode = "Destruction";
		com_isartdigital_utils_save_DataBaseAction.getInstance().releaseDestructibleMode(this.elem.assetName,this.elem.instanceID,this.elem.mode);
		this.setModeDestruction();
	}
	,doActionDestruction: function() {
		if(com_isartdigital_ruby_utils_TimeManager.getInstance().getTimeInSecondsToFinishBuilding(this.dateEndBuilding) >= 0) {
			this.createArtefact();
			this.timerContainer.destroyTimer();
			com_isartdigital_utils_save_DataBaseAction.getInstance().destroyDestructible(this.elem.instanceID);
			com_isartdigital_ruby_game_world_World.getInstance().getRegion(js_Boot.__cast(this.currentRegionCoor.x , Int),js_Boot.__cast(this.currentRegionCoor.y , Int)).layers[1].remove(this);
			this.dispose();
			com_isartdigital_utils_game_pooling_PoolObject.elementList.remove(this.instanceID);
		} else {
			this.timerContainer.refreshText(com_isartdigital_ruby_utils_TimeManager.getInstance().getTimeToFinishBuildingStringFormat(this.elem.dateEndBuilding));
		}
	}
	,addBtnSkipCDTimer: function() {
		this.timerContainer.on("click",$bind(this,this.onSkipCdTimer));
		this.timerContainer.on("tap",$bind(this,this.onSkipCdTimer));
	}
	,onSkipCdTimer: function() {
		var cost = com_isartdigital_utils_save_DataManager.getInstance().listDestructableTypes.get(this.assetName).skipHCCost;
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_DynamicPopin.getInstance());
		if(!com_isartdigital_ruby_ui_ftue_FTUEManager.isFTUEon()) {
			com_isartdigital_ruby_ui_popin_DynamicPopin.getInstance().init("skip cooldown with " + cost + " hard currency ?",$bind(this,this.cdTimerSkiped));
		} else {
			com_isartdigital_ruby_ui_popin_DynamicPopin.getInstance().init("FTUE gratuit",$bind(this,this.cdTimerSkiped));
		}
	}
	,cdTimerSkiped: function() {
		var cost = com_isartdigital_utils_save_DataManager.getInstance().listDestructableTypes.get(this.assetName).skipHCCost;
		if(com_isartdigital_ruby_game_player_Player.getInstance().hasEnoughQuantity(cost,com_isartdigital_ruby_game_player_Player.getInstance().hardCurrency) || com_isartdigital_ruby_game_Spawner.getInstance().godMode) {
			this.timerContainer.off("click",$bind(this,this.onSkipCdTimer));
			this.dateEndBuilding = new Date();
			if(!com_isartdigital_ruby_ui_ftue_FTUEManager.isFTUEon()) {
				com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(-cost,"hardCurrency");
			}
		}
	}
	,createArtefact: function() {
		var elemToSpawn = "DestructiblePebbles" + Math.round(Math.random() + 1);
		var lDestructible = new com_isartdigital_ruby_game_sprites_elements_destructible_Destructible(elemToSpawn);
		var lElement = { instanceID : elemToSpawn + new Date().getTime(), type : elemToSpawn, width : com_isartdigital_utils_save_DataManager.getInstance().listDestructableTypes.get(elemToSpawn).width, height : com_isartdigital_utils_save_DataManager.getInstance().listDestructableTypes.get(elemToSpawn).height, x : this.elem.x, y : this.elem.y, globalX : this.elem.globalX, globalY : this.elem.globalY, regionX : this.elem.regionX, regionY : this.elem.regionY, layer : 0, assetName : elemToSpawn, mode : "Waiting"};
		lDestructible.init(lElement);
		lDestructible.start();
		com_isartdigital_ruby_game_world_World.getInstance().getRegion(this.elem.regionX,this.elem.regionY).layers[0].add(lDestructible);
		com_isartdigital_ruby_game_world_World.getInstance().getRegion(this.elem.regionX,this.elem.regionY).layers[0].container.addChild(lDestructible);
		lDestructible.position = com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(new PIXI.Point(lElement.x,lElement.y));
		var _this = com_isartdigital_utils_game_pooling_PoolObject.elementList;
		var key = lElement.instanceID;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,lElement);
		} else {
			_this.h[key] = lElement;
		}
		com_isartdigital_utils_save_DataBaseAction.getInstance().addDestructible(lElement.assetName,lElement.instanceID,lElement.regionX,lElement.regionY,lElement.x,lElement.y,lElement.layer);
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_destructible_Destructible
});
var com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_Building.call(this,pAsset);
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.drillingbuilding.DrillingBuilding"] = com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding;
com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding.__name__ = ["com","isartdigital","ruby","game","sprites","elements","drillingbuilding","DrillingBuilding"];
com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding.__super__ = com_isartdigital_ruby_game_sprites_elements_Building;
com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_Building.prototype,{
	init: function(pElem) {
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.init.call(this,pElem);
		if(com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding.drillingBuildingList.indexOf(this.elem) == -1) {
			com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding.drillingBuildingList.push(this.elem);
		}
		com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding.drillingBuildingCount = com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding.drillingBuildingList.length;
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding
});
var com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingAutoOutPost = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding.call(this,pAsset);
	this.buildingName = "AutoDrill Outpost";
	this.description = "Lance les missions de forage automatiques : elle produisent de la MATIÈRE NOIRE en petite quantité.";
	this.localWidth = 2;
	this.localHeight = 2;
	this.sellingCost = 1875;
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.drillingbuilding.DrillingAutoOutPost"] = com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingAutoOutPost;
com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingAutoOutPost.__name__ = ["com","isartdigital","ruby","game","sprites","elements","drillingbuilding","DrillingAutoOutPost"];
com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingAutoOutPost.__super__ = com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding;
com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingAutoOutPost.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding.prototype,{
	init: function(pElem) {
		com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding.prototype.init.call(this,pElem);
	}
	,production: function() {
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingAutoOutPost
});
var com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingCenter = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding.call(this,pAsset);
	this.buildingName = "Drilling Center";
	this.description = "Permet de lancer des missions de forage dans la région.";
	this.localWidth = 6;
	this.localHeight = 4;
	this.maxLevel = 4;
	this.sellingCost = 3750;
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.drillingbuilding.DrillingCenter"] = com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingCenter;
com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingCenter.__name__ = ["com","isartdigital","ruby","game","sprites","elements","drillingbuilding","DrillingCenter"];
com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingCenter.__super__ = com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding;
com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingCenter.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding.prototype,{
	init: function(pElem) {
		com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding.prototype.init.call(this,pElem);
		com_isartdigital_ruby_ui_ftue_FTUEManager.register(this);
		this.on("click",$bind(this,this.onClickFtue));
		this.on("tap",$bind(this,this.onClickFtue));
	}
	,onClickFtue: function() {
		this.off("click",$bind(this,this.onClickFtue));
		this.off("tap",$bind(this,this.onClickFtue));
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingCenter
});
var com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingOutPost = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding.call(this,pAsset);
	this.buildingName = "Drill Outpost";
	this.description = "Découvre de nouvelles missions de forage.";
	this.localWidth = 4;
	this.localHeight = 2;
	this.maxLevel = 2;
	this.sellingCost = 1375;
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.drillingbuilding.DrillingOutPost"] = com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingOutPost;
com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingOutPost.__name__ = ["com","isartdigital","ruby","game","sprites","elements","drillingbuilding","DrillingOutPost"];
com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingOutPost.__super__ = com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding;
com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingOutPost.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding.prototype,{
	init: function(pElem) {
		com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding.prototype.init.call(this,pElem);
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingOutPost
});
var com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_Building.call(this,pAsset);
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.urbanbuilding.BuildingEnergyProducer"] = com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer;
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer.__name__ = ["com","isartdigital","ruby","game","sprites","elements","urbanbuilding","BuildingEnergyProducer"];
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer.__super__ = com_isartdigital_ruby_game_sprites_elements_Building;
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_Building.prototype,{
	increasePlayerMaxEnergy: function(pEnergy) {
		var lEnergy = pEnergy == null?this.energyProduced:pEnergy;
		com_isartdigital_ruby_game_player_Player.getInstance().increaseMaxEnergy(lEnergy);
	}
	,Buff: function(pCoef,isAdded) {
		if(isAdded == null) {
			isAdded = true;
		}
		this.increasePlayerMaxEnergy(Math.round(this.energyProduced * pCoef - this.energyProduced) * (isAdded?1:-1));
	}
	,setModeDestroy: function() {
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.setModeDestroy.call(this);
		this.increasePlayerMaxEnergy(-this.energyProduced);
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer
});
var com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanAntenna = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer.call(this,pAsset);
	this.buildingName = "Antenna";
	this.description = com_isartdigital_utils_system_Localization.getLabel(com_isartdigital_ruby_ui_LocalizationByType.DESC_ANTENNA);
	this.localWidth = 1;
	this.localHeight = 1;
	this.maxLevel = 2;
	this.sellingCost = 875;
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.urbanbuilding.UrbanAntenna"] = com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanAntenna;
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanAntenna.__name__ = ["com","isartdigital","ruby","game","sprites","elements","urbanbuilding","UrbanAntenna"];
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanAntenna.__super__ = com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer;
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanAntenna.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer.prototype,{
	init: function(pElem) {
		com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer.prototype.init.call(this,pElem);
		com_isartdigital_ruby_game_world_World.getInstance().getRegion(this.elem.regionX,this.elem.regionY).antennasInRegion.push(this);
		this.energyProduced = this.level == 1?5:10;
	}
	,changeBehaviorLevel2: function() {
		com_isartdigital_ruby_game_player_Player.getInstance().increaseMaxEnergy(5);
	}
	,setModeDestroy: function() {
		com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer.prototype.setModeDestroy.call(this);
		com_isartdigital_ruby_game_world_World.getInstance().getRegion(this.elem.regionX,this.elem.regionY).powerStationsInRegion.splice(com_isartdigital_ruby_game_world_World.getInstance().getRegion(this.elem.regionX,this.elem.regionY).antennasInRegion.indexOf(this),1);
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanAntenna
});
var com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanCommunication = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_Building.call(this,pAsset);
	this.buildingName = "Communication";
	this.description = "Permet de contacter vos amis, d'aller visiter leur planète ou d'échanger avec eux.";
	this.localWidth = 3;
	this.localHeight = 1;
	this.sellingCost = 4000;
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.urbanbuilding.UrbanCommunication"] = com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanCommunication;
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanCommunication.__name__ = ["com","isartdigital","ruby","game","sprites","elements","urbanbuilding","UrbanCommunication"];
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanCommunication.__super__ = com_isartdigital_ruby_game_sprites_elements_Building;
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanCommunication.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_Building.prototype,{
	init: function(pElem) {
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.init.call(this,pElem);
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanCommunication
});
var com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanHeadQuarter = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_Building.call(this,pAsset);
	this.buildingName = "Head Quarter";
	this.description = "Donne les informations sur votre planète. Les évolutions des autres batiments dépendent du niveau de celui-ci.";
	this.localWidth = 6;
	this.localHeight = 6;
	this.maxLevel = 4;
	this.level = 1;
	com_isartdigital_ruby_game_sprites_elements_Building.HQinstance = this;
	this.sellingCost = 0;
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.urbanbuilding.UrbanHeadQuarter"] = com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanHeadQuarter;
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanHeadQuarter.__name__ = ["com","isartdigital","ruby","game","sprites","elements","urbanbuilding","UrbanHeadQuarter"];
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanHeadQuarter.__super__ = com_isartdigital_ruby_game_sprites_elements_Building;
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanHeadQuarter.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_Building.prototype,{
	init: function(pElem) {
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.init.call(this,pElem);
	}
	,start: function() {
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.start.call(this);
		if(com_isartdigital_ruby_game_world_World.getInstance().getRegion(this.elem.regionX,this.elem.regionY).powerStationsInRegion.length == 0) {
			this.changeAsset(this.CONSTRUCTING_STATE);
		}
	}
	,turnOn: function() {
		this.changeAsset(this.WAITING_STATE);
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerStartCreateBuilding").play();
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanHeadQuarter
});
var com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanPowerStation = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer.call(this,pAsset);
	this.buildingName = "Power Station";
	this.description = "Augmente beaucoup l'énergie et permet de poser des antennes.";
	this.localWidth = 4;
	this.localHeight = 2;
	this.energyProduced = 50;
	this.maxLevel = 2;
	this.sellingCost = 2500;
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.urbanbuilding.UrbanPowerStation"] = com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanPowerStation;
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanPowerStation.__name__ = ["com","isartdigital","ruby","game","sprites","elements","urbanbuilding","UrbanPowerStation"];
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanPowerStation.__super__ = com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer;
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanPowerStation.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer.prototype,{
	init: function(pElem) {
		com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer.prototype.init.call(this,pElem);
	}
	,setModeNormal: function() {
		com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer.prototype.setModeNormal.call(this);
		this.checkRegion();
	}
	,setModeValidationConstruct: function() {
		com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer.prototype.setModeValidationConstruct.call(this);
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerHaveEnergy").play();
	}
	,checkRegion: function() {
		if(com_isartdigital_ruby_game_world_World.getInstance().getRegion(this.elem.regionX,this.elem.regionY).powerStationsInRegion.length == 0) {
			com_isartdigital_ruby_game_world_World.getInstance().getRegion(this.elem.regionX,this.elem.regionY).powerStationsInRegion.push(this);
			com_isartdigital_ruby_game_sprites_elements_Building.HQinstance.turnOn();
			return;
		}
		var _g = 0;
		var _g1 = com_isartdigital_ruby_game_world_World.getInstance().getRegion(this.elem.regionX,this.elem.regionY).powerStationsInRegion;
		while(_g < _g1.length) {
			var station = _g1[_g];
			++_g;
			if(station.elem.instanceID == this.elem.instanceID) {
				return;
			}
		}
		com_isartdigital_ruby_game_world_World.getInstance().getRegion(this.elem.regionX,this.elem.regionY).powerStationsInRegion.push(this);
	}
	,saveNewPosition: function(pX,pY,pRegionX,pRegionY) {
		com_isartdigital_ruby_game_world_World.getInstance().getRegion(this.elem.regionX,this.elem.regionY).powerStationsInRegion.splice(com_isartdigital_ruby_game_world_World.getInstance().getRegion(this.elem.regionX,this.elem.regionY).powerStationsInRegion.indexOf(this),1);
		com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer.prototype.saveNewPosition.call(this,pX,pY,pRegionX,pRegionY);
		this.checkRegion();
	}
	,changeBehaviorLevel2: function() {
		if(this.level <= this.maxLevel) {
			var _g = 0;
			var _g1 = com_isartdigital_ruby_game_world_World.getInstance().getRegion(this.elem.regionX,this.elem.regionY).antennasInRegion;
			while(_g < _g1.length) {
				var antenna = _g1[_g];
				++_g;
				antenna.upgrade();
			}
		}
	}
	,setModeDestroy: function() {
		com_isartdigital_ruby_game_sprites_elements_urbanbuilding_BuildingEnergyProducer.prototype.setModeDestroy.call(this);
		com_isartdigital_ruby_game_world_World.getInstance().getRegion(this.elem.regionX,this.elem.regionY).powerStationsInRegion.splice(com_isartdigital_ruby_game_world_World.getInstance().getRegion(this.elem.regionX,this.elem.regionY).powerStationsInRegion.indexOf(this),1);
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanPowerStation
});
var com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanTranslation = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_Building.call(this,pAsset);
	this.buildingName = "Translation Center";
	this.description = "Permet de traduire les anciens textes xenos.";
	this.localWidth = 2;
	this.localHeight = 2;
	this.sellingCost = 4875;
};
$hxClasses["com.isartdigital.ruby.game.sprites.elements.urbanbuilding.UrbanTranslation"] = com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanTranslation;
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanTranslation.__name__ = ["com","isartdigital","ruby","game","sprites","elements","urbanbuilding","UrbanTranslation"];
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanTranslation.__super__ = com_isartdigital_ruby_game_sprites_elements_Building;
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanTranslation.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_Building.prototype,{
	init: function(pElem) {
		com_isartdigital_ruby_game_sprites_elements_Building.prototype.init.call(this,pElem);
	}
	,__class__: com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanTranslation
});
var com_isartdigital_ruby_utils_RessourceEffect = function(pAsset) {
	this.listRessources = [];
	this.soundFlag = true;
	this.numLittleBubbleToSpawn = 10;
	com_isartdigital_utils_game_pooling_PoolObject.call(this,pAsset);
};
$hxClasses["com.isartdigital.ruby.utils.RessourceEffect"] = com_isartdigital_ruby_utils_RessourceEffect;
com_isartdigital_ruby_utils_RessourceEffect.__name__ = ["com","isartdigital","ruby","utils","RessourceEffect"];
com_isartdigital_ruby_utils_RessourceEffect.__super__ = com_isartdigital_utils_game_pooling_PoolObject;
com_isartdigital_ruby_utils_RessourceEffect.prototype = $extend(com_isartdigital_utils_game_pooling_PoolObject.prototype,{
	initStarsParticle: function(pX,pY) {
		if(com_isartdigital_ruby_game_GameManager.currentMode == "Spécial") {
			return;
		}
		var counter = 0;
		var _g1 = 0;
		while(_g1 < 60) {
			++_g1;
			++counter;
			if(counter >= 60) {
				this.starsParticle = com_isartdigital_ruby_utils_ParticleManager.getInstance().createParticle("trail",["stars1"],500);
				this.starsParticle.x = pX;
				this.starsParticle.y = pY;
				this.addChild(this.starsParticle);
				counter = 0;
			}
		}
	}
	,setModeInit: function(pAnimationType,pDestination,pRessourceType,pDirectionDispersion,pWhereToAddchildParticles) {
		this.counter = 0;
		this.finalDestination = pDestination;
		this.ressourceType = pRessourceType;
		var myRessource;
		this.container = pWhereToAddchildParticles;
		if(this.ressourceType == com_isartdigital_ruby_utils_RessourceType.SoftCurrency) {
			myRessource = com_isartdigital_utils_game_pooling_PoolManager.getFromPool("RessourceSoftCurrency");
			this.addChild(myRessource);
			myRessource.start();
		} else if(this.ressourceType == com_isartdigital_ruby_utils_RessourceType.HardCurrency) {
			myRessource = com_isartdigital_utils_game_pooling_PoolManager.getFromPool("RessourceHardCurrency");
			this.addChild(myRessource);
			myRessource.start();
		} else {
			myRessource = com_isartdigital_utils_game_pooling_PoolManager.getFromPool(Std.string(pRessourceType));
			this.addChild(myRessource);
			myRessource.start();
		}
		this.start();
		if(pAnimationType == "bubble") {
			this.setModeBubble();
		}
		if(pAnimationType == "curve") {
			this.setModeCurve();
		}
		if(pAnimationType == "dispersionToCurve" && pDirectionDispersion != null) {
			this.setModeDispersionToCurve(pDirectionDispersion);
		}
		if(pAnimationType == "dispersionToExplosion" && pDirectionDispersion != null) {
			this.setModeDispersionToExplosion(pDirectionDispersion);
		}
	}
	,setModeBubble: function() {
		this.doAction = $bind(this,this.doActionBubble);
		this.counter = 100;
		if(!com_isartdigital_utils_sounds_SoundManager.getSound("bubbleUp").playing()) {
			com_isartdigital_utils_sounds_SoundManager.getSound("bubbleUp").play();
		}
	}
	,setModeCurve: function() {
		this.counter = 30;
		this.originPoint = this.position.clone();
		this.bezierA = new PIXI.Point(this.originPoint.x + (this.originPoint.x < this.finalDestination.x?1:-1) * 30 * 3,this.originPoint.y + 90);
		this.bezierB = new PIXI.Point(this.finalDestination.x,this.finalDestination.y + 30);
		this.doAction = $bind(this,this.doActionCurve);
		if(!com_isartdigital_utils_sounds_SoundManager.getSound("bubbleCurve").playing()) {
			com_isartdigital_utils_sounds_SoundManager.getSound("bubbleCurve").play();
		}
	}
	,setModeExplosion: function() {
		this.doAction = $bind(this,this.doActionExplosion);
		this.counter = 100;
		if(!com_isartdigital_utils_sounds_SoundManager.getSound("bubbleExplosion").playing()) {
			com_isartdigital_utils_sounds_SoundManager.getSound("bubbleExplosion").play();
		}
		var lElement;
		var radius = 7;
		var _g1 = 0;
		var _g = this.numLittleBubbleToSpawn;
		while(_g1 < _g) {
			var i = _g1++;
			lElement = js_Boot.__cast(com_isartdigital_utils_game_pooling_PoolManager.getFromPool("Bubble") , com_isartdigital_ruby_utils_RessourceEffect);
			lElement.x = this.x + radius * Math.cos(2 * Math.PI * i / this.numLittleBubbleToSpawn);
			lElement.y = this.y + radius * Math.sin(2 * Math.PI * i / this.numLittleBubbleToSpawn);
			lElement.scale.x /= 3;
			lElement.scale.y /= 3;
			lElement.init(null);
			this.addChild(lElement);
			lElement.dispertionCounter = 15 * i;
			lElement.setModeInit("null",this.finalDestination,this.ressourceType);
			lElement.originPoint = new PIXI.Point(this.position.x,this.position.y);
			this.listRessources.push(lElement);
		}
		this.parent.removeChild(this);
	}
	,setModeDispersionToCurve: function(pDirectionDispertion) {
		this.counter = 40;
		this.doAction = $bind(this,this.doActionDispertion);
		if(!com_isartdigital_utils_sounds_SoundManager.getSound("bubbleExplosion").playing()) {
			com_isartdigital_utils_sounds_SoundManager.getSound("bubbleExplosion").play();
		}
		this.directionDispersion = pDirectionDispertion.clone();
		this.nextAction = $bind(this,this.setModeCurve);
	}
	,setModeDispersionToExplosion: function(pDirectionDispertion) {
		this.counter = 40;
		this.doAction = $bind(this,this.doActionDispertion);
		if(!com_isartdigital_utils_sounds_SoundManager.getSound("bubbleExplosion").playing()) {
			com_isartdigital_utils_sounds_SoundManager.getSound("bubbleExplosion").play();
		}
		this.directionDispersion = pDirectionDispertion.clone();
		this.nextAction = $bind(this,this.setModeExplosion);
	}
	,doActionBubble: function() {
		var base = 1;
		if(this.counter-- > 0) {
			this.scale.x = base + 0.15 * Math.cos(2 * Math.PI * 2 * this.counter / 100);
			this.scale.y = base + 0.15 * Math.sin(2 * Math.PI * 2 * this.counter / 100);
			this.y -= 2;
			this.x += 0.75 * Math.cos(2 * Math.PI * 3 * this.counter / 100);
			this.initStarsParticle(this.x,this.y);
		} else {
			this.scale.x = 1;
			this.scale.y = 1;
			this.setModeExplosion();
		}
	}
	,doActionCurve: function() {
		if(this.counter-- > 0) {
			var lPoint = com_isartdigital_ruby_utils_BezierCurve.calculCurve(this.originPoint,this.bezierA,this.bezierB,this.finalDestination,1 - this.counter / 30,true);
			this.x = lPoint.x;
			this.y = lPoint.y;
			this.initStarsParticle(this.x,this.y);
		} else {
			if(!com_isartdigital_utils_sounds_SoundManager.getSound("gold").playing()) {
				com_isartdigital_utils_sounds_SoundManager.getSound("gold").play();
			}
			com_isartdigital_ruby_utils_RessourcesEffectManager.getInstance().OnEffectEnd();
			this.dispose();
		}
	}
	,doActionExplosion: function() {
		var listRessourceLenght = this.listRessources.length;
		var lElement;
		var i;
		if(this.counter-- > 33.333333333333336) {
			var _g1 = 0;
			while(_g1 < listRessourceLenght) {
				var i1 = _g1++;
				lElement = this.listRessources[i1];
				lElement.x = lElement.originPoint.x + Math.sin(Math.PI * 2 * this.counter / 100) * 150 * Math.cos(Math.PI * 2 * this.counter / 100 * 2 + 2 * Math.PI * i1 / listRessourceLenght);
				lElement.y = lElement.originPoint.y + Math.sin(Math.PI * 2 * this.counter / 100) * 150 * Math.sin(Math.PI * 2 * this.counter / 100 * 2 + 2 * Math.PI * i1 / listRessourceLenght);
				this.initStarsParticle(lElement.x,lElement.y);
			}
		} else {
			this.counter--;
			var _g11 = 0;
			while(_g11 < listRessourceLenght) {
				i = listRessourceLenght - 1 - _g11++;
				lElement = this.listRessources[i];
				lElement.x = lElement.originPoint.x + 150 * Math.cos(Math.PI * 2 * this.counter / 100 * 2 + 2 * Math.PI * i / listRessourceLenght);
				lElement.y = lElement.originPoint.y + 150 * Math.sin(Math.PI * 2 * this.counter / 100 * 2 + 2 * Math.PI * i / listRessourceLenght);
				lElement.dispertionCounter--;
				if(lElement.dispertionCounter <= 0) {
					lElement.setModeCurve();
					this.listRessources.splice(i,1);
				}
			}
			if(listRessourceLenght == 0) {
				this.dispose();
			}
		}
	}
	,doActionDispertion: function() {
		if(this.counter-- > 0) {
			this.x += this.directionDispersion.x * (this.counter / 40);
			this.y += this.directionDispersion.y * (this.counter / 40);
			this.initStarsParticle(this.x,this.y);
		} else {
			this.nextAction();
		}
	}
	,__class__: com_isartdigital_ruby_utils_RessourceEffect
});
var com_isartdigital_ruby_game_sprites_ressources_Bubble = function(pAsset) {
	com_isartdigital_ruby_utils_RessourceEffect.call(this,pAsset);
};
$hxClasses["com.isartdigital.ruby.game.sprites.ressources.Bubble"] = com_isartdigital_ruby_game_sprites_ressources_Bubble;
com_isartdigital_ruby_game_sprites_ressources_Bubble.__name__ = ["com","isartdigital","ruby","game","sprites","ressources","Bubble"];
com_isartdigital_ruby_game_sprites_ressources_Bubble.__super__ = com_isartdigital_ruby_utils_RessourceEffect;
com_isartdigital_ruby_game_sprites_ressources_Bubble.prototype = $extend(com_isartdigital_ruby_utils_RessourceEffect.prototype,{
	__class__: com_isartdigital_ruby_game_sprites_ressources_Bubble
});
var com_isartdigital_ruby_game_sprites_ressources_RessourceHardCurrency = function(pAsset) {
	com_isartdigital_utils_game_pooling_PoolObject.call(this,pAsset);
};
$hxClasses["com.isartdigital.ruby.game.sprites.ressources.RessourceHardCurrency"] = com_isartdigital_ruby_game_sprites_ressources_RessourceHardCurrency;
com_isartdigital_ruby_game_sprites_ressources_RessourceHardCurrency.__name__ = ["com","isartdigital","ruby","game","sprites","ressources","RessourceHardCurrency"];
com_isartdigital_ruby_game_sprites_ressources_RessourceHardCurrency.__super__ = com_isartdigital_utils_game_pooling_PoolObject;
com_isartdigital_ruby_game_sprites_ressources_RessourceHardCurrency.prototype = $extend(com_isartdigital_utils_game_pooling_PoolObject.prototype,{
	__class__: com_isartdigital_ruby_game_sprites_ressources_RessourceHardCurrency
});
var com_isartdigital_ruby_game_sprites_ressources_RessourceSoftCurrency = function(pAsset) {
	com_isartdigital_utils_game_pooling_PoolObject.call(this,pAsset);
};
$hxClasses["com.isartdigital.ruby.game.sprites.ressources.RessourceSoftCurrency"] = com_isartdigital_ruby_game_sprites_ressources_RessourceSoftCurrency;
com_isartdigital_ruby_game_sprites_ressources_RessourceSoftCurrency.__name__ = ["com","isartdigital","ruby","game","sprites","ressources","RessourceSoftCurrency"];
com_isartdigital_ruby_game_sprites_ressources_RessourceSoftCurrency.__super__ = com_isartdigital_utils_game_pooling_PoolObject;
com_isartdigital_ruby_game_sprites_ressources_RessourceSoftCurrency.prototype = $extend(com_isartdigital_utils_game_pooling_PoolObject.prototype,{
	__class__: com_isartdigital_ruby_game_sprites_ressources_RessourceSoftCurrency
});
var com_isartdigital_ruby_game_world_Background = function(pAsset) {
	com_isartdigital_ruby_game_sprites_elements_GameElement.call(this,pAsset);
	this.boxType = com_isartdigital_utils_game_BoxType.SELF;
};
$hxClasses["com.isartdigital.ruby.game.world.Background"] = com_isartdigital_ruby_game_world_Background;
com_isartdigital_ruby_game_world_Background.__name__ = ["com","isartdigital","ruby","game","world","Background"];
com_isartdigital_ruby_game_world_Background.__super__ = com_isartdigital_ruby_game_sprites_elements_GameElement;
com_isartdigital_ruby_game_world_Background.prototype = $extend(com_isartdigital_ruby_game_sprites_elements_GameElement.prototype,{
	__class__: com_isartdigital_ruby_game_world_Background
});
var com_isartdigital_ruby_game_world_Layer = function(pWidth,pHeight) {
	this.width = pWidth;
	this.height = pHeight;
};
$hxClasses["com.isartdigital.ruby.game.world.Layer"] = com_isartdigital_ruby_game_world_Layer;
com_isartdigital_ruby_game_world_Layer.__name__ = ["com","isartdigital","ruby","game","world","Layer"];
com_isartdigital_ruby_game_world_Layer.prototype = {
	init: function() {
		this.initGrid();
	}
	,initGrid: function() {
		this.grid = [];
		var lArray;
		var _g1 = 0;
		var _g = this.width;
		while(_g1 < _g) {
			var i = _g1++;
			lArray = [];
			var _g3 = 0;
			var _g2 = this.height;
			while(_g3 < _g2) lArray[_g3++] = null;
			this.grid[i] = lArray;
		}
	}
	,add: function(pElem) {
		if(pElem == null) {
			return;
		}
		if(!this.canAdd(pElem)) {
			return;
		}
		var _g1 = pElem.rowMin;
		var _g = pElem.rowMax + 1;
		while(_g1 < _g) {
			var i = _g1++;
			var _g3 = pElem.colMin;
			var _g2 = pElem.colMax + 1;
			while(_g3 < _g2) this.setCell(i,_g3++,pElem);
		}
	}
	,remove: function(pElem) {
		if(pElem == null) {
			return;
		}
		var _g1 = pElem.rowMin;
		var _g = pElem.rowMax + 1;
		while(_g1 < _g) {
			var i = _g1++;
			var _g3 = pElem.colMin;
			var _g2 = pElem.colMax + 1;
			while(_g3 < _g2) this.setCell(i,_g3++,null);
		}
	}
	,isIn: function(pElem) {
		if(pElem == null) {
			return false;
		}
		if(pElem.colMin >= 0 && pElem.rowMin >= 0) {
			if(pElem.colMax <= this.width - 1) {
				return pElem.rowMax <= this.height - 1;
			} else {
				return false;
			}
		} else {
			return false;
		}
	}
	,canAdd: function(pElem) {
		if(pElem == null) {
			return false;
		}
		if(!this.isIn(pElem)) {
			return false;
		}
		var _g1 = pElem.rowMin - pElem.margin;
		var _g = pElem.rowMax + 1 + pElem.margin;
		while(_g1 < _g) {
			var i = _g1++;
			var _g3 = pElem.colMin - pElem.margin;
			var _g2 = pElem.colMax + 1 + pElem.margin;
			while(_g3 < _g2) {
				var j = _g3++;
				if(this.getCell(i,j) != null) {
					return false;
				} else if(i == 26 || j == 26) {
					return false;
				}
			}
		}
		return true;
	}
	,getCell: function(pX,pY) {
		if(this.grid[pX] == null) {
			return null;
		}
		if(this.grid[pX][pY] == null) {
			return null;
		}
		return this.grid[pX][pY];
	}
	,setCell: function(pX,pY,pElem) {
		this.grid[pX][pY] = pElem;
	}
	,getData: function() {
		if(this.grid.length <= 0) {
			return null;
		}
		var arrayToSave = [];
		var toSave;
		var _g1 = 0;
		var _g = this.grid.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _g3 = 0;
			var _g2 = this.grid[i].length;
			while(_g3 < _g2) {
				var inGrid = this.grid[i][_g3++];
				if(inGrid != null) {
					if(js_Boot.__instanceof(inGrid,com_isartdigital_ruby_game_sprites_elements_Building)) {
						var lBuilding = js_Boot.__cast(inGrid , com_isartdigital_ruby_game_sprites_elements_Building);
						toSave = { type : lBuilding.className, x : lBuilding.colMin, y : lBuilding.rowMin, mode : lBuilding.currentState, evolveState : lBuilding.level, timeForNextState : lBuilding.timeForNextState, elapsedTime : lBuilding.elapsedTime, width : lBuilding.width, height : lBuilding.height, worldX : lBuilding.toGlobal(lBuilding.position).x, worldY : lBuilding.toGlobal(lBuilding.position).y};
					} else {
						toSave = { type : inGrid.className, x : inGrid.colMin, y : inGrid.rowMin, width : inGrid.width, height : inGrid.height, worldX : inGrid.toGlobal(inGrid.position).x, worldY : inGrid.toGlobal(inGrid.position).y};
					}
					arrayToSave.push(toSave);
				}
			}
		}
		return arrayToSave;
	}
	,__class__: com_isartdigital_ruby_game_world_Layer
};
var com_isartdigital_ruby_game_world_MapInteractor = function() {
	this.modalPopinOpened = false;
	this.movingAlienMode = false;
	this.openMenuHasBeenRequested = false;
	this.isCameraLocked = false;
	this.isClicked = false;
	this.doAction = $bind(this,this.doActionNormal);
};
$hxClasses["com.isartdigital.ruby.game.world.MapInteractor"] = com_isartdigital_ruby_game_world_MapInteractor;
com_isartdigital_ruby_game_world_MapInteractor.__name__ = ["com","isartdigital","ruby","game","world","MapInteractor"];
com_isartdigital_ruby_game_world_MapInteractor.getInstance = function() {
	if(com_isartdigital_ruby_game_world_MapInteractor.instance == null) {
		com_isartdigital_ruby_game_world_MapInteractor.instance = new com_isartdigital_ruby_game_world_MapInteractor();
	}
	return com_isartdigital_ruby_game_world_MapInteractor.instance;
};
com_isartdigital_ruby_game_world_MapInteractor.prototype = {
	doActionNormal: function() {
		this.checkBuildingHover();
		if(!com_isartdigital_ruby_game_controller_Controller.isTap && this.isClicked) {
			this.isClicked = false;
		}
		if(com_isartdigital_ruby_game_controller_Controller.getInstance().getMouseRegion() != null) {
			if(com_isartdigital_ruby_game_controller_Controller.isTap && com_isartdigital_ruby_game_controller_Controller.getInstance().getMouseRegion().isActive && !this.isClicked && com_isartdigital_ruby_game_Spawner.getInstance().toSpawn == null) {
				this.isClicked = true;
				if(this.gameElemUnderMouse() != null) {
					this.openInfoPanel();
				} else {
					this.closeInfoPanel();
				}
			}
		}
	}
	,doActionSpawner: function() {
		com_isartdigital_ruby_game_Spawner.getInstance().doAction();
	}
	,gameElemUnderMouse: function() {
		if(com_isartdigital_ruby_game_controller_Controller.getInstance().getMouseRegion() == null) {
			return null;
		}
		var lPoint = com_isartdigital_ruby_game_controller_Controller.getInstance().getPosFrom(com_isartdigital_ruby_game_controller_Controller.getInstance().getMouseRegion().layers[1].container);
		lPoint = com_isartdigital_utils_game_iso_IsoManager.localToModel(lPoint);
		var lDataGameElem = com_isartdigital_ruby_game_controller_Controller.getInstance().getMouseRegion().layers[1].getCell(js_Boot.__cast(lPoint.y , Int),js_Boot.__cast(lPoint.x , Int));
		if(lDataGameElem == null) {
			return null;
		}
		return this.getGraphicBuildingWithDataBuilding(lDataGameElem);
	}
	,getGraphicBuildingWithDataBuilding: function(pDataBuilding) {
		var _g1 = 0;
		var _g = com_isartdigital_utils_game_pooling_PoolObject.activeObjectList.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(!js_Boot.__instanceof(com_isartdigital_utils_game_pooling_PoolObject.activeObjectList[i],com_isartdigital_ruby_juicy_bullesxp_Bulle)) {
				var lGraphicBuilding = js_Boot.__cast(com_isartdigital_utils_game_pooling_PoolObject.activeObjectList[i] , com_isartdigital_ruby_game_sprites_elements_GameElement);
				if(lGraphicBuilding.hasSameCoordonatesAs(pDataBuilding)) {
					return lGraphicBuilding;
				}
			}
		}
		return null;
	}
	,openXenoPanel: function() {
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_XenosPanel.getInstance());
	}
	,closeInfoPanel: function() {
		com_isartdigital_ruby_ui_UIManager.getInstance().closeCurrentPopin();
	}
	,openInfoPanel: function() {
		if(!js_Boot.__instanceof(this.gameElemUnderMouse(),com_isartdigital_ruby_game_sprites_elements_destructible_Destructible)) {
			var lBuilding = js_Boot.__cast(this.gameElemUnderMouse() , com_isartdigital_ruby_game_sprites_elements_Building);
			if(lBuilding.currentState != lBuilding.CONSTRUCTING_STATE && lBuilding.currentState != lBuilding.UPGRADING_STATE) {
				if(!this.movingAlienMode) {
					this.openContextual();
				} else if(lBuilding.canReceiveAliens) {
					com_isartdigital_ruby_ui_UIManager.getInstance().closeAllPopins();
					if(js_Boot.__instanceof(lBuilding,com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienIncubator)) {
						this.stopAlienMode();
					}
					var _g = 0;
					var _g1 = com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.alienPaddockList;
					while(_g < _g1.length) {
						var paddock = _g1[_g];
						++_g;
						if(paddock.instanceID == this.alienSelected.idBuilding) {
							(js_Boot.__cast(paddock.instance , com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock)).removeAlien(this.alienSelected);
						}
					}
					if(js_Boot.__instanceof(lBuilding,com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock)) {
						(js_Boot.__cast(lBuilding , com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock)).addAlien(this.alienSelected);
					}
					if(js_Boot.__instanceof(lBuilding,com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienTrainingCenter)) {
						(js_Boot.__cast(lBuilding , com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienTrainingCenter)).addAlien(this.alienSelected);
					}
				}
			} else {
				this.openTimeBased(lBuilding);
			}
		} else if(!this.movingAlienMode) {
			com_isartdigital_ruby_ui_popin_DynamicPopin.getInstance().init("destroy item for " + Std.string(_$UInt_UInt_$Impl_$.toFloat(this.gameElemUnderMouse().elem.softCurrency)) + " coins ?",($_=(js_Boot.__cast(this.gameElemUnderMouse() , com_isartdigital_ruby_game_sprites_elements_destructible_Destructible)),$bind($_,$_.destructionDB)));
			com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_DynamicPopin.getInstance());
		}
	}
	,openInfoPaddock: function(pPaddock) {
	}
	,openTimeBased: function(lBuilding) {
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_TimeBased.getInstance());
		com_isartdigital_ruby_ui_popin_TimeBased.getInstance().setText(lBuilding);
	}
	,openContextual: function() {
		if(!(js_Boot.__cast(this.gameElemUnderMouse() , com_isartdigital_ruby_game_sprites_elements_Building)).contextualOpened) {
			com_isartdigital_ruby_ui_UIManager.getInstance().closeAllPopins();
			(js_Boot.__cast(this.gameElemUnderMouse() , com_isartdigital_ruby_game_sprites_elements_Building)).contextualOpened = true;
			com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.getInstance());
			com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.getInstance().set_target(js_Boot.__cast(this.gameElemUnderMouse() , com_isartdigital_ruby_game_sprites_elements_Building));
			com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.getInstance().init();
			com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.getInstance().update();
			if(js_Boot.__instanceof(this.gameElemUnderMouse(),com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock)) {
				this.openXenoPanel();
			}
		} else {
			com_isartdigital_ruby_ui_UIManager.getInstance().closeAllPopins();
		}
	}
	,highLightAlienBuildings: function() {
		this.movingAlienMode = true;
		com_isartdigital_ruby_ui_hud_Hud.getInstance().maskButtons();
		com_isartdigital_ruby_ui_UIManager.getInstance().closeAllPopins();
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_Deplacement.getInstance());
		var _g1 = 0;
		var _g = com_isartdigital_utils_game_pooling_PoolObject.activeObjectList.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(js_Boot.__instanceof(com_isartdigital_utils_game_pooling_PoolObject.activeObjectList[i],com_isartdigital_ruby_game_sprites_elements_Building)) {
				var lBuilding = js_Boot.__cast(com_isartdigital_utils_game_pooling_PoolObject.activeObjectList[i] , com_isartdigital_ruby_game_sprites_elements_Building);
				if(!lBuilding.canReceiveAliens) {
					lBuilding.applyGreyFilter();
				}
			} else if(js_Boot.__instanceof(com_isartdigital_utils_game_pooling_PoolObject.activeObjectList[i],com_isartdigital_ruby_game_sprites_elements_destructible_Destructible)) {
				(js_Boot.__cast(com_isartdigital_utils_game_pooling_PoolObject.activeObjectList[i] , com_isartdigital_ruby_game_sprites_elements_destructible_Destructible)).applyGreyFilter();
			}
		}
		var tmp = com_isartdigital_ruby_game_world_World.getInstance().worldMap.iterator();
		while(tmp.hasNext()) {
			var tmp1 = tmp.next().iterator();
			while(tmp1.hasNext()) {
				var lRegion = tmp1.next();
				if(lRegion.isActive) {
					lRegion.background.applyGreyFilter();
				}
			}
		}
	}
	,stopAlienMode: function() {
		com_isartdigital_ruby_ui_hud_Hud.getInstance().unmaskButtons();
		this.movingAlienMode = false;
		com_isartdigital_ruby_ui_popin_XenosPanel.getInstance().alienSelected = null;
		var _g1 = 0;
		var _g = com_isartdigital_utils_game_pooling_PoolObject.activeObjectList.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(js_Boot.__instanceof(com_isartdigital_utils_game_pooling_PoolObject.activeObjectList[i],com_isartdigital_ruby_game_sprites_elements_Building)) {
				var lBuilding = js_Boot.__cast(com_isartdigital_utils_game_pooling_PoolObject.activeObjectList[i] , com_isartdigital_ruby_game_sprites_elements_Building);
				if(!lBuilding.canReceiveAliens) {
					lBuilding.removeGreyFilter();
				}
			} else if(js_Boot.__instanceof(com_isartdigital_utils_game_pooling_PoolObject.activeObjectList[i],com_isartdigital_ruby_game_sprites_elements_destructible_Destructible)) {
				(js_Boot.__cast(com_isartdigital_utils_game_pooling_PoolObject.activeObjectList[i] , com_isartdigital_ruby_game_sprites_elements_destructible_Destructible)).removeGreyFilter();
			}
		}
		var tmp = com_isartdigital_ruby_game_world_World.getInstance().worldMap.iterator();
		while(tmp.hasNext()) {
			var tmp1 = tmp.next().iterator();
			while(tmp1.hasNext()) {
				var lRegion = tmp1.next();
				if(lRegion.isActive) {
					lRegion.background.removeGreyFilter();
				}
			}
		}
	}
	,destroy: function() {
		com_isartdigital_ruby_game_world_MapInteractor.instance = null;
	}
	,checkBuildingHover: function() {
		if(!this.movingAlienMode) {
			if(!this.modalPopinOpened) {
				if(this.gameElemUnderMouse() != null && !js_Boot.__instanceof(this.gameElemUnderMouse(),com_isartdigital_ruby_game_sprites_elements_destructible_Destructible) && this.gameElemUnderMouse().currentState != this.gameElemUnderMouse().UPGRADING_STATE && this.gameElemUnderMouse().currentState != this.gameElemUnderMouse().CONSTRUCTING_STATE) {
					this.lastBuildingHovered = js_Boot.__cast(this.gameElemUnderMouse() , com_isartdigital_ruby_game_sprites_elements_Building);
					this.lastBuildingHovered.applyHoverFilter();
				} else if(this.lastBuildingHovered != null) {
					this.lastBuildingHovered.removeHoverFilter();
					this.lastBuildingHovered = null;
				}
			}
		} else if(this.gameElemUnderMouse() != null && !js_Boot.__instanceof(this.gameElemUnderMouse(),com_isartdigital_ruby_game_sprites_elements_destructible_Destructible)) {
			this.lastBuildingHovered = js_Boot.__cast(this.gameElemUnderMouse() , com_isartdigital_ruby_game_sprites_elements_Building);
			if(this.lastBuildingHovered.canReceiveAliens) {
				this.lastBuildingHovered.applyAllowedFilter();
			}
		} else if(this.lastBuildingHovered != null) {
			if(this.lastBuildingHovered.canReceiveAliens) {
				this.lastBuildingHovered.removeAllowedFilter();
			}
			this.lastBuildingHovered = null;
		}
	}
	,activateSpawner: function() {
		if(com_isartdigital_ruby_game_Spawner.getInstance().toSpawn != null) {
			this.doAction = $bind(this,this.doActionSpawner);
		} else {
			js_Browser.alert("SPAWNER ACTIVATED WHILE TOSPAWN DOESN'T EXIST");
		}
	}
	,deactivateSpawner: function() {
		if(com_isartdigital_ruby_game_Spawner.getInstance().toSpawn == null) {
			this.doAction = $bind(this,this.doActionNormal);
		} else {
			js_Browser.alert("SPAWNER DEACTIVATED WHILE TOSPAWN EXISTS");
		}
	}
	,__class__: com_isartdigital_ruby_game_world_MapInteractor
};
var com_isartdigital_ruby_game_world_Region = function(pX,pY) {
	this.isActive = false;
	this.numberLayer = 2;
	this.x = pX;
	this.y = pY;
	this.background = new com_isartdigital_ruby_game_world_Background();
	this.warFog = new com_isartdigital_ruby_game_world_Background("WarFog");
	this.background.start();
	this.warFog.start();
	this.layers = [];
	this.powerStationsInRegion = [];
	this.antennasInRegion = [];
	this.regionContainer = new com_isartdigital_ruby_game_world_RegionContainer(this.x,this.y);
	this.regionContainer.addChild(this.warFog);
	this.regionContainer.addChild(this.background);
	this.regionContainer.name = Std.string(this.x) + " " + Std.string(this.y);
	this.background.localHeight = 26;
	this.background.localWidth = 26;
	this.background.currentRegionCoor = new PIXI.Point(this.x,this.y);
	this.background.visible = false;
};
$hxClasses["com.isartdigital.ruby.game.world.Region"] = com_isartdigital_ruby_game_world_Region;
com_isartdigital_ruby_game_world_Region.__name__ = ["com","isartdigital","ruby","game","world","Region"];
com_isartdigital_ruby_game_world_Region.sortContainers = function() {
	com_isartdigital_utils_game_GameStage.getInstance().getGameContainer().children = com_isartdigital_utils_game_iso_IsoManager.sortTiles(com_isartdigital_utils_game_GameStage.getInstance().getGameContainer().children);
};
com_isartdigital_ruby_game_world_Region.sortAllContainer = function() {
	var lArray = [];
	var lLength = com_isartdigital_utils_game_GameStage.getInstance().getGameContainer().children.length;
	var _g1 = 0;
	while(_g1 < lLength) {
		var i = _g1++;
		var lTemp = com_isartdigital_utils_game_GameStage.getInstance().getGameContainer().children[i];
		if(lTemp.name != com_isartdigital_ruby_game_world_UnlockButtonContainer.getInstance().name) {
			lArray.push(lTemp);
		}
	}
	com_isartdigital_utils_game_GameStage.getInstance().getGameContainer().children = com_isartdigital_utils_game_iso_IsoManager.sortTiles(lArray);
	com_isartdigital_utils_game_GameStage.getInstance().getGameContainer().addChild(com_isartdigital_ruby_game_world_UnlockButtonContainer.getInstance().getUnlockContainer());
	var tmp = com_isartdigital_ruby_game_world_World.getInstance().worldMap.keys();
	while(tmp.hasNext()) {
		var firstKey = tmp.next();
		var tmp1 = com_isartdigital_ruby_game_world_World.getInstance().worldMap.get(firstKey).keys();
		while(tmp1.hasNext()) {
			var secondKey = tmp1.next();
			var _g11 = 0;
			var _g = com_isartdigital_ruby_game_world_World.getInstance().worldMap.get(firstKey).get(secondKey).layers.length;
			while(_g11 < _g) {
				var i1 = _g11++;
				var tmp2 = com_isartdigital_ruby_game_world_World.getInstance().worldMap.get(firstKey).get(secondKey);
				tmp2.layers[i1].container.children = com_isartdigital_utils_game_iso_IsoManager.sortTiles(com_isartdigital_ruby_game_world_World.getInstance().worldMap.get(firstKey).get(secondKey).layers[i1].container.children);
			}
		}
	}
};
com_isartdigital_ruby_game_world_Region.prototype = {
	setActive: function() {
		if(this.isActive) {
			return;
		}
		this.isActive = true;
		this.regionContainer.removeChild(this.warFog);
		this.warFog.destroy();
		this.background.visible = true;
	}
	,createLayerContainer: function(pLayer) {
		pLayer.container = new com_isartdigital_ruby_game_world_RegionContainer(this.x,this.y);
		pLayer.container.name = "region" + this.x + "" + this.y;
		this.regionContainer.addChild(pLayer.container);
	}
	,setPosition: function(pX,pY) {
		return new PIXI.Point((pX - pY) * 2600.,(pX + pY) * 1300.);
	}
	,newInitLayer: function() {
		var _g1 = 0;
		var _g = this.numberLayer;
		while(_g1 < _g) {
			var i = _g1++;
			var lCurrentLayer = new com_isartdigital_ruby_game_world_Layer(26,26);
			this.layers[i] = lCurrentLayer;
			lCurrentLayer.init();
			this.createLayerContainer(lCurrentLayer);
		}
		com_isartdigital_utils_game_GameStage.getInstance().getGameContainer().addChild(this.regionContainer);
		this.regionContainer.position = this.setPosition(this.x,this.y);
		if(!this.isActive) {
			this.unlockPopin = new com_isartdigital_ruby_ui_popin_buyRegion_BuyRegion();
			com_isartdigital_ruby_ui_UIManager.getInstance().openRegionPopin(this.unlockPopin);
			this.unlockPopin.set_target(this.background);
			this.unlockPopin.setOwnRegion(this);
		}
	}
	,unlock: function() {
		com_isartdigital_ruby_game_world_World.getInstance().unlockRegion(this.x,this.y);
		var _g = 0;
		var _g1 = com_isartdigital_ruby_ui_UIManager.getInstance().regionPopins;
		while(_g < _g1.length) {
			var popin = _g1[_g];
			++_g;
			(js_Boot.__cast(popin , com_isartdigital_ruby_ui_popin_buyRegion_BuyRegion)).displayCost();
		}
		com_isartdigital_utils_save_DataBaseAction.getInstance().unlockRegion(this.x,this.y);
		com_isartdigital_ruby_game_sprites_elements_destructible_Destructible.createDestructibles(this);
		com_isartdigital_ruby_game_world_Region.sortAllContainer();
	}
	,getData: function() {
		if(this.layers.length <= 0) {
			return null;
		}
		var arrayToSave = [];
		var _g1 = 0;
		var _g = this.layers.length;
		while(_g1 < _g) {
			var i = _g1++;
			arrayToSave.push({ index : i, grid : this.layers[i].getData()});
		}
		return arrayToSave;
	}
	,__class__: com_isartdigital_ruby_game_world_Region
};
var com_isartdigital_ruby_game_world_RegionContainer = function(pX,pY) {
	PIXI.Container.call(this);
	this.colMin = pX * 26;
	this.colMax = pX + 26 + (this.colMin - 1);
	this.rowMin = pY * 26;
	this.rowMax = pY + 26 + (this.rowMin - 1);
};
$hxClasses["com.isartdigital.ruby.game.world.RegionContainer"] = com_isartdigital_ruby_game_world_RegionContainer;
com_isartdigital_ruby_game_world_RegionContainer.__name__ = ["com","isartdigital","ruby","game","world","RegionContainer"];
com_isartdigital_ruby_game_world_RegionContainer.__interfaces__ = [com_isartdigital_utils_game_iso_IZSortable];
com_isartdigital_ruby_game_world_RegionContainer.__super__ = PIXI.Container;
com_isartdigital_ruby_game_world_RegionContainer.prototype = $extend(PIXI.Container.prototype,{
	__class__: com_isartdigital_ruby_game_world_RegionContainer
});
var com_isartdigital_ruby_game_world_UnlockButtonContainer = function() {
	PIXI.Container.call(this);
	this.unlockContainer = new PIXI.Container();
	this.name = "unlockContainer";
	this.unlockContainer.name = "unlockContainer";
	this.unlockContainer.interactive = false;
	this.unlockContainer.buttonMode = false;
};
$hxClasses["com.isartdigital.ruby.game.world.UnlockButtonContainer"] = com_isartdigital_ruby_game_world_UnlockButtonContainer;
com_isartdigital_ruby_game_world_UnlockButtonContainer.__name__ = ["com","isartdigital","ruby","game","world","UnlockButtonContainer"];
com_isartdigital_ruby_game_world_UnlockButtonContainer.getInstance = function() {
	if(com_isartdigital_ruby_game_world_UnlockButtonContainer.instance == null) {
		com_isartdigital_ruby_game_world_UnlockButtonContainer.instance = new com_isartdigital_ruby_game_world_UnlockButtonContainer();
	}
	return com_isartdigital_ruby_game_world_UnlockButtonContainer.instance;
};
com_isartdigital_ruby_game_world_UnlockButtonContainer.__super__ = PIXI.Container;
com_isartdigital_ruby_game_world_UnlockButtonContainer.prototype = $extend(PIXI.Container.prototype,{
	getUnlockContainer: function() {
		return this.unlockContainer;
	}
	,positionning: function() {
		this.position = com_isartdigital_utils_game_GameStage.getInstance().getGameContainer().position;
	}
	,destroy: function() {
		com_isartdigital_ruby_game_world_UnlockButtonContainer.instance = null;
		PIXI.Container.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_ruby_game_world_UnlockButtonContainer
});
var com_isartdigital_ruby_game_world_World = function() {
	this.unlockRegionCost = 30000;
	this.numberOfRegionUnlocked = 0;
	this.worldMap = new haxe_ds_IntMap();
	this.unlockRegion(0,0);
};
$hxClasses["com.isartdigital.ruby.game.world.World"] = com_isartdigital_ruby_game_world_World;
com_isartdigital_ruby_game_world_World.__name__ = ["com","isartdigital","ruby","game","world","World"];
com_isartdigital_ruby_game_world_World.getInstance = function() {
	if(com_isartdigital_ruby_game_world_World.instance == null) {
		com_isartdigital_ruby_game_world_World.instance = new com_isartdigital_ruby_game_world_World();
	}
	return com_isartdigital_ruby_game_world_World.instance;
};
com_isartdigital_ruby_game_world_World.prototype = {
	unlockRegion: function(pX,pY) {
		if(this.getRegion(pX,pY) == null) {
			this.addRegion(pX,pY);
			this.getRegion(pX,pY).setActive();
			this.initContainers(pX,pY);
		} else {
			this.getRegion(pX,pY).setActive();
		}
		if(this.getRegion(pX + 1,pY) == null) {
			this.addRegion(pX + 1,pY);
			this.initContainers(pX + 1,pY);
		}
		if(this.getRegion(pX,pY + 1) == null) {
			this.addRegion(pX,pY + 1);
			this.initContainers(pX,pY + 1);
		}
		if(this.getRegion(pX - 1,pY) == null) {
			this.addRegion(pX - 1,pY);
			this.initContainers(pX - 1,pY);
		}
		if(this.getRegion(pX,pY - 1) == null) {
			this.addRegion(pX,pY - 1);
			this.initContainers(pX,pY - 1);
		}
		if(this.getRegion(pX - 1,pY - 1) == null) {
			this.addRegion(pX - 1,pY - 1);
			this.initContainers(pX - 1,pY - 1);
		}
		if(this.getRegion(pX + 1,pY + 1) == null) {
			this.addRegion(pX + 1,pY + 1);
			this.initContainers(pX + 1,pY + 1);
		}
		if(this.getRegion(pX + 1,pY - 1) == null) {
			this.addRegion(pX + 1,pY - 1);
			this.initContainers(pX + 1,pY - 1);
		}
		if(this.getRegion(pX - 1,pY + 1) == null) {
			this.addRegion(pX - 1,pY + 1);
			this.initContainers(pX - 1,pY + 1);
		}
		if(this.getRegion(pX,pY).unlockPopin != null) {
			com_isartdigital_ruby_ui_UIManager.getInstance().closeRegionPopin(this.getRegion(pX,pY).unlockPopin);
		}
		this.numberOfRegionUnlocked++;
		this.calculateUnlockingRegionCost();
	}
	,initContainers: function(pX,pY) {
		this.getRegion(pX,pY).newInitLayer();
	}
	,calculateUnlockingRegionCost: function() {
		if(this.numberOfRegionUnlocked == 1) {
			return;
		}
		var lCost = 30000;
		var _g1 = 1;
		var _g = this.numberOfRegionUnlocked;
		while(_g1 < _g) {
			++_g1;
			lCost *= 3;
		}
		this.unlockRegionCost = lCost;
	}
	,addRegion: function(pX,pY) {
		if(this.getRegion(pX,pY) != null) {
			return;
		}
		var map;
		var region;
		if(!this.worldMap.h.hasOwnProperty(pX)) {
			map = new haxe_ds_IntMap();
		} else {
			map = this.worldMap.h[pX];
		}
		if(!map.h.hasOwnProperty(pY)) {
			region = new com_isartdigital_ruby_game_world_Region(pX,pY);
			map.h[pY] = region;
		}
		this.worldMap.h[pX] = map;
	}
	,getRegion: function(pX,pY) {
		if(this.worldMap.h[pX] == null) {
			return null;
		}
		if(this.worldMap.h[pX].get(pY) == null) {
			return null;
		}
		return this.worldMap.h[pX].get(pY);
	}
	,getData: function() {
		var lWorldArray = [];
		var tmp = this.worldMap.keys();
		while(tmp.hasNext()) {
			var keyX = tmp.next();
			var tmp1 = this.worldMap.h[keyX].keys();
			while(tmp1.hasNext()) {
				var keyY = tmp1.next();
				lWorldArray.push({ posX : keyX, posY : keyY, width : 26, height : 26, layerSave : this.worldMap.h[keyX].get(keyY).getData(), isActive : this.worldMap.h[keyX].get(keyY).isActive});
			}
		}
		return lWorldArray;
	}
	,destroy: function() {
		com_isartdigital_ruby_game_world_World.instance = null;
	}
	,__class__: com_isartdigital_ruby_game_world_World
};
var com_isartdigital_ruby_juicy_bullesxp_Bulle = function(pAsset) {
	this.isFirstBulle = true;
	com_isartdigital_utils_game_pooling_PoolObject.call(this,pAsset);
	this.interactive = true;
	this.scale.x = 3;
	this.scale.y = 3;
};
$hxClasses["com.isartdigital.ruby.juicy.bullesxp.Bulle"] = com_isartdigital_ruby_juicy_bullesxp_Bulle;
com_isartdigital_ruby_juicy_bullesxp_Bulle.__name__ = ["com","isartdigital","ruby","juicy","bullesxp","Bulle"];
com_isartdigital_ruby_juicy_bullesxp_Bulle.__super__ = com_isartdigital_utils_game_pooling_PoolObject;
com_isartdigital_ruby_juicy_bullesxp_Bulle.prototype = $extend(com_isartdigital_utils_game_pooling_PoolObject.prototype,{
	setModeNormal: function() {
		this.setState(this.DEFAULT_STATE);
		this.scale.x = Math.random() + 3;
		this.scale.y = Math.random() * 2 + 2;
		this.on("click",$bind(this,this.setModeExplosion));
		this.on("tap",$bind(this,this.setModeExplosion));
		com_isartdigital_utils_game_pooling_PoolObject.prototype.setModeNormal.call(this);
	}
	,doActionNormal: function() {
		if((js_Boot.__cast(this.anim , pixi_flump_Movie)).get_currentFrame() >= (js_Boot.__cast(this.anim , pixi_flump_Movie)).get_totalFrames() - 2) {
			this.setState(this.DEFAULT_STATE);
		}
		com_isartdigital_utils_game_pooling_PoolObject.prototype.doActionNormal.call(this);
	}
	,setModePrepareToExplose: function(pIsFirst) {
		if(pIsFirst == null) {
			pIsFirst = true;
		}
		this.counter = 0;
		if(!pIsFirst) {
			this.isFirstBulle = false;
		}
		this.doAction = $bind(this,this.doActionPrepareToExplose);
	}
	,doActionPrepareToExplose: function() {
		this.counter++;
		if(this.counter >= 75) {
			this.setModeExplosion();
		}
	}
	,setModeExplosion: function() {
		this.setState("Explosion");
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerSwitchMode").play();
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerValidate").play();
		this.doAction = $bind(this,this.doActionExplosion);
	}
	,doActionExplosion: function() {
		if((js_Boot.__cast(this.anim , pixi_flump_Movie)).get_currentFrame() >= (js_Boot.__cast(this.anim , pixi_flump_Movie)).get_totalFrames() - 1) {
			if(this.isFirstBulle) {
				com_isartdigital_ruby_juicy_bullesxp_BullesManager.getInstance().destroyGroupOfBulles(this.idBuilding);
			}
			this.destroy();
		}
	}
	,destroy: function() {
		this.off("click",$bind(this,this.setModeExplosion));
		this.off("tap",$bind(this,this.setModeExplosion));
		com_isartdigital_utils_game_pooling_PoolObject.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_ruby_juicy_bullesxp_Bulle
});
var com_isartdigital_ruby_juicy_bullesxp_BullesManager = function() {
	this.listBulle = new haxe_ds_StringMap();
};
$hxClasses["com.isartdigital.ruby.juicy.bullesxp.BullesManager"] = com_isartdigital_ruby_juicy_bullesxp_BullesManager;
com_isartdigital_ruby_juicy_bullesxp_BullesManager.__name__ = ["com","isartdigital","ruby","juicy","bullesxp","BullesManager"];
com_isartdigital_ruby_juicy_bullesxp_BullesManager.getInstance = function() {
	if(com_isartdigital_ruby_juicy_bullesxp_BullesManager.instance == null) {
		com_isartdigital_ruby_juicy_bullesxp_BullesManager.instance = new com_isartdigital_ruby_juicy_bullesxp_BullesManager();
	}
	return com_isartdigital_ruby_juicy_bullesxp_BullesManager.instance;
};
com_isartdigital_ruby_juicy_bullesxp_BullesManager.prototype = {
	initBulles: function(pXp,pParent) {
		var lNumberBulles = 2 + Math.round(Math.random() * 2 * (pParent.localWidth / 2));
		var lBulle;
		var lBulleArray = [];
		var _g1 = 2;
		var _g = lNumberBulles + 1;
		while(_g1 < _g) {
			++_g1;
			lBulle = new com_isartdigital_ruby_juicy_bullesxp_Bulle();
			com_isartdigital_utils_game_GameStage.getInstance().getInfoBulleContainer().addChild(lBulle);
			lBulle.position = this.getRandomPosition(com_isartdigital_utils_game_iso_IsoManager.getGlobalPositionOfBuilding(pParent));
			lBulle.init();
			lBulle.start();
			lBulle.idBuilding = pParent.instanceID;
			lBulleArray.push(lBulle);
		}
		var _this = this.listBulle;
		var key = pParent.instanceID;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,lBulleArray);
		} else {
			_this.h[key] = lBulleArray;
		}
	}
	,getRandomPosition: function(pPoint) {
		var sign = Math.random() <= 0.5?1:-1;
		pPoint.x += sign * Math.random() * 200;
		pPoint.y += sign * Math.random() * 100;
		return pPoint;
	}
	,destroyGroupOfBulles: function(pIdBuilding,pFastDestroy) {
		if(pFastDestroy == null) {
			pFastDestroy = false;
		}
		var _this = this.listBulle;
		var lArray = __map_reserved[pIdBuilding] != null?_this.getReserved(pIdBuilding):_this.h[pIdBuilding];
		if(lArray == null) {
			return;
		}
		var _g1 = 0;
		var _g = lArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(lArray[i] != null) {
				if(!pFastDestroy) {
					lArray[i].setModePrepareToExplose(false);
				} else {
					lArray[i].destroy();
				}
			}
		}
		this.listBulle.remove(pIdBuilding);
		if(!pFastDestroy) {
			var _this1 = com_isartdigital_utils_game_pooling_PoolObject.elementList;
			(js_Boot.__cast((__map_reserved[pIdBuilding] != null?_this1.getReserved(pIdBuilding):_this1.h[pIdBuilding]).instance , com_isartdigital_ruby_game_sprites_elements_Building)).onBulleExplose();
		}
	}
	,isBuildingHasBulles: function(pBuildingID) {
		if(this.listBulle == null || pBuildingID == null) {
			return false;
		}
		var _this = this.listBulle;
		if(__map_reserved[pBuildingID] != null?_this.existsReserved(pBuildingID):_this.h.hasOwnProperty(pBuildingID)) {
			return true;
		}
		return false;
	}
	,destroy: function() {
		com_isartdigital_ruby_juicy_bullesxp_BullesManager.instance = null;
	}
	,__class__: com_isartdigital_ruby_juicy_bullesxp_BullesManager
};
var com_isartdigital_utils_ui_smart_UIMovie = function(pAssetName) {
	com_isartdigital_utils_game_StateGraphic.call(this);
	this.assetName = pAssetName;
	this.factory = new com_isartdigital_utils_game_factory_FlumpMovieAnimFactory();
	this.setState(this.DEFAULT_STATE,true);
};
$hxClasses["com.isartdigital.utils.ui.smart.UIMovie"] = com_isartdigital_utils_ui_smart_UIMovie;
com_isartdigital_utils_ui_smart_UIMovie.__name__ = ["com","isartdigital","utils","ui","smart","UIMovie"];
com_isartdigital_utils_ui_smart_UIMovie.__super__ = com_isartdigital_utils_game_StateGraphic;
com_isartdigital_utils_ui_smart_UIMovie.prototype = $extend(com_isartdigital_utils_game_StateGraphic.prototype,{
	__class__: com_isartdigital_utils_ui_smart_UIMovie
});
var com_isartdigital_ruby_preloadgame_Helix = function(pAsset) {
	this.isStopped = false;
	com_isartdigital_utils_ui_smart_UIMovie.call(this,pAsset);
	this.animation = js_Boot.__cast(this.anim , pixi_flump_Movie);
	this.start();
};
$hxClasses["com.isartdigital.ruby.preloadgame.Helix"] = com_isartdigital_ruby_preloadgame_Helix;
com_isartdigital_ruby_preloadgame_Helix.__name__ = ["com","isartdigital","ruby","preloadgame","Helix"];
com_isartdigital_ruby_preloadgame_Helix.__super__ = com_isartdigital_utils_ui_smart_UIMovie;
com_isartdigital_ruby_preloadgame_Helix.prototype = $extend(com_isartdigital_utils_ui_smart_UIMovie.prototype,{
	start: function() {
		com_isartdigital_utils_ui_smart_UIMovie.prototype.start.call(this);
		com_isartdigital_ruby_Main.getInstance().on("gameLoop",$bind(this,this.gameLoop));
	}
	,isFinished: function() {
		if(this.animation.get_currentFrame() >= this.animation.get_totalFrames() - 1) {
			return true;
		} else {
			return false;
		}
	}
	,update: function(pProgress) {
		var lProgession = Math.round(200 * pProgress / 100);
		if(_$UInt_UInt_$Impl_$.gte(this.animation.get_currentFrame(),lProgession)) {
			this.animation.stop();
			this.isStopped = true;
		}
		if(this.isStopped && _$UInt_UInt_$Impl_$.gt(lProgession,this.animation.get_currentFrame())) {
			this.animation.play();
			this.isStopped = false;
		}
	}
	,gameLoop: function(pEvent) {
		if(this.isFinished()) {
			this.animation.stop();
			com_isartdigital_ruby_Main.getInstance().isAnimLoadingDone = true;
			com_isartdigital_ruby_Main.getInstance().verifyLaunch();
			com_isartdigital_ruby_Main.getInstance().off("gameLoop",$bind(this,this.gameLoop));
		}
	}
	,__class__: com_isartdigital_ruby_preloadgame_Helix
});
var com_isartdigital_ruby_preloadgame_LoadingBar = function(pAsset) {
	com_isartdigital_utils_ui_smart_SmartScreen.call(this,pAsset);
	this.container = js_Boot.__cast(this.getChildByName("loader_container") , com_isartdigital_utils_ui_smart_SmartComponent);
	this.helix = js_Boot.__cast(this.container.getChildByName("helix_turn") , com_isartdigital_ruby_preloadgame_Helix);
	this.helixEmpty = js_Boot.__cast(this.container.getChildByName("helix_turn_empty") , com_isartdigital_utils_ui_smart_UIMovie);
	this.helixEmpty.visible = false;
};
$hxClasses["com.isartdigital.ruby.preloadgame.LoadingBar"] = com_isartdigital_ruby_preloadgame_LoadingBar;
com_isartdigital_ruby_preloadgame_LoadingBar.__name__ = ["com","isartdigital","ruby","preloadgame","LoadingBar"];
com_isartdigital_ruby_preloadgame_LoadingBar.getInstance = function() {
	if(com_isartdigital_ruby_preloadgame_LoadingBar.instance == null) {
		com_isartdigital_ruby_preloadgame_LoadingBar.instance = new com_isartdigital_ruby_preloadgame_LoadingBar();
	}
	return com_isartdigital_ruby_preloadgame_LoadingBar.instance;
};
com_isartdigital_ruby_preloadgame_LoadingBar.__super__ = com_isartdigital_utils_ui_smart_SmartScreen;
com_isartdigital_ruby_preloadgame_LoadingBar.prototype = $extend(com_isartdigital_utils_ui_smart_SmartScreen.prototype,{
	update: function(pProgress) {
		this.helix.update(pProgress);
	}
	,destroy: function() {
		com_isartdigital_ruby_preloadgame_LoadingBar.instance = null;
	}
	,__class__: com_isartdigital_ruby_preloadgame_LoadingBar
});
var com_isartdigital_ruby_preloadgame_PreloadBulle = function(pAsset) {
	this.alpha = 0.1;
	this.assetName = "Bulle";
	com_isartdigital_utils_game_pooling_PoolObject.call(this,this.assetName);
	this.interactive = true;
	this.scale.x = 3;
	this.scale.y = 3;
};
$hxClasses["com.isartdigital.ruby.preloadgame.PreloadBulle"] = com_isartdigital_ruby_preloadgame_PreloadBulle;
com_isartdigital_ruby_preloadgame_PreloadBulle.__name__ = ["com","isartdigital","ruby","preloadgame","PreloadBulle"];
com_isartdigital_ruby_preloadgame_PreloadBulle.__super__ = com_isartdigital_utils_game_pooling_PoolObject;
com_isartdigital_ruby_preloadgame_PreloadBulle.prototype = $extend(com_isartdigital_utils_game_pooling_PoolObject.prototype,{
	init: function(pElem) {
		com_isartdigital_ruby_preloadgame_PreloadBulle.list.push(this);
		com_isartdigital_utils_game_pooling_PoolObject.prototype.init.call(this,pElem);
	}
	,setModeNormal: function() {
		this.on("click",$bind(this,this.setModeExplosion));
		this.on("tap",$bind(this,this.setModeExplosion));
		this.scale.x = Math.random() * 2 + 2;
		this.scale.y = Math.random() * 2 + 2;
		com_isartdigital_utils_game_pooling_PoolObject.prototype.setModeNormal.call(this);
		this.setState(this.DEFAULT_STATE);
	}
	,doActionNormal: function() {
		com_isartdigital_ruby_preloadgame_PreloadMiniGame.scoreText.refreshText(Std.string(com_isartdigital_ruby_preloadgame_PreloadBulle.score));
		if((js_Boot.__cast(this.anim , pixi_flump_Movie)).get_currentFrame() >= (js_Boot.__cast(this.anim , pixi_flump_Movie)).get_totalFrames() - 2) {
			this.setState(this.DEFAULT_STATE);
		}
		com_isartdigital_utils_game_pooling_PoolObject.prototype.doActionNormal.call(this);
	}
	,setModeExplosion: function() {
		this.setState("Explosion");
		this.doAction = $bind(this,this.doActionExplosion);
		com_isartdigital_ruby_preloadgame_PreloadBulle.score++;
		com_isartdigital_ruby_preloadgame_PreloadMiniGame.scoreText.refreshText(Std.string(com_isartdigital_ruby_preloadgame_PreloadBulle.score));
	}
	,doActionExplosion: function() {
		if((js_Boot.__cast(this.anim , pixi_flump_Movie)).get_currentFrame() >= (js_Boot.__cast(this.anim , pixi_flump_Movie)).get_totalFrames() - 1) {
			this.destroy();
		}
	}
	,destroy: function() {
		HxOverrides.remove(com_isartdigital_ruby_preloadgame_PreloadBulle.list,this);
		this.off("click",$bind(this,this.setModeExplosion));
		this.off("tap",$bind(this,this.setModeExplosion));
		com_isartdigital_utils_game_pooling_PoolObject.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_ruby_preloadgame_PreloadBulle
});
var com_isartdigital_ruby_preloadgame_PreloadMiniGame = function() {
	this.counter = 0;
};
$hxClasses["com.isartdigital.ruby.preloadgame.PreloadMiniGame"] = com_isartdigital_ruby_preloadgame_PreloadMiniGame;
com_isartdigital_ruby_preloadgame_PreloadMiniGame.__name__ = ["com","isartdigital","ruby","preloadgame","PreloadMiniGame"];
com_isartdigital_ruby_preloadgame_PreloadMiniGame.getInstance = function() {
	if(com_isartdigital_ruby_preloadgame_PreloadMiniGame.instance == null) {
		com_isartdigital_ruby_preloadgame_PreloadMiniGame.instance = new com_isartdigital_ruby_preloadgame_PreloadMiniGame();
	}
	return com_isartdigital_ruby_preloadgame_PreloadMiniGame.instance;
};
com_isartdigital_ruby_preloadgame_PreloadMiniGame.prototype = {
	start: function() {
		this.counter = 30;
		com_isartdigital_ruby_preloadgame_PreloadMiniGame.scoreText = new com_isartdigital_utils_ui_SmartText(com_isartdigital_utils_game_GameStage.getInstance(),300,300,100,"Arial Black","white","center",true,"blue",0,100);
		com_isartdigital_utils_game_GameStage.getInstance().addChild(com_isartdigital_ruby_preloadgame_PreloadMiniGame.scoreText);
		com_isartdigital_ruby_preloadgame_PreloadMiniGame.scoreText.position = new PIXI.Point(0,50);
		com_isartdigital_ruby_Main.getInstance().on("gameLoop",$bind(this,this.gameLoop));
	}
	,gameLoop: function(pEvent) {
		this.counter++;
		if(this.counter >= 30) {
			var lBulle = new com_isartdigital_ruby_preloadgame_PreloadBulle();
			com_isartdigital_utils_game_GameStage.getInstance().addChild(lBulle);
			lBulle.position = this.getRandomPosition();
			lBulle.init();
			lBulle.start();
			this.counter = 0;
			if(com_isartdigital_ruby_preloadgame_PreloadBulle.list.length >= 20) {
				com_isartdigital_ruby_preloadgame_PreloadBulle.list[0].destroy();
			}
		}
		var _g1 = 0;
		var _g = com_isartdigital_utils_game_pooling_PoolObject.activeObjectList.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(com_isartdigital_utils_game_pooling_PoolObject.activeObjectList[i] == null) {
				continue;
			}
			com_isartdigital_utils_game_pooling_PoolObject.activeObjectList[i].doAction();
		}
	}
	,getRandomPosition: function() {
		var lPoint = new PIXI.Point(0,0);
		lPoint.x = Math.random() * 1500;
		lPoint.y = Math.random() * 1500;
		return lPoint;
	}
	,destroy: function() {
		com_isartdigital_ruby_Main.getInstance().off("gameLoop",$bind(this,this.gameLoop));
		if(com_isartdigital_ruby_preloadgame_PreloadMiniGame.scoreText != null) {
			com_isartdigital_ruby_preloadgame_PreloadMiniGame.scoreText.destroyTimer();
		}
		if(com_isartdigital_ruby_preloadgame_PreloadMiniGame.scoreText != null) {
			com_isartdigital_ruby_preloadgame_PreloadMiniGame.scoreText.destroy();
		}
		var i = com_isartdigital_ruby_preloadgame_PreloadBulle.list.length;
		while(com_isartdigital_ruby_preloadgame_PreloadBulle.list.length > 0) {
			--i;
			com_isartdigital_ruby_preloadgame_PreloadBulle.list[i].destroy();
		}
		com_isartdigital_ruby_preloadgame_PreloadMiniGame.instance = null;
	}
	,__class__: com_isartdigital_ruby_preloadgame_PreloadMiniGame
};
var com_isartdigital_ruby_ui_CheatPanel = function() {
	this._godMode = com_isartdigital_ruby_game_GameManager.getInstance().godMode;
	this._killFTUE = false;
	this._resetFTUE = false;
	this._FTUE = false;
	this.startFTUE = false;
	this.init();
};
$hxClasses["com.isartdigital.ruby.ui.CheatPanel"] = com_isartdigital_ruby_ui_CheatPanel;
com_isartdigital_ruby_ui_CheatPanel.__name__ = ["com","isartdigital","ruby","ui","CheatPanel"];
com_isartdigital_ruby_ui_CheatPanel.getInstance = function() {
	if(com_isartdigital_ruby_ui_CheatPanel.instance == null) {
		com_isartdigital_ruby_ui_CheatPanel.instance = new com_isartdigital_ruby_ui_CheatPanel();
	}
	return com_isartdigital_ruby_ui_CheatPanel.instance;
};
com_isartdigital_ruby_ui_CheatPanel.prototype = {
	init: function() {
		if(com_isartdigital_utils_Config.get_debug() && com_isartdigital_utils_Config.get_data().cheat && !com_isartdigital_utils_system_DeviceCapabilities.get_isCanvasPlus()) {
			this.gui = new dat.gui.GUI();
		}
	}
	,ingame: function() {
		if(this.gui == null) {
			return;
		}
		this.bgFTUEButton = this.gui.add(this,"_killFTUE");
		this.bgFTUEButton.onChange($bind(this,this.killFTUE));
		this.resetFTUEButton = this.gui.add(this,"_resetFTUE");
		this.resetFTUEButton.onChange($bind(this,this.resetFTUE));
		this.godModeBtn = this.gui.add(this,"_godMode");
		this.godModeBtn.onChange($bind(this,this.godMode));
	}
	,clear: function() {
		if(this.gui == null) {
			return;
		}
		this.gui.destroy();
		this.init();
	}
	,godMode: function(pValue) {
		com_isartdigital_ruby_game_GameManager.getInstance().godMode = com_isartdigital_ruby_game_Spawner.getInstance().godMode = pValue;
	}
	,cbFTUE: function(pValue) {
		if(pValue) {
			com_isartdigital_ruby_ui_ftue_FTUEManager.nextStep();
		}
		this.startFTUE = false;
	}
	,cbBgFTUE: function(pValue) {
		com_isartdigital_ruby_ui_ftue_FocusManager.getInstance().set_modalImage(pValue?"assets/ftue2_bg.png":"assets/ftue_bg.png");
	}
	,resetFTUE: function(pValue) {
		if(pValue) {
			com_isartdigital_utils_save_DataBaseAction.getInstance().changeFtueStep(com_isartdigital_ruby_game_player_Player.getInstance().id,0);
			this._resetFTUE = false;
			window.location.reload();
		}
	}
	,killFTUE: function(pValue) {
		if(pValue) {
			com_isartdigital_utils_save_DataBaseAction.getInstance().changeFtueStep(com_isartdigital_ruby_game_player_Player.getInstance().id,100);
			this._killFTUE = false;
			window.location.reload();
		}
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_CheatPanel.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_CheatPanel
};
var com_isartdigital_ruby_ui_GraphicLoader = function() {
	com_isartdigital_utils_ui_Screen.call(this);
};
$hxClasses["com.isartdigital.ruby.ui.GraphicLoader"] = com_isartdigital_ruby_ui_GraphicLoader;
com_isartdigital_ruby_ui_GraphicLoader.__name__ = ["com","isartdigital","ruby","ui","GraphicLoader"];
com_isartdigital_ruby_ui_GraphicLoader.getInstance = function() {
	if(com_isartdigital_ruby_ui_GraphicLoader.instance == null) {
		com_isartdigital_ruby_ui_GraphicLoader.instance = new com_isartdigital_ruby_ui_GraphicLoader();
	}
	return com_isartdigital_ruby_ui_GraphicLoader.instance;
};
com_isartdigital_ruby_ui_GraphicLoader.__super__ = com_isartdigital_utils_ui_Screen;
com_isartdigital_ruby_ui_GraphicLoader.prototype = $extend(com_isartdigital_utils_ui_Screen.prototype,{
	destroy: function() {
		com_isartdigital_ruby_ui_GraphicLoader.instance = null;
		com_isartdigital_utils_ui_Screen.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_ruby_ui_GraphicLoader
});
var com_isartdigital_ruby_ui_LocalizationByType = function() {
};
$hxClasses["com.isartdigital.ruby.ui.LocalizationByType"] = com_isartdigital_ruby_ui_LocalizationByType;
com_isartdigital_ruby_ui_LocalizationByType.__name__ = ["com","isartdigital","ruby","ui","LocalizationByType"];
com_isartdigital_ruby_ui_LocalizationByType.getInstance = function() {
	if(com_isartdigital_ruby_ui_LocalizationByType.instance == null) {
		com_isartdigital_ruby_ui_LocalizationByType.instance = new com_isartdigital_ruby_ui_LocalizationByType();
	}
	return com_isartdigital_ruby_ui_LocalizationByType.instance;
};
com_isartdigital_ruby_ui_LocalizationByType.prototype = {
	translateFromType: function(pType) {
		return com_isartdigital_utils_system_Localization.getLabel(this.getLabelFromType(pType));
	}
	,getLabelFromType: function(pType) {
		if(pType == "UrbanAntenna") {
			return com_isartdigital_ruby_ui_LocalizationByType.ANTENNA;
		} else if(pType == "UrbanCommunication") {
			return com_isartdigital_ruby_ui_LocalizationByType.COMMUNICATION;
		} else if(pType == "UrbanHeadQuarter") {
			return com_isartdigital_ruby_ui_LocalizationByType.HQ;
		} else if(pType == "UrbanPowerStation") {
			return com_isartdigital_ruby_ui_LocalizationByType.POWERSTATION;
		} else if(pType == "UrbanTranslation") {
			return com_isartdigital_ruby_ui_LocalizationByType.TRANSLATION;
		} else if(pType == "DrillingAutoOutPost") {
			return com_isartdigital_ruby_ui_LocalizationByType.DRILLING_AUTO_OUTPOST;
		} else if(pType == "DrillingCenter") {
			return com_isartdigital_ruby_ui_LocalizationByType.DRILLING_CENTER;
		} else if(pType == "DrillingOutPost") {
			return com_isartdigital_ruby_ui_LocalizationByType.DRILLING_OUTPOST;
		} else if(pType == "BuildingCosmeticCapsule1") {
			return com_isartdigital_ruby_ui_LocalizationByType.COSMETIC_CAPSULE1;
		} else if(pType == "BuildingCosmeticCapsule2") {
			return com_isartdigital_ruby_ui_LocalizationByType.COSMETIC_CAPSULE2;
		} else if(pType == "BuildingCosmeticCapsule3") {
			return com_isartdigital_ruby_ui_LocalizationByType.COSMETIC_CAPSULE3;
		} else if(pType == "BuildingCosmeticPlant1") {
			return com_isartdigital_ruby_ui_LocalizationByType.COSMETIC_PLANT1;
		} else if(pType == "BuildingCosmeticPlant2") {
			return com_isartdigital_ruby_ui_LocalizationByType.COSMETIC_PLANT2;
		} else if(pType == "BuildingCosmeticPlant3") {
			return com_isartdigital_ruby_ui_LocalizationByType.COSMETIC_PLANT3;
		} else if(pType == "AlienIncubator") {
			return com_isartdigital_ruby_ui_LocalizationByType.INCUBATOR;
		} else if(pType == "AlienPaddockTiny") {
			return com_isartdigital_ruby_ui_LocalizationByType.PADDOCK_TINY;
		} else if(pType == "AlienPaddockSmall") {
			return com_isartdigital_ruby_ui_LocalizationByType.PADDOCK_SMALL;
		} else if(pType == "AlienPaddockMedium") {
			return com_isartdigital_ruby_ui_LocalizationByType.PADDOCK_MEDIUM;
		} else if(pType == "AlienPaddockBig") {
			return com_isartdigital_ruby_ui_LocalizationByType.PADDOCK_BIG;
		} else if(pType == "AlienResearchCenter") {
			return com_isartdigital_ruby_ui_LocalizationByType.RESEARCH_CENTER;
		} else if(pType == "AlienTrainingCenter") {
			return com_isartdigital_ruby_ui_LocalizationByType.TRAINING_CENTER;
		} else if(pType == "AlienCryoCenter") {
			return com_isartdigital_ruby_ui_LocalizationByType.CRYO_CENTER;
		} else {
			return pType;
		}
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_LocalizationByType.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_LocalizationByType
};
var com_isartdigital_ruby_ui_Slider = function() {
	this.isParamsUpdate = false;
	PIXI.DisplayObject.call(this);
	this.g = new PIXI.Graphics();
};
$hxClasses["com.isartdigital.ruby.ui.Slider"] = com_isartdigital_ruby_ui_Slider;
com_isartdigital_ruby_ui_Slider.__name__ = ["com","isartdigital","ruby","ui","Slider"];
com_isartdigital_ruby_ui_Slider.__super__ = PIXI.DisplayObject;
com_isartdigital_ruby_ui_Slider.prototype = $extend(PIXI.DisplayObject.prototype,{
	init: function(pSlider,pItemContainer) {
		this.initContainer(pSlider,pItemContainer);
	}
	,initMask: function() {
		if(this.theMask == null) {
			this.theMask = new PIXI.Graphics();
		}
		this.theMask.beginFill(16777215);
		this.theMask.drawRect(0 - (this.mainContainer.width - 150) / 2,this.itemContainer.y - this.mainContainer.height / 2,this.mainContainer.width - 150,this.mainContainer.height);
		this.theMask.endFill();
		this.mainContainer.addChildAt(this.theMask,0);
	}
	,initContainer: function(pSlider,pItemContainer) {
		var _gthis = this;
		this.mainContainer = pSlider;
		this.mainContainer.interactive = true;
		this.itemContainer = pItemContainer;
		this.itemContainer.interactive = true;
		this.mainContainer.on("mousemove",$bind(this,this.onSlide));
		this.mainContainer.on("mousedown",function() {
			_gthis.isDown = true;
			_gthis.oldX = com_isartdigital_ruby_game_controller_Controller.getInstance().getPosFrom(_gthis.mainContainer).x;
		});
		this.mainContainer.on("mouseup",function() {
			_gthis.isDown = false;
			_gthis.checkSliderPosition();
			_gthis.listenItems();
		});
		this.mainContainer.on("mouseover",function() {
			_gthis.isOver = true;
		});
		this.mainContainer.on("mouseout",function() {
			_gthis.isDown = false;
			_gthis.isOver = false;
			_gthis.listenItems();
		});
		if(!this.isParamsUpdate) {
			this.updateParams();
		}
		this.itemContainer.mask = this.theMask;
	}
	,setItemContainer: function(pItemContainer) {
	}
	,update: function() {
		this.setItemPositionToBeginPosition();
		this.updateFirstAndLastXItemData();
		this.checkIfHasEnoughItemToSlide();
		this.listenItems();
	}
	,updateParams: function() {
		this.beginXSlider = this.itemContainer.x;
		this.endXSlider = this.mainContainer.width / 2 - 200;
		if(this.theMask == null) {
			this.initMask();
		}
		this.isParamsUpdate = true;
	}
	,updateFirstAndLastXItemData: function() {
		if(this.itemContainer.children.length <= 0) {
			return;
		}
		this.lastItemX = this.itemContainer.x + this.itemContainer.getChildAt(this.itemContainer.children.length - 1).x;
		this.firstItemX = this.itemContainer.x;
	}
	,setItemPositionToBeginPosition: function() {
		this.itemContainer.x = this.beginXSlider;
	}
	,checkIfHasEnoughItemToSlide: function() {
		this.hasEnoughItemToSlide = this.lastItemX > this.endXSlider;
	}
	,onSlide: function(pEvent) {
		if(this.isDown) {
			this.moveTheSlider();
		}
	}
	,moveTheSlider: function() {
		if(this.hasEnoughItemToSlide) {
			var currentX = com_isartdigital_ruby_game_controller_Controller.getInstance().getPosFrom(this.mainContainer).x;
			this.updateFirstAndLastXItemData();
			this.deltaX = currentX - this.oldX;
			if(Math.abs(this.deltaX) > 5) {
				this.offItems();
			}
			var newX = this.itemContainer.x + this.deltaX;
			if(newX <= this.beginXSlider && this.lastItemX >= this.endXSlider) {
				this.itemContainer.x = newX;
			}
			this.oldX = currentX;
		}
	}
	,listenItems: function() {
		if(!this.isListeningItem) {
			var _g = 0;
			var _g1 = this.itemContainer.children;
			while(_g < _g1.length) {
				var item = _g1[_g];
				++_g;
				(js_Boot.__cast(item , com_isartdigital_ruby_ui_items_Item)).onListen();
			}
			this.isListeningItem = true;
		}
	}
	,offItems: function() {
		if(this.isListeningItem) {
			var _g = 0;
			var _g1 = this.itemContainer.children;
			while(_g < _g1.length) {
				var item = _g1[_g];
				++_g;
				(js_Boot.__cast(item , com_isartdigital_ruby_ui_items_Item)).onOff();
			}
			this.isListeningItem = false;
		}
	}
	,checkSliderPosition: function() {
		if(this.hasEnoughItemToSlide) {
			if(this.itemContainer.x > this.beginXSlider) {
				this.itemContainer.x = this.beginXSlider;
			} else if(this.lastItemX < this.endXSlider) {
				this.itemContainer.x += this.endXSlider - this.lastItemX + 5;
			}
		}
	}
	,draw: function() {
		this.g.clear();
		this.g.beginFill(16711680);
		this.g.drawCircle(this.beginXSlider,0,10);
		this.g.endFill();
		this.g.beginFill(16711935);
		this.g.drawCircle(this.firstItemX,0,10);
		this.g.endFill();
		this.g.beginFill(65280);
		this.g.drawCircle(this.endXSlider,0,10);
		this.g.endFill();
		this.g.beginFill(255);
		this.g.drawCircle(this.lastItemX,0,10);
		this.g.endFill();
		this.mainContainer.addChild(this.g);
	}
	,__class__: com_isartdigital_ruby_ui_Slider
});
var com_isartdigital_ruby_ui_UIManager = function() {
	this.popins = [];
	this.regionPopins = [];
};
$hxClasses["com.isartdigital.ruby.ui.UIManager"] = com_isartdigital_ruby_ui_UIManager;
com_isartdigital_ruby_ui_UIManager.__name__ = ["com","isartdigital","ruby","ui","UIManager"];
com_isartdigital_ruby_ui_UIManager.getInstance = function() {
	if(com_isartdigital_ruby_ui_UIManager.instance == null) {
		com_isartdigital_ruby_ui_UIManager.instance = new com_isartdigital_ruby_ui_UIManager();
	}
	return com_isartdigital_ruby_ui_UIManager.instance;
};
com_isartdigital_ruby_ui_UIManager.prototype = {
	openScreen: function(pScreen) {
		this.closeScreens();
		com_isartdigital_utils_game_GameStage.getInstance().getScreensContainer().addChild(pScreen);
		pScreen.open();
	}
	,closeScreens: function() {
		var lContainer = com_isartdigital_utils_game_GameStage.getInstance().getScreensContainer();
		while(lContainer.children.length > 0) {
			var lCurrent = js_Boot.__cast(lContainer.getChildAt(lContainer.children.length - 1) , com_isartdigital_utils_ui_Screen);
			lCurrent.interactive = false;
			lContainer.removeChild(lCurrent);
			lCurrent.close();
		}
	}
	,openPopin: function(pPopin) {
		this.popins.push(pPopin);
		com_isartdigital_utils_game_GameStage.getInstance().getPopinsContainer().addChild(pPopin);
		pPopin.open();
		com_isartdigital_utils_sounds_SoundManager.getSound("in").play();
	}
	,openRegionPopin: function(pPopin) {
		this.regionPopins.push(pPopin);
		pPopin.open();
	}
	,closeRegionPopin: function(pPopin) {
		if(pPopin == null) {
			HxOverrides.remove(this.regionPopins,pPopin);
		}
		pPopin.close();
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerValidate").play();
	}
	,closePopin: function(pPopin) {
		if(pPopin == null) {
			HxOverrides.remove(this.popins,pPopin);
		}
		com_isartdigital_utils_game_GameStage.getInstance().getPopinsContainer().removeChild(pPopin);
		pPopin.close();
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerValidate").play();
	}
	,closeCurrentPopin: function() {
		if(this.popins.length == 0) {
			return;
		}
		var lCurrent = this.popins.pop();
		lCurrent.interactive = false;
		com_isartdigital_utils_game_GameStage.getInstance().getPopinsContainer().removeChild(lCurrent);
		lCurrent.close();
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerValidate").play();
	}
	,closeAllPopins: function() {
		if(this.popins.length == 0) {
			return;
		}
		var _g1 = 0;
		var _g = this.popins.length;
		while(_g1 < _g) {
			++_g1;
			this.closePopin(this.popins.pop());
		}
	}
	,openHud: function() {
		com_isartdigital_utils_game_GameStage.getInstance().getHudContainer().addChild(com_isartdigital_ruby_ui_hud_Hud.getInstance());
		com_isartdigital_ruby_ui_hud_Hud.getInstance().open();
	}
	,closeHud: function() {
		com_isartdigital_utils_game_GameStage.getInstance().getHudContainer().removeChild(com_isartdigital_ruby_ui_hud_Hud.getInstance());
		com_isartdigital_ruby_ui_hud_Hud.getInstance().close();
	}
	,openFTUE: function() {
		com_isartdigital_utils_game_GameStage.getInstance().getFtueContainer().addChild(com_isartdigital_ruby_ui_ftue_FocusManager.getInstance());
		com_isartdigital_ruby_ui_ftue_FocusManager.getInstance().open();
	}
	,closeFTUE: function() {
		com_isartdigital_utils_game_GameStage.getInstance().getFtueContainer().removeChild(com_isartdigital_ruby_ui_ftue_FocusManager.getInstance());
		com_isartdigital_ruby_ui_ftue_FocusManager.getInstance().close();
	}
	,startGame: function() {
		this.closeScreens();
		this.openHud();
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_UIManager.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_UIManager
};
var com_isartdigital_ruby_ui_ftue_Arrow = function(pAsset) {
	com_isartdigital_ruby_game_sprites_FlumpStateGraphic.call(this,"FTUE_arrow");
};
$hxClasses["com.isartdigital.ruby.ui.ftue.Arrow"] = com_isartdigital_ruby_ui_ftue_Arrow;
com_isartdigital_ruby_ui_ftue_Arrow.__name__ = ["com","isartdigital","ruby","ui","ftue","Arrow"];
com_isartdigital_ruby_ui_ftue_Arrow.__super__ = com_isartdigital_ruby_game_sprites_FlumpStateGraphic;
com_isartdigital_ruby_ui_ftue_Arrow.prototype = $extend(com_isartdigital_ruby_game_sprites_FlumpStateGraphic.prototype,{
	start: function() {
		com_isartdigital_ruby_game_sprites_FlumpStateGraphic.prototype.start.call(this);
		this.setState(this.DEFAULT_STATE,true);
	}
	,__class__: com_isartdigital_ruby_ui_ftue_Arrow
});
var com_isartdigital_ruby_ui_ftue_BouleHighlight = function(pAsset) {
	com_isartdigital_ruby_game_sprites_FlumpStateGraphic.call(this,"Boule_Highlight");
};
$hxClasses["com.isartdigital.ruby.ui.ftue.BouleHighlight"] = com_isartdigital_ruby_ui_ftue_BouleHighlight;
com_isartdigital_ruby_ui_ftue_BouleHighlight.__name__ = ["com","isartdigital","ruby","ui","ftue","BouleHighlight"];
com_isartdigital_ruby_ui_ftue_BouleHighlight.__super__ = com_isartdigital_ruby_game_sprites_FlumpStateGraphic;
com_isartdigital_ruby_ui_ftue_BouleHighlight.prototype = $extend(com_isartdigital_ruby_game_sprites_FlumpStateGraphic.prototype,{
	start: function() {
		com_isartdigital_ruby_game_sprites_FlumpStateGraphic.prototype.start.call(this);
		this.setState(this.DEFAULT_STATE,true);
	}
	,__class__: com_isartdigital_ruby_ui_ftue_BouleHighlight
});
var com_isartdigital_ruby_ui_ftue_FTUEManager = function() {
};
$hxClasses["com.isartdigital.ruby.ui.ftue.FTUEManager"] = com_isartdigital_ruby_ui_ftue_FTUEManager;
com_isartdigital_ruby_ui_ftue_FTUEManager.__name__ = ["com","isartdigital","ruby","ui","ftue","FTUEManager"];
com_isartdigital_ruby_ui_ftue_FTUEManager.init = function(pFTUE) {
	com_isartdigital_ruby_ui_ftue_FTUEManager.steps = pFTUE.steps;
	com_isartdigital_ruby_ui_ftue_FTUEManager.numberSteps = com_isartdigital_ruby_ui_ftue_FTUEManager.steps.length;
};
com_isartdigital_ruby_ui_ftue_FTUEManager.isFTUEon = function() {
	if(_$UInt_UInt_$Impl_$.gt(com_isartdigital_ruby_ui_ftue_FTUEManager.numberSteps - 1,com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep)) {
		return com_isartdigital_ruby_ui_ftue_FTUEManager.isRunning;
	} else {
		return false;
	}
};
com_isartdigital_ruby_ui_ftue_FTUEManager.register = function(pTarget) {
	if(_$UInt_UInt_$Impl_$.gte(com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep,com_isartdigital_ruby_ui_ftue_FTUEManager.steps.length) || pTarget.parent == null) {
		return;
	}
	var _g1 = 0;
	var _g = com_isartdigital_ruby_ui_ftue_FTUEManager.steps.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(pTarget.name == com_isartdigital_ruby_ui_ftue_FTUEManager.steps[i].name && pTarget.parent.name == com_isartdigital_ruby_ui_ftue_FTUEManager.steps[i].parentName) {
			com_isartdigital_ruby_ui_ftue_FTUEManager.steps[i].item = pTarget;
		}
		if(pTarget.name == com_isartdigital_ruby_ui_ftue_FTUEManager.steps[i].arrowTarget) {
			com_isartdigital_ruby_ui_ftue_FTUEManager.steps[i].itemTarget = pTarget;
		}
	}
};
com_isartdigital_ruby_ui_ftue_FTUEManager.nextStep = function(pTarget) {
	com_isartdigital_ruby_ui_ftue_FTUEManager.isRunning = true;
	if(!com_isartdigital_ruby_ui_ftue_FTUEManager.isFTUEon()) {
		return;
	}
	if(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].text != "") {
		com_isartdigital_ruby_ui_ftue_FTUEManager.setText();
	}
	com_isartdigital_ruby_ui_ftue_FocusManager.getInstance().setCurrentStep(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep]);
	if(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].isAction) {
		if(js_Boot.__instanceof(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].item,com_isartdigital_utils_ui_smart_SmartButton)) {
			(js_Boot.__cast(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].item , com_isartdigital_utils_ui_smart_SmartButton)).on("click",com_isartdigital_ruby_ui_ftue_FTUEManager.endOfStep);
		} else if(js_Boot.__instanceof(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].item,com_isartdigital_utils_ui_smart_SmartComponent)) {
			(js_Boot.__cast(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].item , com_isartdigital_utils_ui_smart_SmartComponent)).on("click",com_isartdigital_ruby_ui_ftue_FTUEManager.endOfStep);
		} else if(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].parentName == "infoBulleContainer") {
			if(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].item.interactive) {
				com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].item.on("click",com_isartdigital_ruby_ui_ftue_FTUEManager.endOfStep);
			}
		}
	}
	com_isartdigital_ruby_ui_UIManager.getInstance().openFTUE();
	if(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].event != "") {
		if(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].event == "onBulle") {
			com_isartdigital_ruby_game_sprites_elements_Building.event.on(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].event,com_isartdigital_ruby_ui_ftue_FTUEManager.readyToNextStep);
		} else if(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].event == "onAddAlien") {
			com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.event.on(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].event,com_isartdigital_ruby_ui_ftue_FTUEManager.readyToNextStep);
		} else {
			com_isartdigital_ruby_ui_popin_SmartPopinRegister.event.on(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].event,com_isartdigital_ruby_ui_ftue_FTUEManager.readyToNextStep);
		}
	}
	if(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].gift != "") {
		com_isartdigital_ruby_ui_ftue_FTUEManager.addGift(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].gift);
	}
	if(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].ftueStop) {
		com_isartdigital_ruby_ui_ftue_FTUEManager.isRunning = false;
	}
	if(pTarget != null || com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].name == "") {
		return;
	}
	com_isartdigital_ruby_ui_ftue_FocusManager.getInstance().setFocus(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].item,com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].arrowRot);
};
com_isartdigital_ruby_ui_ftue_FTUEManager.endOfStep = function() {
	if(js_Boot.__instanceof(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].item,com_isartdigital_utils_ui_smart_SmartButton) && com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].isAction) {
		(js_Boot.__cast(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].item , com_isartdigital_utils_ui_smart_SmartButton)).off("click",com_isartdigital_ruby_ui_ftue_FTUEManager.endOfStep);
		com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].item = null;
	} else if(js_Boot.__instanceof(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].item,com_isartdigital_utils_ui_smart_SmartComponent) && com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].isAction) {
		(js_Boot.__cast(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].item , com_isartdigital_utils_ui_smart_SmartComponent)).off("click",com_isartdigital_ruby_ui_ftue_FTUEManager.endOfStep);
		com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].item = null;
	}
	com_isartdigital_ruby_ui_UIManager.getInstance().closeFTUE();
	if(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].checkpoint) {
		com_isartdigital_utils_save_DataBaseAction.getInstance().changeFtueStep(com_isartdigital_ruby_game_player_Player.getInstance().id,com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep);
	}
	if(com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep == com_isartdigital_ruby_ui_ftue_FTUEManager.steps.length - 1) {
		com_isartdigital_ruby_ui_UIManager.getInstance().closeCurrentPopin();
	}
	com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep++;
	if(com_isartdigital_ruby_ui_ftue_FTUEPopin.getInstance() != null) {
		com_isartdigital_ruby_ui_UIManager.getInstance().closePopin(com_isartdigital_ruby_ui_ftue_FTUEPopin.getInstance());
	}
	if(!com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep - 1].ftueStop && com_isartdigital_ruby_ui_ftue_FTUEManager.isFTUEon()) {
		com_isartdigital_ruby_ui_ftue_FTUEManager.nextStep();
	}
};
com_isartdigital_ruby_ui_ftue_FTUEManager.readyToNextStep = function(pEvent) {
	if(com_isartdigital_ruby_ui_ftue_FTUEPopin.getInstance() != null) {
		com_isartdigital_ruby_ui_UIManager.getInstance().closePopin(com_isartdigital_ruby_ui_ftue_FTUEPopin.getInstance());
	}
	if(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].event == "onBulle") {
		com_isartdigital_ruby_game_sprites_elements_Building.event.off(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].event,com_isartdigital_ruby_ui_ftue_FTUEManager.readyToNextStep);
	} else if(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].event == "onAddAlien") {
		com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.event.off(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].event,com_isartdigital_ruby_ui_ftue_FTUEManager.readyToNextStep);
	} else {
		com_isartdigital_ruby_ui_popin_SmartPopinRegister.event.off(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].event,com_isartdigital_ruby_ui_ftue_FTUEManager.readyToNextStep);
	}
	com_isartdigital_ruby_ui_ftue_FTUEManager.endOfStep();
};
com_isartdigital_ruby_ui_ftue_FTUEManager.setText = function() {
	if(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].text == "LABEL_FTUE_ISART_POINT_DISCLAIMER") {
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_IsartPoints.getInstance());
	} else {
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_ftue_FTUEPopin.getInstance());
		var lCallBack = com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].isAction || com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].event != ""?null:com_isartdigital_ruby_ui_ftue_FTUEManager.nextText;
		var lEmot = 0;
		if(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].emotion != null) {
			if(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].emotion == "joy") {
				lEmot = 1;
			} else if(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].emotion == "neutral") {
				lEmot = 0;
			} else if(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].emotion == "exclamation") {
				lEmot = 3;
			} else if(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].emotion == "surprised") {
				lEmot = 2;
			}
		}
		com_isartdigital_ruby_ui_ftue_FTUEPopin.getInstance().init(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].text,lCallBack,com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].textPos,lEmot);
	}
};
com_isartdigital_ruby_ui_ftue_FTUEManager.addGift = function(pGift) {
	if(pGift == "AlienForreur") {
		var lAlien = { idAlien : "Basic1" + new Date().getTime(), idBuilding : "", mode : "", name : "Basic1", type : "AlienForeur", nomPropre : "Bob", stamina : 6, level : 1, startTime : Std.string(new Date()), endTime : Std.string(new Date()), carac : com_isartdigital_ruby_game_sprites_elements_aliens_Alien.getAlienType("Basic1",com_isartdigital_utils_save_DataManager.getInstance().getAlienArray("AlienForeur")), idPlayer : com_isartdigital_ruby_game_player_Player.getInstance().id};
		com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList.push(lAlien);
		com_isartdigital_utils_save_DataBaseAction.getInstance().addAlien(lAlien.idAlien,lAlien.idBuilding,lAlien.type,lAlien.name,lAlien.nomPropre,lAlien.stamina,lAlien.endTime);
	}
	if(pGift == "AlienProducer") {
		var lAlien1 = { idAlien : "Producer1" + new Date().getTime(), idBuilding : "", mode : "", name : "Producer1", type : "AlienProducer", nomPropre : "Mik", stamina : 6, level : 1, startTime : "00:00:00", endTime : "00:00:00", carac : com_isartdigital_ruby_game_sprites_elements_aliens_Alien.getAlienType("Producer1",com_isartdigital_utils_save_DataManager.getInstance().getAlienArray("AlienProducer")), idPlayer : com_isartdigital_ruby_game_player_Player.getInstance().id};
		com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList.push(lAlien1);
		com_isartdigital_utils_save_DataBaseAction.getInstance().addAlien(lAlien1.idAlien,lAlien1.idBuilding,lAlien1.type,lAlien1.name,lAlien1.nomPropre,lAlien1.stamina,lAlien1.endTime);
	}
};
com_isartdigital_ruby_ui_ftue_FTUEManager.nextText = function() {
	com_isartdigital_ruby_ui_ftue_FTUEManager.endOfStep();
};
com_isartdigital_ruby_ui_ftue_FTUEManager.prototype = {
	__class__: com_isartdigital_ruby_ui_ftue_FTUEManager
};
var com_isartdigital_utils_ui_Popin = function(pID) {
	com_isartdigital_utils_ui_UIComponent.call(this,pID);
};
$hxClasses["com.isartdigital.utils.ui.Popin"] = com_isartdigital_utils_ui_Popin;
com_isartdigital_utils_ui_Popin.__name__ = ["com","isartdigital","utils","ui","Popin"];
com_isartdigital_utils_ui_Popin.__super__ = com_isartdigital_utils_ui_UIComponent;
com_isartdigital_utils_ui_Popin.prototype = $extend(com_isartdigital_utils_ui_UIComponent.prototype,{
	__class__: com_isartdigital_utils_ui_Popin
});
var com_isartdigital_utils_ui_smart_SmartPopin = function(pID) {
	com_isartdigital_utils_ui_Popin.call(this,pID);
	this.buttonMode = true;
	this.interactive = true;
	this.defaultCursor = "url(assets/Curseur.png), auto";
	this.build();
};
$hxClasses["com.isartdigital.utils.ui.smart.SmartPopin"] = com_isartdigital_utils_ui_smart_SmartPopin;
com_isartdigital_utils_ui_smart_SmartPopin.__name__ = ["com","isartdigital","utils","ui","smart","SmartPopin"];
com_isartdigital_utils_ui_smart_SmartPopin.__super__ = com_isartdigital_utils_ui_Popin;
com_isartdigital_utils_ui_smart_SmartPopin.prototype = $extend(com_isartdigital_utils_ui_Popin.prototype,{
	__class__: com_isartdigital_utils_ui_smart_SmartPopin
});
var com_isartdigital_ruby_ui_popin_SmartPopinRegister = function(pID) {
	com_isartdigital_utils_ui_smart_SmartPopin.call(this,pID);
	this.name = this.componentName;
	this.ftueRegister();
};
$hxClasses["com.isartdigital.ruby.ui.popin.SmartPopinRegister"] = com_isartdigital_ruby_ui_popin_SmartPopinRegister;
com_isartdigital_ruby_ui_popin_SmartPopinRegister.__name__ = ["com","isartdigital","ruby","ui","popin","SmartPopinRegister"];
com_isartdigital_ruby_ui_popin_SmartPopinRegister.__super__ = com_isartdigital_utils_ui_smart_SmartPopin;
com_isartdigital_ruby_ui_popin_SmartPopinRegister.prototype = $extend(com_isartdigital_utils_ui_smart_SmartPopin.prototype,{
	open: function() {
		com_isartdigital_utils_ui_smart_SmartPopin.prototype.open.call(this);
		com_isartdigital_ruby_ui_popin_SmartPopinRegister.event.emit("onOpen");
	}
	,ftueRegister: function() {
		if(this.children.length <= 0) {
			return;
		}
		var _g1 = 0;
		var _g = this.children.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(js_Boot.__instanceof(this.children[i],com_isartdigital_utils_ui_smart_SmartButton)) {
				com_isartdigital_ruby_ui_ftue_FTUEManager.register(this.children[i]);
			} else if(js_Boot.__instanceof(this.children[i],com_isartdigital_utils_ui_smart_SmartComponent)) {
				com_isartdigital_ruby_ui_ftue_FTUEManager.register(this.children[i]);
			} else if(js_Boot.__instanceof(this.children[i],com_isartdigital_utils_ui_smart_SmartComponent)) {
				var component = js_Boot.__cast(this.children[i] , com_isartdigital_utils_ui_smart_SmartComponent);
				if(component.children.length <= 0) {
					return;
				}
				var _g3 = 0;
				var _g2 = component.children.length;
				while(_g3 < _g2) {
					var j = _g3++;
					if(js_Boot.__instanceof(component.children[j],com_isartdigital_utils_ui_smart_SmartButton)) {
						com_isartdigital_ruby_ui_ftue_FTUEManager.register(component.children[j]);
					}
				}
			}
		}
	}
	,close: function() {
		com_isartdigital_utils_ui_smart_SmartPopin.prototype.close.call(this);
	}
	,__class__: com_isartdigital_ruby_ui_popin_SmartPopinRegister
});
var com_isartdigital_ruby_ui_ftue_FTUEPopin = function(pID) {
	this.margin = 100;
	com_isartdigital_ruby_ui_popin_SmartPopinRegister.call(this,"FTUE");
	this.componentName = "FTUEpopin";
	this.name = "FTUEpopin";
	this.ftueContainer = js_Boot.__cast(this.getChildByName("FTUE_popinContainer") , com_isartdigital_utils_ui_smart_SmartComponent);
	this.nextButton = js_Boot.__cast(this.ftueContainer.getChildByName("btn_Close") , com_isartdigital_utils_ui_smart_SmartButton);
	this.mascotte = js_Boot.__cast(this.ftueContainer.getChildByName("FTUE_spriteMascot") , com_isartdigital_utils_ui_smart_UIMovie);
	this.interactive = true;
	this.scale = new PIXI.Point(0.7,0.7);
	this.ftueRegister();
};
$hxClasses["com.isartdigital.ruby.ui.ftue.FTUEPopin"] = com_isartdigital_ruby_ui_ftue_FTUEPopin;
com_isartdigital_ruby_ui_ftue_FTUEPopin.__name__ = ["com","isartdigital","ruby","ui","ftue","FTUEPopin"];
com_isartdigital_ruby_ui_ftue_FTUEPopin.getInstance = function() {
	if(com_isartdigital_ruby_ui_ftue_FTUEPopin.instance == null) {
		com_isartdigital_ruby_ui_ftue_FTUEPopin.instance = new com_isartdigital_ruby_ui_ftue_FTUEPopin();
	}
	return com_isartdigital_ruby_ui_ftue_FTUEPopin.instance;
};
com_isartdigital_ruby_ui_ftue_FTUEPopin.__super__ = com_isartdigital_ruby_ui_popin_SmartPopinRegister;
com_isartdigital_ruby_ui_ftue_FTUEPopin.prototype = $extend(com_isartdigital_ruby_ui_popin_SmartPopinRegister.prototype,{
	init: function(pText,pFunction,pPos,pState) {
		if(pState == null) {
			pState = 0;
		}
		this.text = js_Boot.__cast(this.ftueContainer.getChildByName("txt_FTUEInstructions") , com_isartdigital_utils_ui_smart_TextSprite);
		this.changeText(pText);
		this.mascotte.setBehavior(false,false,pState);
		if(pFunction != null) {
			this.validationFunction = pFunction;
			this.nextButton.on("click",$bind(this,this.onNext));
			this.nextButton.on("tap",$bind(this,this.onNext));
			this.on("click",$bind(this,this.onNext));
			this.on("tap",$bind(this,this.onNext));
			new TweenMax(this.nextButton.scale,0.5,{ repeatDelay : 0.5, x : 0.2, y : 0.2, repeat : -1, ease : Quart.easeIn, yoyo : true});
		} else {
			this.validationFunction = null;
			this.nextButton.visible = false;
		}
		if(pPos != null) {
			this.setUIPosition(pPos);
		}
		com_isartdigital_ruby_ui_ftue_FTUEManager.register(this.nextButton);
	}
	,changeText: function(pText) {
		this.text.set_text(com_isartdigital_utils_system_Localization.getLabel(pText));
		this.text.textField.anchor.y = 0;
	}
	,setUIPosition: function(pPos) {
		var lPositionnables = this.positionables;
		var _g1 = 0;
		var _g = lPositionnables.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(lPositionnables[i].item.name == "FTUE_popinContainer") {
				lPositionnables[i].align = pPos;
				lPositionnables[i].offsetX = 800;
				lPositionnables[i].offsetY = 700;
			}
			if(i == 0) {
				lPositionnables[i].item.alpha = 0;
			}
		}
		this.onResize();
	}
	,onNext: function() {
		if(this.validationFunction != null) {
			this.validationFunction();
		}
		this.nextButton.off("click",$bind(this,this.onNext));
		this.nextButton.off("tap",$bind(this,this.onNext));
		this.off("click",$bind(this,this.onNext));
		this.off("tap",$bind(this,this.onNext));
	}
	,onResize: function(pEvent) {
		com_isartdigital_ruby_ui_popin_SmartPopinRegister.prototype.onResize.call(this,pEvent);
	}
	,destroy: function() {
		this.nextButton.off("click",$bind(this,this.onNext));
		this.nextButton.off("tap",$bind(this,this.onNext));
		this.off("click",$bind(this,this.onNext));
		this.off("tap",$bind(this,this.onNext));
		com_isartdigital_ruby_ui_ftue_FTUEPopin.instance = null;
		com_isartdigital_ruby_ui_popin_SmartPopinRegister.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_ruby_ui_ftue_FTUEPopin
});
var com_isartdigital_ruby_ui_ftue_FocusManager = function(pID) {
	this.lTest = 500;
	com_isartdigital_utils_ui_Screen.call(this,pID);
	this.set_modalImage("assets/ftue_bg.png");
	this.shadow = new PIXI.Container();
	this.shadow.name = "shadow";
};
$hxClasses["com.isartdigital.ruby.ui.ftue.FocusManager"] = com_isartdigital_ruby_ui_ftue_FocusManager;
com_isartdigital_ruby_ui_ftue_FocusManager.__name__ = ["com","isartdigital","ruby","ui","ftue","FocusManager"];
com_isartdigital_ruby_ui_ftue_FocusManager.getInstance = function() {
	if(com_isartdigital_ruby_ui_ftue_FocusManager.instance == null) {
		com_isartdigital_ruby_ui_ftue_FocusManager.instance = new com_isartdigital_ruby_ui_ftue_FocusManager();
	}
	return com_isartdigital_ruby_ui_ftue_FocusManager.instance;
};
com_isartdigital_ruby_ui_ftue_FocusManager.__super__ = com_isartdigital_utils_ui_Screen;
com_isartdigital_ruby_ui_ftue_FocusManager.prototype = $extend(com_isartdigital_utils_ui_Screen.prototype,{
	setCurrentStep: function(pStep) {
		if(pStep == null) {
			return;
		}
		if(this.currentStep != null) {
			this.lastStep = this.currentStep;
		}
		this.currentStep = pStep;
	}
	,setFocus: function(pTarget,pRotation) {
		if(pRotation == null) {
			pRotation = 0;
		}
		if(!com_isartdigital_ruby_ui_ftue_FTUEManager.isFTUEon()) {
			return;
		}
		if(this.target != null && this.target.parent == this) {
			this.swap(this.shadow,this.target);
		}
		this.target = pTarget;
		this.swap(this.target,this.shadow);
		this.arrowRotation = pRotation;
		this.onResize();
	}
	,close: function() {
		if(this.target != null && this.target.parent == this) {
			this.swap(this.shadow,this.target);
		}
		com_isartdigital_utils_ui_Screen.prototype.close.call(this);
	}
	,swap: function(pTarget,pFTUE) {
		if(pTarget == null || pFTUE == null) {
			return;
		}
		if(pTarget.parent == null) {
			return;
		}
		var lParent = pTarget.parent;
		if(pTarget.name == "shadow" && this.lastStep != null) {
			this.addChildOnContainer(pTarget,pFTUE);
			var tmp;
			var tmp1;
			if(pFTUE == null) {
				tmp1 = null;
			} else {
				var tmp2;
				if(pFTUE.__properties__) {
					tmp = pFTUE.__properties__["get_" + "focusInFTUE"];
					tmp2 = tmp;
				} else {
					tmp2 = false;
				}
				if(tmp2) {
					tmp1 = pFTUE[tmp]();
				} else {
					tmp1 = pFTUE.focusInFTUE;
				}
			}
			if(tmp1 != null) {
				var tmp3;
				var tmp4;
				if(pFTUE == null) {
					tmp4 = null;
				} else {
					var tmp5;
					if(pFTUE.__properties__) {
						tmp3 = pFTUE.__properties__["get_" + "focusInFTUE"];
						tmp5 = tmp3;
					} else {
						tmp5 = false;
					}
					if(tmp5) {
						tmp4 = pFTUE[tmp3]();
					} else {
						tmp4 = pFTUE.focusInFTUE;
					}
				}
				if(tmp4) {
					var tmp6;
					var tmp7;
					if(pFTUE.__properties__) {
						tmp6 = pFTUE.__properties__["set_" + "focusInFTUE"];
						tmp7 = tmp6;
					} else {
						tmp7 = false;
					}
					if(tmp7) {
						pFTUE[tmp6](false);
					} else {
						pFTUE.focusInFTUE = false;
					}
				}
			}
		} else {
			lParent.addChildAt(pFTUE,lParent.getChildIndex(pTarget));
			pFTUE.position = pTarget.position;
			if(com_isartdigital_ruby_ui_popin_building_BuildingMenu.getInstance().isOpened) {
				var lNextStepName = com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep + 1].name;
				if(com_isartdigital_utils_save_DataManager.getInstance().listBuildingTypes.get(lNextStepName) != null) {
					com_isartdigital_ruby_ui_popin_building_BuildingMenu.getInstance().panel.setInfo(com_isartdigital_utils_save_DataManager.getInstance().listBuildingTypes.get(lNextStepName));
				} else if(com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep].text == "LABEL_FTUE_NOT_ENOUGH_MONEY") {
					com_isartdigital_ruby_ui_popin_building_BuildingMenu.getInstance().panel.setInfo(com_isartdigital_utils_save_DataManager.getInstance().listBuildingTypes.get("AlienPaddockTiny"));
				}
			}
		}
		this.addChildAt(pTarget,0);
		var tmp8;
		var tmp9;
		if(pTarget == null) {
			tmp9 = null;
		} else {
			var tmp10;
			if(pTarget.__properties__) {
				tmp8 = pTarget.__properties__["get_" + "focusInFTUE"];
				tmp10 = tmp8;
			} else {
				tmp10 = false;
			}
			if(tmp10) {
				tmp9 = pTarget[tmp8]();
			} else {
				tmp9 = pTarget.focusInFTUE;
			}
		}
		if(tmp9 != null) {
			var tmp11;
			var tmp12;
			if(pTarget == null) {
				tmp12 = null;
			} else {
				var tmp13;
				if(pTarget.__properties__) {
					tmp11 = pTarget.__properties__["get_" + "focusInFTUE"];
					tmp13 = tmp11;
				} else {
					tmp13 = false;
				}
				if(tmp13) {
					tmp12 = pTarget[tmp11]();
				} else {
					tmp12 = pTarget.focusInFTUE;
				}
			}
			if(!tmp12) {
				var tmp14;
				var tmp15;
				if(pTarget.__properties__) {
					tmp14 = pTarget.__properties__["set_" + "focusInFTUE"];
					tmp15 = tmp14;
				} else {
					tmp15 = false;
				}
				if(tmp15) {
					pTarget[tmp14](true);
				} else {
					pTarget.focusInFTUE = true;
				}
			}
		}
		if(js_Boot.__instanceof(lParent,com_isartdigital_utils_ui_UIComponent)) {
			var lPositionnables = lParent.positionables;
			var _g1 = 0;
			var _g = lPositionnables.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(lPositionnables[i].item == pTarget) {
					lPositionnables[i].item = js_Boot.__cast(pFTUE , PIXI.Container);
					break;
				}
			}
		}
	}
	,addChildOnContainer: function(pObject,pTarget) {
		if(pObject == null) {
			return;
		}
		var lGrandParent;
		if(this.lastStep.arGrandParentName != "") {
			var lArGparent = pObject.parent.parent.parent;
			lGrandParent = pObject.parent.parent;
			(js_Boot.__cast((js_Boot.__cast(lArGparent.getChildByName(lGrandParent.name) , PIXI.Container)).getChildByName(pObject.parent.name) , PIXI.Container)).addChildAt(pTarget,pObject.parent.getChildIndex(pTarget));
		} else if(this.currentStep.grandParentName != "") {
			lGrandParent = pObject.parent.parent;
			(js_Boot.__cast(lGrandParent.getChildByName(pObject.parent.name) , PIXI.Container)).addChildAt(pTarget,pObject.parent.getChildIndex(pObject));
		} else {
			pObject.parent.addChildAt(pTarget,pObject.parent.getChildIndex(pObject));
		}
	}
	,onResize: function(pEvent) {
		if(this.target == null) {
			return;
		}
		this.target.position = this.toLocal(this.shadow.position,this.shadow.parent);
		var lStep = com_isartdigital_ruby_ui_ftue_FTUEManager.steps[com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep];
		if(this.arrowRotation != 999) {
			if(lStep.arrowTarget != "") {
				if(this.boule == null) {
					this.boule = new com_isartdigital_ruby_ui_ftue_BouleHighlight();
					this.addChild(this.boule);
					this.boule.start();
				}
				this.boule.position = this.toLocal(lStep.itemTarget.position,lStep.itemTarget.parent);
				this.boule.rotation = lStep.arrowRot * PIXI.DEG_TO_RAD;
				if(lStep.arrowRecule != null) {
					this.boule.position.x = this.boule.position.x + lStep.arrowRecule * Math.cos(this.boule.rotation);
					this.boule.position.y = this.boule.position.y - lStep.arrowRecule * Math.sin(this.boule.rotation);
				}
			} else {
				if(this.arrow == null) {
					this.arrow = new com_isartdigital_ruby_ui_ftue_Arrow();
					this.addChild(this.arrow);
					this.arrow.start();
				}
				this.arrow.rotation = this.arrowRotation * PIXI.DEG_TO_RAD;
				this.arrow.position = this.toLocal(this.shadow.position,this.shadow.parent);
			}
			if(lStep.arrowRecule != null && lStep.arrowTarget == "") {
				this.arrow.position.x = this.arrow.position.x + lStep.arrowRecule * Math.cos(this.arrow.rotation);
				this.arrow.position.y = this.arrow.position.y - lStep.arrowRecule * Math.sin(this.arrow.rotation);
			}
		}
		com_isartdigital_utils_ui_Screen.prototype.onResize.call(this,pEvent);
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_ftue_FocusManager.instance = null;
		com_isartdigital_utils_ui_Screen.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_ruby_ui_ftue_FocusManager
});
var com_isartdigital_ruby_ui_hud_Hud = function(pID) {
	this.frame = 0;
	this.colorAmount = 0;
	this.whiteFilter = new PIXI.filters.ColorMatrixFilter();
	this.redFilter = new PIXI.filters.ColorMatrixFilter();
	com_isartdigital_ruby_ui_screens_SmartScreenRegister.call(this,pID);
	this.set_modal(false);
	this.shopButton = js_Boot.__cast(this.getChildByName("btn_Shop") , com_isartdigital_utils_ui_smart_SmartButton);
	this.buildButton = js_Boot.__cast(this.getChildByName("btn_Build") , com_isartdigital_utils_ui_smart_SmartButton);
	this.optionsButton = js_Boot.__cast(this.getChildByName("btn_Options") , com_isartdigital_utils_ui_smart_SmartButton);
	this.codexButton = js_Boot.__cast(this.getChildByName("btn_Codex") , com_isartdigital_utils_ui_smart_SmartButton);
	this.hcAddButton = js_Boot.__cast(this.getChildByName("btn_PlusHC") , com_isartdigital_utils_ui_smart_SmartButton);
	this.scAddButton = js_Boot.__cast(this.getChildByName("btn_PlusSC") , com_isartdigital_utils_ui_smart_SmartButton);
	this.scBar = js_Boot.__cast(this.getChildByName("HUD_clipSoftCurrencie") , com_isartdigital_utils_ui_smart_SmartComponent);
	this.hcBar = js_Boot.__cast(this.getChildByName("HUD_clipHardCurrencie") , com_isartdigital_utils_ui_smart_SmartComponent);
	this.materialBar = js_Boot.__cast(this.getChildByName("HUD_clipMatiere") , com_isartdigital_utils_ui_smart_SmartComponent);
	this.energyBar = js_Boot.__cast(this.getChildByName("HUD_clipEnergyBar") , com_isartdigital_utils_ui_smart_SmartComponent);
	this.shopButton.on("click",$bind(this,this.shopAction));
	this.buildButton.on("click",$bind(this,this.buildAction));
	this.optionsButton.on("click",$bind(this,this.optionsAction));
	this.codexButton.on("click",$bind(this,this.codexAction));
	this.hcAddButton.on("click",$bind(this,this.hcAddAction));
	this.scAddButton.on("click",$bind(this,this.scAddAction));
	this.shopButton.on("tap",$bind(this,this.shopAction));
	this.buildButton.on("tap",$bind(this,this.buildAction));
	this.optionsButton.on("tap",$bind(this,this.optionsAction));
	this.codexButton.on("tap",$bind(this,this.codexAction));
	this.hcAddButton.on("tap",$bind(this,this.hcAddAction));
	this.scAddButton.on("tap",$bind(this,this.scAddAction));
};
$hxClasses["com.isartdigital.ruby.ui.hud.Hud"] = com_isartdigital_ruby_ui_hud_Hud;
com_isartdigital_ruby_ui_hud_Hud.__name__ = ["com","isartdigital","ruby","ui","hud","Hud"];
com_isartdigital_ruby_ui_hud_Hud.getInstance = function() {
	if(com_isartdigital_ruby_ui_hud_Hud.instance == null) {
		com_isartdigital_ruby_ui_hud_Hud.instance = new com_isartdigital_ruby_ui_hud_Hud();
	}
	return com_isartdigital_ruby_ui_hud_Hud.instance;
};
com_isartdigital_ruby_ui_hud_Hud.__super__ = com_isartdigital_ruby_ui_screens_SmartScreenRegister;
com_isartdigital_ruby_ui_hud_Hud.prototype = $extend(com_isartdigital_ruby_ui_screens_SmartScreenRegister.prototype,{
	update: function() {
		var lComponent;
		var lTextField;
		var lAnim;
		lTextField = js_Boot.__cast(this.scBar.getChildByName("txt_hardCurrencyDisplay") , com_isartdigital_utils_ui_smart_TextSprite);
		lTextField.set_text(Std.string(com_isartdigital_ruby_game_player_Player.getInstance().softCurrency));
		lTextField = js_Boot.__cast(this.hcBar.getChildByName("txt_softCurrencieDisplay") , com_isartdigital_utils_ui_smart_TextSprite);
		lTextField.set_text(Std.string(com_isartdigital_ruby_game_player_Player.getInstance().hardCurrency));
		lTextField = js_Boot.__cast(this.materialBar.getChildByName("txt_matiereDisplay") , com_isartdigital_utils_ui_smart_TextSprite);
		lTextField.set_text(Std.string(com_isartdigital_ruby_game_player_Player.getInstance().ressource));
		lTextField = js_Boot.__cast(this.energyBar.getChildByName("txt_energyDisplay") , com_isartdigital_utils_ui_smart_TextSprite);
		lTextField.set_text(Std.string(com_isartdigital_ruby_game_player_Player.getInstance().currentEnergy) + " / " + Std.string(com_isartdigital_ruby_game_player_Player.getInstance().maxEnergy));
		lComponent = js_Boot.__cast(this.getChildByName("HUD_clipPlayerInfos") , com_isartdigital_utils_ui_smart_SmartComponent);
		lTextField = js_Boot.__cast(lComponent.getChildByName("txt_PlayerLevel") , com_isartdigital_utils_ui_smart_TextSprite);
		lTextField.set_text(Std.string(com_isartdigital_ruby_game_player_Player.getInstance().level));
		lAnim = js_Boot.__cast(lComponent.getChildByName("HUD_spriteCurrentXP") , com_isartdigital_utils_ui_smart_UIMovie);
		var lFrame = Math.round(30 * com_isartdigital_ruby_game_player_Player.getInstance().calculateLevelAdvance() / 100);
		lAnim.setBehavior(false,false,lFrame);
		com_isartdigital_ruby_ui_ftue_FTUEManager.register(this.energyBar);
	}
	,doAction: function() {
	}
	,maskButtons: function() {
		this.buildButton.visible = false;
		this.shopButton.visible = false;
		this.scAddButton.interactive = false;
		this.hcAddButton.interactive = false;
		this.codexButton.visible = false;
	}
	,unmaskButtons: function() {
		this.buildButton.visible = true;
		this.shopButton.visible = true;
		this.scAddButton.interactive = true;
		this.hcAddButton.interactive = true;
		this.codexButton.visible = true;
	}
	,buildAction: function() {
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerInputBuildButton").play();
		if(com_isartdigital_ruby_ui_popin_building_BuildingMenu.getInstance().isOpened) {
			com_isartdigital_ruby_ui_UIManager.getInstance().closeCurrentPopin();
		} else {
			com_isartdigital_ruby_game_Spawner.getInstance().cancel();
			com_isartdigital_ruby_ui_UIManager.getInstance().closeAllPopins();
			com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_building_BuildingMenu.getInstance());
		}
	}
	,shopAction: function() {
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerInputShopButton").play();
		if(com_isartdigital_ruby_ui_popin_shop_Shop.getInstance().isOpened) {
			com_isartdigital_ruby_ui_UIManager.getInstance().closeCurrentPopin();
		} else {
			com_isartdigital_ruby_game_Spawner.getInstance().cancel();
			com_isartdigital_ruby_ui_UIManager.getInstance().closeAllPopins();
			com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_shop_Shop.getInstance());
		}
	}
	,optionsAction: function() {
		com_isartdigital_ruby_game_Spawner.getInstance().cancel();
		com_isartdigital_ruby_ui_UIManager.getInstance().closeAllPopins();
		com_isartdigital_ruby_ui_UIManager.getInstance().closeHud();
		com_isartdigital_ruby_ui_UIManager.getInstance().openScreen(com_isartdigital_ruby_ui_popin_Settings.getInstance());
	}
	,codexAction: function() {
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerInputCodexButton").play();
		com_isartdigital_ruby_game_Spawner.getInstance().cancel();
		com_isartdigital_ruby_ui_UIManager.getInstance().closeAllPopins();
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_codex_Codex.getInstance());
	}
	,hcAddAction: function() {
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerInputShopButton").play();
		com_isartdigital_ruby_game_Spawner.getInstance().cancel();
		com_isartdigital_ruby_ui_UIManager.getInstance().closeAllPopins();
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_shop_Shop.getInstance());
		com_isartdigital_ruby_ui_popin_shop_Shop.getInstance().currentIndex = 4;
		com_isartdigital_ruby_ui_popin_shop_Shop.getInstance().updateItems();
	}
	,scAddAction: function() {
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerInputShopButton").play();
		com_isartdigital_ruby_game_Spawner.getInstance().cancel();
		com_isartdigital_ruby_ui_UIManager.getInstance().closeAllPopins();
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_shop_Shop.getInstance());
		com_isartdigital_ruby_ui_popin_shop_Shop.getInstance().currentIndex = 1;
		com_isartdigital_ruby_ui_popin_shop_Shop.getInstance().updateItems();
	}
	,noHCAnimation: function() {
		com_isartdigital_ruby_ui_hud_Hud.getInstance().noEnoughAnimation(this.hcAddButton);
		com_isartdigital_ruby_ui_hud_Hud.getInstance().noEnoughAnimation(this.hcBar);
	}
	,noSCAnimation: function() {
		com_isartdigital_ruby_ui_hud_Hud.getInstance().noEnoughAnimation(this.scAddButton);
		com_isartdigital_ruby_ui_hud_Hud.getInstance().noEnoughAnimation(this.scBar);
	}
	,noMaterialAnimation: function() {
		com_isartdigital_ruby_ui_hud_Hud.getInstance().noEnoughAnimation(this.materialBar);
	}
	,noEnergyAnimation: function() {
		com_isartdigital_ruby_ui_hud_Hud.getInstance().noEnoughAnimation(this.energyBar);
	}
	,noEnoughAnimation: function(pComponent) {
		var redParams = { colorAmount : 1, colorToApply : "red", duration : 1};
		var shakeParams = { originalPosition : pComponent.position.clone(), smoothness : 5, amplitude : 10, duration : 40, xQuantity : 1.5, yQuantity : 0.5, fadeOut : 0.95, randomShake : true, sound : "no"};
		com_isartdigital_ruby_utils_ColorFilterManager.getInstance().applyFilter(pComponent,redParams);
		com_isartdigital_ruby_utils_SmartShaker.getInstance().SetShaker(pComponent,shakeParams);
	}
	,destroy: function() {
		this.shopButton.off("click",$bind(this,this.shopAction));
		this.buildButton.off("click",$bind(this,this.buildAction));
		this.optionsButton.off("click",$bind(this,this.optionsAction));
		this.codexButton.off("click",$bind(this,this.codexAction));
		this.hcAddButton.off("click",$bind(this,this.hcAddAction));
		this.scAddButton.off("click",$bind(this,this.scAddAction));
		this.shopButton.off("tap",$bind(this,this.shopAction));
		this.buildButton.off("tap",$bind(this,this.buildAction));
		this.optionsButton.off("tap",$bind(this,this.optionsAction));
		this.codexButton.off("tap",$bind(this,this.codexAction));
		this.hcAddButton.off("tap",$bind(this,this.hcAddAction));
		this.scAddButton.off("tap",$bind(this,this.scAddAction));
		com_isartdigital_ruby_ui_hud_Hud.instance = null;
		com_isartdigital_ruby_ui_screens_SmartScreenRegister.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_ruby_ui_hud_Hud
});
var com_isartdigital_ruby_ui_popin_MenuClosable = function(pID) {
	com_isartdigital_ruby_ui_popin_SmartPopinRegister.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.popin.MenuClosable"] = com_isartdigital_ruby_ui_popin_MenuClosable;
com_isartdigital_ruby_ui_popin_MenuClosable.__name__ = ["com","isartdigital","ruby","ui","popin","MenuClosable"];
com_isartdigital_ruby_ui_popin_MenuClosable.__super__ = com_isartdigital_ruby_ui_popin_SmartPopinRegister;
com_isartdigital_ruby_ui_popin_MenuClosable.prototype = $extend(com_isartdigital_ruby_ui_popin_SmartPopinRegister.prototype,{
	init: function() {
		this.close_btn = js_Boot.__cast(this.getChildByName("btn_Close") , com_isartdigital_utils_ui_smart_SmartButton);
		this.close_btn.on("click",$bind(this,this.onClose));
		this.close_btn.on("tap",$bind(this,this.onClose));
	}
	,onClose: function() {
		com_isartdigital_ruby_ui_UIManager.getInstance().closePopin(this);
	}
	,__class__: com_isartdigital_ruby_ui_popin_MenuClosable
});
var com_isartdigital_ruby_ui_popin_Menu = function(pID) {
	this.currentIndex = 0;
	this.ITEM = "item";
	this.BTN_TAB = "tab";
	this.ITEM_CONTAINER = "ItemContainer";
	this.TAB_CONTAINER = "TabContainer";
	com_isartdigital_ruby_ui_popin_MenuClosable.call(this,pID);
	this.set_modal(false);
};
$hxClasses["com.isartdigital.ruby.ui.popin.Menu"] = com_isartdigital_ruby_ui_popin_Menu;
com_isartdigital_ruby_ui_popin_Menu.__name__ = ["com","isartdigital","ruby","ui","popin","Menu"];
com_isartdigital_ruby_ui_popin_Menu.__super__ = com_isartdigital_ruby_ui_popin_MenuClosable;
com_isartdigital_ruby_ui_popin_Menu.prototype = $extend(com_isartdigital_ruby_ui_popin_MenuClosable.prototype,{
	open: function() {
		com_isartdigital_ruby_ui_popin_MenuClosable.prototype.open.call(this);
		this.init();
		this.scale.x = 0;
		this.scale.y = 0;
		new TweenMax(this.scale,0.3,{ x : 1, y : 1, ease : Quart.easeIn});
	}
	,update: function() {
	}
	,initOffsetBetweenItems: function() {
		this.firstItemPosition = this.itemContainer.getChildByName(this.ITEM + " #0").position;
		var lNextItem = this.itemContainer.getChildByName(this.ITEM + " #1");
		if(lNextItem != null) {
			this.offsetItem = new PIXI.Point(lNextItem.x - this.firstItemPosition.x,lNextItem.y - this.firstItemPosition.y);
		}
	}
	,initTab: function(pTabClass) {
		this.tabButtons = [];
		this.tabContainer = js_Boot.__cast(this.getChildByName(this.TAB_CONTAINER) , com_isartdigital_utils_ui_smart_SmartComponent);
		com_isartdigital_ruby_ui_ftue_FTUEManager.register(this.tabContainer);
		this.offsetTab = new PIXI.Point(this.tabContainer.children[0].x - this.tabContainer.children[1].x,this.tabContainer.children[0].y - this.tabContainer.children[1].y);
		if(this.tabContainer == null || this.tabContainer.children.length == 0) {
			haxe_Log.trace("tabContainer doesn't exist or doesn't have any children",{ fileName : "Menu.hx", lineNumber : 97, className : "com.isartdigital.ruby.ui.popin.Menu", methodName : "initTab"});
			return;
		}
		var lTabLength = this.tabContainer.children.length;
		var lTabFirstItemPosition = this.tabContainer.getChildByName(this.ITEM + " #0").position;
		this.destroyAllChildInContainer(this.tabContainer);
		var _g1 = 0;
		while(_g1 < lTabLength) {
			var i = _g1++;
			this.tabButtons.push(Type.createInstance(pTabClass,[]));
			this.tabButtons[i].x = lTabFirstItemPosition.x + i * this.offsetTab.x;
			this.tabButtons[i].y = lTabFirstItemPosition.y + i * this.offsetTab.y;
			this.tabButtons[i].name = "tabButton" + i;
			this.tabContainer.addChild(this.tabButtons[i]);
			this.tabButtons[i].id = i;
			this.tabButtons[i].init();
			com_isartdigital_ruby_ui_ftue_FTUEManager.register(this.tabButtons[i]);
			if(i == this.currentIndex) {
				this.tabButtons[i].setActive();
			}
		}
	}
	,initItems: function() {
	}
	,onTabSelected: function(pId) {
		com_isartdigital_utils_sounds_SoundManager.getSound("click1").play();
		this.currentIndex = pId;
	}
	,onItemSelected: function(pTarget) {
		com_isartdigital_utils_sounds_SoundManager.getSound("click1").play();
	}
	,getIdFromEvent: function(pTarget) {
		var lName = pTarget.target.name;
		return Std.parseInt(lName.charAt(lName.length - 1));
	}
	,destroyAllChildInContainer: function(pContainer) {
		if(pContainer == null) {
			return;
		}
		var lChild;
		while(pContainer.children.length > 0) {
			lChild = pContainer.getChildAt(0);
			if(lChild == null) {
				return;
			}
			pContainer.removeChild(lChild);
			lChild.destroy();
		}
	}
	,__class__: com_isartdigital_ruby_ui_popin_Menu
});
var com_isartdigital_ruby_ui_hud_InfosBatiment = function(pID) {
	com_isartdigital_ruby_ui_popin_Menu.call(this,pID);
	this.init();
};
$hxClasses["com.isartdigital.ruby.ui.hud.InfosBatiment"] = com_isartdigital_ruby_ui_hud_InfosBatiment;
com_isartdigital_ruby_ui_hud_InfosBatiment.__name__ = ["com","isartdigital","ruby","ui","hud","InfosBatiment"];
com_isartdigital_ruby_ui_hud_InfosBatiment.getInstance = function() {
	if(com_isartdigital_ruby_ui_hud_InfosBatiment.instance == null) {
		com_isartdigital_ruby_ui_hud_InfosBatiment.instance = new com_isartdigital_ruby_ui_hud_InfosBatiment();
	}
	return com_isartdigital_ruby_ui_hud_InfosBatiment.instance;
};
com_isartdigital_ruby_ui_hud_InfosBatiment.__super__ = com_isartdigital_ruby_ui_popin_Menu;
com_isartdigital_ruby_ui_hud_InfosBatiment.prototype = $extend(com_isartdigital_ruby_ui_popin_Menu.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_popin_Menu.prototype.init.call(this);
		this.upgradeBtn = js_Boot.__cast(this.getChildByName("btn_Upgrade") , com_isartdigital_utils_ui_smart_SmartButton);
		this.upgradeBtn.on("click",$bind(this,this.upgradeBuilding));
		this.upgradeBtn.on("tap",$bind(this,this.upgradeBuilding));
		this.destroyBtn = js_Boot.__cast(this.getChildByName("btn_Destroy") , com_isartdigital_utils_ui_smart_SmartButton);
		this.destroyBtn.on("click",$bind(this,this.destroyBuilding));
		this.destroyBtn.on("tap",$bind(this,this.destroyBuilding));
		this.moveBtn = js_Boot.__cast(this.getChildByName("btn_Moove") , com_isartdigital_utils_ui_smart_SmartButton);
		this.moveBtn.on("click",$bind(this,this.moveBuilding));
		this.moveBtn.on("tap",$bind(this,this.moveBuilding));
		this.description = js_Boot.__cast(this.getChildByName("txt_descriptionBuilding") , com_isartdigital_utils_ui_smart_TextSprite);
		this.title = js_Boot.__cast(this.getChildByName("InfosBatiment_ItemName") , com_isartdigital_utils_ui_smart_TextSprite);
	}
	,update: function() {
		this.title.set_text(Std.string(this.currentBuilding.buildingName));
		this.description.set_text(this.currentBuilding.description);
	}
	,upgradeBuilding: function() {
		if(this.currentBuilding.buildingName == "Incubator") {
			com_isartdigital_ruby_ui_UIManager.getInstance().closeCurrentPopin();
			com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_incubator_Incubator.getInstance());
		}
	}
	,destroyBuilding: function() {
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_Destruction.getInstance());
	}
	,isDestroyConfirmed: function() {
		com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(Reflect.field(this.currentBuilding.buildingType,"SellingCost") | 0,"softCurrency");
		this.currentBuilding.setModeDestroy();
	}
	,moveBuilding: function() {
		this.currentBuilding.setModeMove();
		com_isartdigital_ruby_game_world_MapInteractor.getInstance().closeInfoPanel();
	}
	,onClose: function() {
		com_isartdigital_ruby_game_world_MapInteractor.getInstance().closeInfoPanel();
		if(js_Boot.__instanceof(this.currentBuilding,com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingCenter)) {
			com_isartdigital_ruby_ui_UIManager.getInstance().closeScreens();
			com_isartdigital_ruby_ui_UIManager.getInstance().openHud();
		}
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_hud_InfosBatiment.instance = null;
		this.close_btn.off("click",$bind(this,this.onClose));
		this.close_btn.off("tap",$bind(this,this.onClose));
		this.upgradeBtn.off("click",$bind(this,this.upgradeBuilding));
		this.upgradeBtn.off("tap",$bind(this,this.upgradeBuilding));
		this.destroyBtn.off("click",$bind(this,this.destroyBuilding));
		this.destroyBtn.off("tap",$bind(this,this.destroyBuilding));
		this.moveBtn.off("click",$bind(this,this.moveBuilding));
		this.moveBtn.off("tap",$bind(this,this.moveBuilding));
	}
	,__class__: com_isartdigital_ruby_ui_hud_InfosBatiment
});
var com_isartdigital_ruby_ui_hud_XpBar = function(pAssetName) {
	com_isartdigital_utils_ui_smart_UIMovie.call(this,pAssetName);
};
$hxClasses["com.isartdigital.ruby.ui.hud.XpBar"] = com_isartdigital_ruby_ui_hud_XpBar;
com_isartdigital_ruby_ui_hud_XpBar.__name__ = ["com","isartdigital","ruby","ui","hud","XpBar"];
com_isartdigital_ruby_ui_hud_XpBar.__super__ = com_isartdigital_utils_ui_smart_UIMovie;
com_isartdigital_ruby_ui_hud_XpBar.prototype = $extend(com_isartdigital_utils_ui_smart_UIMovie.prototype,{
	__class__: com_isartdigital_ruby_ui_hud_XpBar
});
var com_isartdigital_utils_ui_smart_SmartComponent = function(pID) {
	com_isartdigital_utils_ui_UIComponent.call(this,pID);
	this.build();
};
$hxClasses["com.isartdigital.utils.ui.smart.SmartComponent"] = com_isartdigital_utils_ui_smart_SmartComponent;
com_isartdigital_utils_ui_smart_SmartComponent.__name__ = ["com","isartdigital","utils","ui","smart","SmartComponent"];
com_isartdigital_utils_ui_smart_SmartComponent.__super__ = com_isartdigital_utils_ui_UIComponent;
com_isartdigital_utils_ui_smart_SmartComponent.prototype = $extend(com_isartdigital_utils_ui_UIComponent.prototype,{
	__class__: com_isartdigital_utils_ui_smart_SmartComponent
});
var com_isartdigital_ruby_ui_items_Item = function(pID) {
	this.isListening = false;
	com_isartdigital_utils_ui_smart_SmartComponent.call(this,pID);
	this.init();
};
$hxClasses["com.isartdigital.ruby.ui.items.Item"] = com_isartdigital_ruby_ui_items_Item;
com_isartdigital_ruby_ui_items_Item.__name__ = ["com","isartdigital","ruby","ui","items","Item"];
com_isartdigital_ruby_ui_items_Item.__super__ = com_isartdigital_utils_ui_smart_SmartComponent;
com_isartdigital_ruby_ui_items_Item.prototype = $extend(com_isartdigital_utils_ui_smart_SmartComponent.prototype,{
	init: function() {
		this.onListen();
	}
	,onListen: function() {
		if(!this.isListening) {
			this.interactive = true;
			this.on("click",$bind(this,this.monClick));
			this.on("mousedown",$bind(this,this.onDown));
			this.on("mouseover",$bind(this,this.onOver));
			this.on("mouseout",$bind(this,this.onOut));
			this.isListening = true;
		}
	}
	,monClick: function() {
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerSwitchMode").play();
	}
	,onOver: function() {
	}
	,onOut: function() {
	}
	,onDown: function() {
	}
	,onOff: function() {
		if(this.isListening) {
			this.interactive = false;
			this.off("click",$bind(this,this.monClick));
			this.off("touchend",$bind(this,this.monClick));
			this.off("mouseover",$bind(this,this.onOver));
			this.off("mouseout",$bind(this,this.onOut));
			this.isListening = false;
		}
	}
	,destroy: function() {
		this.onOff();
		com_isartdigital_utils_ui_smart_SmartComponent.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_ruby_ui_items_Item
});
var com_isartdigital_ruby_ui_items_DrillingFriendItem = function(pID) {
	com_isartdigital_ruby_ui_items_Item.call(this,pID);
	this.btn = js_Boot.__cast(this.getChildByName("btn_Friend") , com_isartdigital_utils_ui_smart_SmartButton);
	this.playerName = js_Boot.__cast(this.btn.getChildByName("txt_CentreForageplayerName") , com_isartdigital_utils_ui_smart_TextSprite);
	this.xenoLevel = js_Boot.__cast(this.btn.getChildByName("txt_CentreForageLevel") , com_isartdigital_utils_ui_smart_TextSprite);
};
$hxClasses["com.isartdigital.ruby.ui.items.DrillingFriendItem"] = com_isartdigital_ruby_ui_items_DrillingFriendItem;
com_isartdigital_ruby_ui_items_DrillingFriendItem.__name__ = ["com","isartdigital","ruby","ui","items","DrillingFriendItem"];
com_isartdigital_ruby_ui_items_DrillingFriendItem.__super__ = com_isartdigital_ruby_ui_items_Item;
com_isartdigital_ruby_ui_items_DrillingFriendItem.prototype = $extend(com_isartdigital_ruby_ui_items_Item.prototype,{
	setAlienElem: function(pAlien) {
		this.alien = pAlien;
		var btn = js_Boot.__cast(this.getChildByName("btn_Friend") , com_isartdigital_utils_ui_smart_SmartButton);
		(js_Boot.__cast(btn.getChildByName("asset") , com_isartdigital_utils_ui_smart_UISprite)).visible = false;
		var assetsItem = new com_isartdigital_utils_ui_smart_UISprite("XenosThumbnail_" + pAlien.name + "_Normal");
		assetsItem.position = (js_Boot.__cast(btn.getChildByName("asset") , com_isartdigital_utils_ui_smart_UISprite)).position;
		this.addChild(assetsItem);
		this.update();
	}
	,onOver: function() {
		com_isartdigital_ruby_ui_items_Item.prototype.onOver.call(this);
		this.update();
	}
	,onOut: function() {
		com_isartdigital_ruby_ui_items_Item.prototype.onOut.call(this);
		this.update();
	}
	,monClick: function() {
		com_isartdigital_ruby_ui_items_Item.prototype.monClick.call(this);
		this.update();
	}
	,update: function() {
		var _g = 0;
		var _g1 = com_isartdigital_utils_save_DataManager.getInstance().friendsList;
		while(_g < _g1.length) {
			var friend = _g1[_g];
			++_g;
			if(friend.id == this.alien.idPlayer) {
				this.playerName.set_text(friend.nameFb);
			}
		}
		this.xenoLevel.set_text(Std.string(this.alien.level));
	}
	,__class__: com_isartdigital_ruby_ui_items_DrillingFriendItem
});
var com_isartdigital_ruby_ui_items_switchItems_SwitchItem = function(pID) {
	this.addStateSuffix = false;
	this.DISABLED = "Disabled";
	this.NORMAL = "Normal";
	com_isartdigital_ruby_ui_items_Item.call(this,pID);
	com_isartdigital_ruby_ui_items_switchItems_SwitchItem.list.push(this);
};
$hxClasses["com.isartdigital.ruby.ui.items.switchItems.SwitchItem"] = com_isartdigital_ruby_ui_items_switchItems_SwitchItem;
com_isartdigital_ruby_ui_items_switchItems_SwitchItem.__name__ = ["com","isartdigital","ruby","ui","items","switchItems","SwitchItem"];
com_isartdigital_ruby_ui_items_switchItems_SwitchItem.destroyAll = function() {
	var _g = 0;
	var _g1 = com_isartdigital_ruby_ui_items_switchItems_SwitchItem.list;
	while(_g < _g1.length) {
		var elem = _g1[_g];
		++_g;
		elem.destroy();
	}
};
com_isartdigital_ruby_ui_items_switchItems_SwitchItem.__super__ = com_isartdigital_ruby_ui_items_Item;
com_isartdigital_ruby_ui_items_switchItems_SwitchItem.prototype = $extend(com_isartdigital_ruby_ui_items_Item.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_items_Item.prototype.init.call(this);
		this.listStates = [];
		this.btnNormal = js_Boot.__cast(this.getChildByName(this.NORMAL) , com_isartdigital_utils_ui_smart_SmartButton);
		this.btnDisabled = js_Boot.__cast(this.getChildByName(this.DISABLED) , com_isartdigital_utils_ui_smart_SmartComponent);
		this.listStates.push(this.btnNormal);
		this.listStates.push(this.btnDisabled);
		this.setAsset();
		this.setNormal();
	}
	,setAsset: function() {
		if(this.prefix == null || this.currentState == null || this.assetName == null || this.currentState.children == null) {
			return;
		}
		var lAsset;
		var lSpawnAsset = js_Boot.__cast(this.currentState.getChildByName("asset") , com_isartdigital_utils_ui_smart_UISprite);
		lAsset = new com_isartdigital_utils_ui_smart_UISprite(this.prefix + this.assetName + (this.addStateSuffix?"_" + this.currentState.name:""));
		lAsset.name = "mainAsset";
		lAsset.position = lSpawnAsset.position.clone();
		if(this.currentState.getChildByName(lAsset.name) != null) {
			this.currentState.removeChild(this.currentState.getChildByName(lAsset.name));
		}
		this.currentState.addChild(lAsset);
		this.invisibleAsset();
	}
	,reset: function() {
		var _g = 0;
		var _g1 = this.listStates;
		while(_g < _g1.length) {
			var state = _g1[_g];
			++_g;
			state.visible = false;
		}
	}
	,invisibleAsset: function() {
		var _g = 0;
		var _g1 = this.listStates;
		while(_g < _g1.length) {
			var state = _g1[_g];
			++_g;
			if(state.getChildByName("asset") != null) {
				state.getChildByName("asset").visible = false;
			}
		}
	}
	,setNormal: function() {
		this.reset();
		this.currentState = this.btnNormal;
		this.currentState.visible = true;
	}
	,setDisabled: function() {
		this.reset();
		this.currentState = this.btnDisabled;
		this.currentState.visible = true;
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_items_Item.prototype.destroy.call(this);
		HxOverrides.remove(com_isartdigital_ruby_ui_items_switchItems_SwitchItem.list,this);
	}
	,__class__: com_isartdigital_ruby_ui_items_switchItems_SwitchItem
});
var com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem = function(pID) {
	this.inAGroup = true;
	this.focusInFTUE = false;
	this.SELECTED = "Selected";
	com_isartdigital_ruby_ui_items_switchItems_SwitchItem.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.items.switchItems.SwitchGroupItem"] = com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem;
com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.__name__ = ["com","isartdigital","ruby","ui","items","switchItems","SwitchGroupItem"];
com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.__super__ = com_isartdigital_ruby_ui_items_switchItems_SwitchItem;
com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype = $extend(com_isartdigital_ruby_ui_items_switchItems_SwitchItem.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchItem.prototype.init.call(this);
		this.onListen();
		this.btnSelected = js_Boot.__cast(this.getChildByName(this.SELECTED) , com_isartdigital_utils_ui_smart_SmartButton);
		this.listStates.push(this.btnSelected);
	}
	,setActive: function() {
		if(!this.focusInFTUE) {
			var _g = 0;
			var _g1 = this.parent.children;
			while(_g < _g1.length) {
				var brother = _g1[_g];
				++_g;
				if(brother != this) {
					(js_Boot.__cast(brother , com_isartdigital_ruby_ui_items_switchItems_SwitchItem)).setNormal();
				}
			}
		}
		this.setSelected();
	}
	,setSelected: function() {
		this.reset();
		this.currentState = this.btnSelected;
		this.currentState.visible = true;
	}
	,monClick: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchItem.prototype.monClick.call(this);
		if(this.currentState == this.btnNormal && this.inAGroup) {
			this.setActive();
		}
	}
	,__class__: com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem
});
var com_isartdigital_ruby_ui_items_DrillingXenoItem = function(pID) {
	com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.items.DrillingXenoItem"] = com_isartdigital_ruby_ui_items_DrillingXenoItem;
com_isartdigital_ruby_ui_items_DrillingXenoItem.__name__ = ["com","isartdigital","ruby","ui","items","DrillingXenoItem"];
com_isartdigital_ruby_ui_items_DrillingXenoItem.__super__ = com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem;
com_isartdigital_ruby_ui_items_DrillingXenoItem.prototype = $extend(com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.init.call(this);
	}
	,updateTextChild: function() {
		this.nameTxt = js_Boot.__cast(this.currentState.getChildByName("txt_centreForageXenoName") , com_isartdigital_utils_ui_smart_TextSprite);
		this.classTxt = js_Boot.__cast(this.currentState.getChildByName("txt_CentreForageXenoClass") , com_isartdigital_utils_ui_smart_TextSprite);
		this.staminaTxt = js_Boot.__cast(this.currentState.getChildByName("txt_CentreForageStaminaDisplay") , com_isartdigital_utils_ui_smart_TextSprite);
	}
	,setNormal: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setNormal.call(this);
		this.updateTextChild();
		this.update();
	}
	,setDisabled: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setNormal.call(this);
		this.updateTextChild();
		this.update();
	}
	,setSelected: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setNormal.call(this);
		this.updateTextChild();
		this.update();
	}
	,initAlien: function(pAlien) {
		this.alien = pAlien;
		this.prefix = "XenosThumbnail_";
		this.assetName = pAlien.name + "_Normal";
		this.setNormal();
	}
	,onOver: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.onOver.call(this);
		this.updateTextChild();
		this.update();
	}
	,onOut: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.onOut.call(this);
		this.updateTextChild();
		this.update();
	}
	,update: function() {
		if(this.alien == null) {
			return;
		}
		this.nameTxt.set_text(this.alien.name);
		this.classTxt.set_text(this.alien.carac.power);
		this.staminaTxt.set_text(Std.string(this.alien.stamina));
	}
	,monClick: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.monClick.call(this);
		com_isartdigital_ruby_ui_popin_centreForage_CentreForage.getInstance().alienSelected = this.alien;
	}
	,__class__: com_isartdigital_ruby_ui_items_DrillingXenoItem
});
var com_isartdigital_ruby_ui_items_ItemAsset = function(pID) {
	com_isartdigital_utils_ui_smart_SmartComponent.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.items.ItemAsset"] = com_isartdigital_ruby_ui_items_ItemAsset;
com_isartdigital_ruby_ui_items_ItemAsset.__name__ = ["com","isartdigital","ruby","ui","items","ItemAsset"];
com_isartdigital_ruby_ui_items_ItemAsset.getInstance = function() {
	if(com_isartdigital_ruby_ui_items_ItemAsset.instance == null) {
		com_isartdigital_ruby_ui_items_ItemAsset.instance = new com_isartdigital_ruby_ui_items_ItemAsset();
	}
	return com_isartdigital_ruby_ui_items_ItemAsset.instance;
};
com_isartdigital_ruby_ui_items_ItemAsset.__super__ = com_isartdigital_utils_ui_smart_SmartComponent;
com_isartdigital_ruby_ui_items_ItemAsset.prototype = $extend(com_isartdigital_utils_ui_smart_SmartComponent.prototype,{
	getItemAsset: function(pName) {
		return js_Boot.__cast(this.getChildByName("Shop_spriteItemAsset_SC5") , com_isartdigital_utils_ui_smart_UISprite);
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_items_ItemAsset.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_items_ItemAsset
});
var com_isartdigital_ruby_ui_items_switchItems_BuildingMenuSwitchItem = function(pID) {
	this.buildingSize = new PIXI.Point(3,2);
	this.isClicked = false;
	var _gthis = this;
	this.interactive = true;
	com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.call(this,pID);
	this.on("mouseup",function() {
		_gthis.isClicked = false;
	});
	this.addStateSuffix = true;
};
$hxClasses["com.isartdigital.ruby.ui.items.switchItems.BuildingMenuSwitchItem"] = com_isartdigital_ruby_ui_items_switchItems_BuildingMenuSwitchItem;
com_isartdigital_ruby_ui_items_switchItems_BuildingMenuSwitchItem.__name__ = ["com","isartdigital","ruby","ui","items","switchItems","BuildingMenuSwitchItem"];
com_isartdigital_ruby_ui_items_switchItems_BuildingMenuSwitchItem.__super__ = com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem;
com_isartdigital_ruby_ui_items_switchItems_BuildingMenuSwitchItem.prototype = $extend(com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype,{
	setInfo: function(pParams) {
		this.nameField = js_Boot.__cast(this.getChildByName("txt_Name") , com_isartdigital_utils_ui_smart_TextSprite);
		this.nameField.set_text(com_isartdigital_ruby_ui_LocalizationByType.getInstance().translateFromType(pParams.name));
		this.assetName = pParams.name;
		this.name = this.assetName;
		this.prefix = "BuildingMenu_spriteItemAsset_";
		this.levelToBecomeEnable = com_isartdigital_ruby_game_GameManager.getInstance().godMode?0:pParams.levelToBecomeEnable;
		if(com_isartdigital_ruby_game_player_Player.getInstance().level >= this.levelToBecomeEnable) {
			this.setNormal();
		} else {
			this.setDisabled();
		}
		this.setAsset();
	}
	,getSpawner: function() {
		if(com_isartdigital_ruby_game_Spawner.getInstance().toSpawn != null && com_isartdigital_ruby_game_Spawner.getInstance().toSpawn.name == this.assetName) {
			com_isartdigital_ruby_game_Spawner.getInstance().cancel();
		} else {
			com_isartdigital_ruby_game_Spawner.getInstance().setElementToSpawn(this.assetName);
		}
	}
	,displayInfo: function() {
		com_isartdigital_ruby_ui_popin_building_BuildingMenu.getInstance().panel.setInfo(this.getDataAboutThisBuilding());
	}
	,getDataAboutThisBuilding: function() {
		return com_isartdigital_utils_save_DataManager.getInstance().listBuildingTypes.get(this.name);
	}
	,unDisplayInfo: function() {
		com_isartdigital_ruby_ui_popin_building_BuildingMenu.getInstance().panel.reset();
	}
	,monClick: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.monClick.call(this);
		if(!this.isClicked && this.currentState != this.btnDisabled) {
			this.getSpawner();
		}
		this.isClicked = true;
	}
	,onOver: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.onOver.call(this);
		this.displayInfo();
		this.setAsset();
	}
	,onOut: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.onOut.call(this);
		this.unDisplayInfo();
		this.setAsset();
	}
	,__class__: com_isartdigital_ruby_ui_items_switchItems_BuildingMenuSwitchItem
});
var com_isartdigital_ruby_ui_items_switchItems_BuildingMenuSwitchTab = function(pID) {
	com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.items.switchItems.BuildingMenuSwitchTab"] = com_isartdigital_ruby_ui_items_switchItems_BuildingMenuSwitchTab;
com_isartdigital_ruby_ui_items_switchItems_BuildingMenuSwitchTab.__name__ = ["com","isartdigital","ruby","ui","items","switchItems","BuildingMenuSwitchTab"];
com_isartdigital_ruby_ui_items_switchItems_BuildingMenuSwitchTab.__super__ = com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem;
com_isartdigital_ruby_ui_items_switchItems_BuildingMenuSwitchTab.prototype = $extend(com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.init.call(this);
		this.prefix = "BuildingMenu_TabAsset_";
		switch(this.id) {
		case 0:
			this.assetName = "Urbain";
			break;
		case 1:
			this.assetName = "Buffeur";
			break;
		case 2:
			this.assetName = "Forage";
			break;
		case 3:
			this.assetName = "Esthetique";
			break;
		default:
			this.assetName = "Urbain";
		}
	}
	,monClick: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.monClick.call(this);
		com_isartdigital_ruby_ui_popin_building_BuildingMenu.getInstance().currentIndex = this.id;
		com_isartdigital_ruby_ui_popin_building_BuildingMenu.getInstance().updateItems();
	}
	,__class__: com_isartdigital_ruby_ui_items_switchItems_BuildingMenuSwitchTab
});
var com_isartdigital_ruby_ui_items_switchItems_CodexSwitchItem = function(pID) {
	this.firsTime = false;
	com_isartdigital_ruby_ui_items_switchItems_SwitchItem.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.items.switchItems.CodexSwitchItem"] = com_isartdigital_ruby_ui_items_switchItems_CodexSwitchItem;
com_isartdigital_ruby_ui_items_switchItems_CodexSwitchItem.__name__ = ["com","isartdigital","ruby","ui","items","switchItems","CodexSwitchItem"];
com_isartdigital_ruby_ui_items_switchItems_CodexSwitchItem.__super__ = com_isartdigital_ruby_ui_items_switchItems_SwitchItem;
com_isartdigital_ruby_ui_items_switchItems_CodexSwitchItem.prototype = $extend(com_isartdigital_ruby_ui_items_switchItems_SwitchItem.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchItem.prototype.init.call(this);
		this.textName = js_Boot.__cast(this.getChildByName("txt_XenoName") , com_isartdigital_utils_ui_smart_TextSprite);
		this.textQuantity = js_Boot.__cast(this.getChildByName("txt_QuantityUnitDisplay") , com_isartdigital_utils_ui_smart_TextSprite);
		this.prefix = "XenosThumbnail_";
		this.addStateSuffix = true;
	}
	,setInfo: function(pAlien) {
		if(!this.firsTime) {
			this.currentAlien = pAlien;
			this.assetName = this.currentAlien.name;
			this.textName.set_text(this.currentAlien.nomenclature != ""?this.currentAlien.nomenclature:this.currentAlien.name);
			this.quantity = this.currentAlien.quantity;
			this.textQuantity.set_text(this.quantity + "");
			if(this.quantity == 0) {
				this.setDisabled();
			} else {
				this.setNormal();
			}
			this.setAsset();
			this.firsTime = true;
		}
	}
	,onOver: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchItem.prototype.onOver.call(this);
		this.setAsset();
	}
	,onOut: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchItem.prototype.onOver.call(this);
		this.setAsset();
	}
	,monClick: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchItem.prototype.monClick.call(this);
		if(this.currentState.name != "Disabled") {
			this.setAsset();
			com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_XenoPage.getInstance());
			com_isartdigital_ruby_ui_popin_XenoPage.getInstance().setAlienInfoToDisplay(this.currentAlien);
		}
	}
	,onDown: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchItem.prototype.onDown.call(this);
		this.setAsset();
	}
	,__class__: com_isartdigital_ruby_ui_items_switchItems_CodexSwitchItem
});
var com_isartdigital_ruby_ui_items_switchItems_CodexSwitchTab = function(pID) {
	com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.items.switchItems.CodexSwitchTab"] = com_isartdigital_ruby_ui_items_switchItems_CodexSwitchTab;
com_isartdigital_ruby_ui_items_switchItems_CodexSwitchTab.__name__ = ["com","isartdigital","ruby","ui","items","switchItems","CodexSwitchTab"];
com_isartdigital_ruby_ui_items_switchItems_CodexSwitchTab.__super__ = com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem;
com_isartdigital_ruby_ui_items_switchItems_CodexSwitchTab.prototype = $extend(com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.init.call(this);
		this.prefix = "Codex_TabAsset_";
		switch(this.id) {
		case 0:
			this.assetName = "All";
			break;
		case 1:
			this.assetName = "Buffeur";
			break;
		case 2:
			this.assetName = "Esthetique";
			break;
		case 3:
			this.assetName = "Foreur";
			break;
		default:
			this.assetName = "All";
		}
	}
	,monClick: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.monClick.call(this);
		switch(this.id) {
		case 0:
			com_isartdigital_ruby_ui_popin_codex_Codex.getInstance().updateItems();
			break;
		case 1:
			com_isartdigital_ruby_ui_popin_codex_Codex.getInstance().updateItemsByTypes("AlienBuffer","AlienProducer");
			break;
		case 2:
			com_isartdigital_ruby_ui_popin_codex_Codex.getInstance().updateItemsByTypes("AlienEsthetique");
			break;
		case 3:
			com_isartdigital_ruby_ui_popin_codex_Codex.getInstance().updateItemsByTypes("AlienForeur");
			break;
		default:
			com_isartdigital_ruby_ui_popin_codex_Codex.getInstance().updateItems();
		}
	}
	,__class__: com_isartdigital_ruby_ui_items_switchItems_CodexSwitchTab
});
var com_isartdigital_ruby_ui_items_switchItems_DrillingButtonSwitchItem = function(pID) {
	com_isartdigital_ruby_ui_items_switchItems_SwitchItem.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.items.switchItems.DrillingButtonSwitchItem"] = com_isartdigital_ruby_ui_items_switchItems_DrillingButtonSwitchItem;
com_isartdigital_ruby_ui_items_switchItems_DrillingButtonSwitchItem.__name__ = ["com","isartdigital","ruby","ui","items","switchItems","DrillingButtonSwitchItem"];
com_isartdigital_ruby_ui_items_switchItems_DrillingButtonSwitchItem.__super__ = com_isartdigital_ruby_ui_items_switchItems_SwitchItem;
com_isartdigital_ruby_ui_items_switchItems_DrillingButtonSwitchItem.prototype = $extend(com_isartdigital_ruby_ui_items_switchItems_SwitchItem.prototype,{
	monClick: function() {
	}
	,__class__: com_isartdigital_ruby_ui_items_switchItems_DrillingButtonSwitchItem
});
var com_isartdigital_ruby_ui_items_switchItems_MissionSwitchItem = function(pID) {
	com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.items.switchItems.MissionSwitchItem"] = com_isartdigital_ruby_ui_items_switchItems_MissionSwitchItem;
com_isartdigital_ruby_ui_items_switchItems_MissionSwitchItem.__name__ = ["com","isartdigital","ruby","ui","items","switchItems","MissionSwitchItem"];
com_isartdigital_ruby_ui_items_switchItems_MissionSwitchItem.__super__ = com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem;
com_isartdigital_ruby_ui_items_switchItems_MissionSwitchItem.prototype = $extend(com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype,{
	setInfo: function(pParams) {
		this.missionParams = pParams;
		this.setNormal();
	}
	,updateInfo: function() {
		if(this.missionParams == null) {
			return;
		}
		this.nameText.set_text(this.missionParams.name);
	}
	,setNormal: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setNormal.call(this);
		this.updateTextChild();
		this.updateInfo();
	}
	,setDisabled: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setDisabled.call(this);
		this.updateTextChild();
		this.updateInfo();
	}
	,setSelected: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setNormal.call(this);
		com_isartdigital_ruby_ui_popin_centreForage_CentreForage.getInstance().onClickMission(this.missionParams);
		this.updateTextChild();
		this.updateInfo();
	}
	,onOver: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.onOver.call(this);
		this.updateTextChild();
		this.updateInfo();
	}
	,onOut: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.onOut.call(this);
		this.updateTextChild();
		this.updateInfo();
	}
	,updateTextChild: function() {
		this.nameText = js_Boot.__cast(this.currentState.getChildByName(com_isartdigital_ruby_ui_items_switchItems_MissionSwitchItem.NAME) , com_isartdigital_utils_ui_smart_TextSprite);
	}
	,__class__: com_isartdigital_ruby_ui_items_switchItems_MissionSwitchItem
});
var com_isartdigital_ruby_ui_items_switchItems_ShopSwitchTab = function(pID) {
	com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.items.switchItems.ShopSwitchTab"] = com_isartdigital_ruby_ui_items_switchItems_ShopSwitchTab;
com_isartdigital_ruby_ui_items_switchItems_ShopSwitchTab.__name__ = ["com","isartdigital","ruby","ui","items","switchItems","ShopSwitchTab"];
com_isartdigital_ruby_ui_items_switchItems_ShopSwitchTab.__super__ = com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem;
com_isartdigital_ruby_ui_items_switchItems_ShopSwitchTab.prototype = $extend(com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.init.call(this);
		if(this.id == null) {
			this.id = 0;
		}
		this.prefix = "Shop_TabAsset_";
		this.assetName = StringTools.replace(com_isartdigital_ruby_ui_popin_shop_Shop.getInstance().shopAssetTitles[this.id]," ","_");
		this.setAsset();
	}
	,monClick: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.monClick.call(this);
		com_isartdigital_ruby_ui_popin_shop_Shop.getInstance().currentIndex = this.id;
		com_isartdigital_ruby_ui_popin_shop_Shop.getInstance().updateItems();
	}
	,setNormal: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setNormal.call(this);
		this.setAsset();
	}
	,onOver: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.onOver.call(this);
		this.setAsset();
	}
	,onOut: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.onOut.call(this);
		this.setAsset();
	}
	,__class__: com_isartdigital_ruby_ui_items_switchItems_ShopSwitchTab
});
var com_isartdigital_ruby_ui_items_switchItems_SpecialFeatureSwitchSkill = function(pID) {
	com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.call(this,pID);
	this.inAGroup = false;
};
$hxClasses["com.isartdigital.ruby.ui.items.switchItems.SpecialFeatureSwitchSkill"] = com_isartdigital_ruby_ui_items_switchItems_SpecialFeatureSwitchSkill;
com_isartdigital_ruby_ui_items_switchItems_SpecialFeatureSwitchSkill.__name__ = ["com","isartdigital","ruby","ui","items","switchItems","SpecialFeatureSwitchSkill"];
com_isartdigital_ruby_ui_items_switchItems_SpecialFeatureSwitchSkill.__super__ = com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem;
com_isartdigital_ruby_ui_items_switchItems_SpecialFeatureSwitchSkill.prototype = $extend(com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype,{
	initAlien: function(pAlien) {
	}
	,setAsset: function() {
		if(this.alien == null) {
			return;
		}
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setAsset.call(this);
	}
	,monClick: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.monClick.call(this);
		this.setSelected();
	}
	,__class__: com_isartdigital_ruby_ui_items_switchItems_SpecialFeatureSwitchSkill
});
var com_isartdigital_ruby_ui_items_switchItems_UpgradeCenterSwitchItem = function(pID) {
	com_isartdigital_ruby_ui_items_switchItems_SwitchItem.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.items.switchItems.UpgradeCenterSwitchItem"] = com_isartdigital_ruby_ui_items_switchItems_UpgradeCenterSwitchItem;
com_isartdigital_ruby_ui_items_switchItems_UpgradeCenterSwitchItem.__name__ = ["com","isartdigital","ruby","ui","items","switchItems","UpgradeCenterSwitchItem"];
com_isartdigital_ruby_ui_items_switchItems_UpgradeCenterSwitchItem.__super__ = com_isartdigital_ruby_ui_items_switchItems_SwitchItem;
com_isartdigital_ruby_ui_items_switchItems_UpgradeCenterSwitchItem.prototype = $extend(com_isartdigital_ruby_ui_items_switchItems_SwitchItem.prototype,{
	__class__: com_isartdigital_ruby_ui_items_switchItems_UpgradeCenterSwitchItem
});
var com_isartdigital_ruby_ui_items_switchItems_XenoSlotSwitchItem = function(pID) {
	com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.items.switchItems.XenoSlotSwitchItem"] = com_isartdigital_ruby_ui_items_switchItems_XenoSlotSwitchItem;
com_isartdigital_ruby_ui_items_switchItems_XenoSlotSwitchItem.__name__ = ["com","isartdigital","ruby","ui","items","switchItems","XenoSlotSwitchItem"];
com_isartdigital_ruby_ui_items_switchItems_XenoSlotSwitchItem.__super__ = com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem;
com_isartdigital_ruby_ui_items_switchItems_XenoSlotSwitchItem.prototype = $extend(com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.init.call(this);
		this.prefix = "XenosThumbnail_";
	}
	,monClick: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.monClick.call(this);
		this.placeXeno(com_isartdigital_ruby_ui_popin_centreForage_CentreForage.getInstance().alienSelected);
	}
	,placeXeno: function(pAlien) {
		if(pAlien != this.alien) {
			this.alien = pAlien;
		}
		if(this.alien != null) {
			this.assetName = this.alien.name + "_Normal";
			com_isartdigital_ruby_ui_popin_centreForage_CentreForage.getInstance().alienSelected = null;
			com_isartdigital_ruby_ui_popin_centreForage_CentreForage.getInstance().checkIfMissionCanBeStarted();
		}
	}
	,setAsset: function() {
		if(this.alien == null) {
			return;
		}
		haxe_Log.trace("yolo",{ fileName : "XenoSlotSwitchItem.hx", lineNumber : 45, className : "com.isartdigital.ruby.ui.items.switchItems.XenoSlotSwitchItem", methodName : "setAsset"});
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setAsset.call(this);
	}
	,__class__: com_isartdigital_ruby_ui_items_switchItems_XenoSlotSwitchItem
});
var com_isartdigital_ruby_ui_items_switchItems_XenoSocialSwitchItem = function(pID) {
	com_isartdigital_ruby_ui_items_switchItems_SwitchItem.call(this,pID);
	this.interactive = true;
};
$hxClasses["com.isartdigital.ruby.ui.items.switchItems.XenoSocialSwitchItem"] = com_isartdigital_ruby_ui_items_switchItems_XenoSocialSwitchItem;
com_isartdigital_ruby_ui_items_switchItems_XenoSocialSwitchItem.__name__ = ["com","isartdigital","ruby","ui","items","switchItems","XenoSocialSwitchItem"];
com_isartdigital_ruby_ui_items_switchItems_XenoSocialSwitchItem.__super__ = com_isartdigital_ruby_ui_items_switchItems_SwitchItem;
com_isartdigital_ruby_ui_items_switchItems_XenoSocialSwitchItem.prototype = $extend(com_isartdigital_ruby_ui_items_switchItems_SwitchItem.prototype,{
	monClick: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchItem.prototype.monClick.call(this);
		com_isartdigital_ruby_ui_popin_centreForage_CentreForage.getInstance().switchXenosSocial();
	}
	,__class__: com_isartdigital_ruby_ui_items_switchItems_XenoSocialSwitchItem
});
var com_isartdigital_ruby_ui_items_switchItems_XenosPanelSwitchItem = function(pID) {
	com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.call(this,pID);
	this.init();
};
$hxClasses["com.isartdigital.ruby.ui.items.switchItems.XenosPanelSwitchItem"] = com_isartdigital_ruby_ui_items_switchItems_XenosPanelSwitchItem;
com_isartdigital_ruby_ui_items_switchItems_XenosPanelSwitchItem.__name__ = ["com","isartdigital","ruby","ui","items","switchItems","XenosPanelSwitchItem"];
com_isartdigital_ruby_ui_items_switchItems_XenosPanelSwitchItem.__super__ = com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem;
com_isartdigital_ruby_ui_items_switchItems_XenosPanelSwitchItem.prototype = $extend(com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.init.call(this);
		this.addStateSuffix = true;
	}
	,setInfo: function(pAlienElem) {
		this.alien = pAlienElem;
		this.interactive = true;
		this.prefix = "XenosThumbnail_";
		this.assetName = this.alien.name;
		this.setAsset();
		this.name = this.assetName;
		com_isartdigital_ruby_ui_ftue_FTUEManager.register(this);
	}
	,monClick: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.monClick.call(this);
	}
	,onOver: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.onOver.call(this);
		this.setAsset();
	}
	,onOut: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.onOut.call(this);
		this.setAsset();
	}
	,onDown: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.onDown.call(this);
		this.setAsset();
	}
	,setSelected: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setSelected.call(this);
		this.setAsset();
		com_isartdigital_ruby_ui_popin_XenosPanel.getInstance().alienSelected = this.alien;
		com_isartdigital_ruby_ui_popin_XenosPanel.getInstance().onMove();
	}
	,setNormal: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setNormal.call(this);
		this.setAsset();
	}
	,__class__: com_isartdigital_ruby_ui_items_switchItems_XenosPanelSwitchItem
});
var com_isartdigital_ruby_ui_items_switchItems_XenosPanelSwitchTab = function() {
	com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.call(this);
	this.visible = false;
};
$hxClasses["com.isartdigital.ruby.ui.items.switchItems.XenosPanelSwitchTab"] = com_isartdigital_ruby_ui_items_switchItems_XenosPanelSwitchTab;
com_isartdigital_ruby_ui_items_switchItems_XenosPanelSwitchTab.__name__ = ["com","isartdigital","ruby","ui","items","switchItems","XenosPanelSwitchTab"];
com_isartdigital_ruby_ui_items_switchItems_XenosPanelSwitchTab.__super__ = com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem;
com_isartdigital_ruby_ui_items_switchItems_XenosPanelSwitchTab.prototype = $extend(com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype,{
	__class__: com_isartdigital_ruby_ui_items_switchItems_XenosPanelSwitchTab
});
var com_isartdigital_ruby_ui_popin_Confirm = function() {
	com_isartdigital_utils_ui_Popin.call(this);
	this.background = new PIXI.Sprite(PIXI.Texture.fromImage(com_isartdigital_utils_Config.url(com_isartdigital_utils_Config.get_assetsPath() + "Confirm.png")));
	this.background.anchor.set(0.5,0.5);
	this.addChild(this.background);
	this.openTween = TweenLite.from(this,0.5,{ y : 200, alpha : 0, onComplete : $bind(this,this.openingComplete)});
};
$hxClasses["com.isartdigital.ruby.ui.popin.Confirm"] = com_isartdigital_ruby_ui_popin_Confirm;
com_isartdigital_ruby_ui_popin_Confirm.__name__ = ["com","isartdigital","ruby","ui","popin","Confirm"];
com_isartdigital_ruby_ui_popin_Confirm.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_Confirm.instance == null) {
		com_isartdigital_ruby_ui_popin_Confirm.instance = new com_isartdigital_ruby_ui_popin_Confirm();
	}
	return com_isartdigital_ruby_ui_popin_Confirm.instance;
};
com_isartdigital_ruby_ui_popin_Confirm.__super__ = com_isartdigital_utils_ui_Popin;
com_isartdigital_ruby_ui_popin_Confirm.prototype = $extend(com_isartdigital_utils_ui_Popin.prototype,{
	openingComplete: function() {
		this.interactive = true;
		this.buttonMode = true;
		this.once("click",$bind(this,this.onClick));
		this.once("tap",$bind(this,this.onClick));
	}
	,onClick: function(pEvent) {
		com_isartdigital_utils_sounds_SoundManager.getSound("click").play();
		com_isartdigital_ruby_ui_UIManager.getInstance().closeCurrentPopin();
		com_isartdigital_ruby_game_GameManager.getInstance().start();
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_popin_Confirm.instance = null;
		com_isartdigital_utils_ui_Popin.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_ruby_ui_popin_Confirm
});
var com_isartdigital_ruby_ui_popin_contextual_ContextualPopin = function(pID) {
	com_isartdigital_ruby_ui_popin_SmartPopinRegister.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.popin.contextual.ContextualPopin"] = com_isartdigital_ruby_ui_popin_contextual_ContextualPopin;
com_isartdigital_ruby_ui_popin_contextual_ContextualPopin.__name__ = ["com","isartdigital","ruby","ui","popin","contextual","ContextualPopin"];
com_isartdigital_ruby_ui_popin_contextual_ContextualPopin.__super__ = com_isartdigital_ruby_ui_popin_SmartPopinRegister;
com_isartdigital_ruby_ui_popin_contextual_ContextualPopin.prototype = $extend(com_isartdigital_ruby_ui_popin_SmartPopinRegister.prototype,{
	get_target: function() {
		return this.target;
	}
	,set_target: function(pTarget) {
		this.target = pTarget;
		this.initPositionCenterTarget();
		return this.get_target();
	}
	,open: function() {
		com_isartdigital_ruby_ui_popin_SmartPopinRegister.prototype.open.call(this);
		com_isartdigital_utils_game_GameStage.getInstance().getInfoBulleContainer().addChild(this);
	}
	,initPositionCenterTarget: function() {
		var lModelPos = new PIXI.Point(0,0);
		if(!js_Boot.__instanceof(this.get_target(),com_isartdigital_ruby_game_world_Background)) {
			lModelPos = com_isartdigital_utils_game_iso_IsoManager.isoViewToModel(new PIXI.Point(this.get_target().globalPosition.x,this.get_target().globalPosition.y));
			lModelPos.x = lModelPos.x + com_isartdigital_ruby_game_controller_Controller.getInstance().getPosRegion().x;
			lModelPos.y = lModelPos.y + com_isartdigital_ruby_game_controller_Controller.getInstance().getPosRegion().y;
		} else {
			lModelPos.x += this.get_target().currentRegionCoor.x * 26;
			lModelPos.y += this.get_target().currentRegionCoor.y * 26;
		}
		lModelPos.x += Math.round(this.get_target().localWidth / 2);
		lModelPos.y += Math.round(this.get_target().localHeight / 2);
		this.positionCenterTarget = com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(lModelPos);
		this.position = this.positionCenterTarget;
	}
	,close: function() {
		this.removeAllListeners();
		if(this.parent != null) {
			this.parent.removeChild(this);
		}
		com_isartdigital_ruby_ui_popin_SmartPopinRegister.prototype.close.call(this);
	}
	,__class__: com_isartdigital_ruby_ui_popin_contextual_ContextualPopin
	,__properties__: $extend(com_isartdigital_ruby_ui_popin_SmartPopinRegister.prototype.__properties__,{set_target:"set_target",get_target:"get_target"})
});
var com_isartdigital_ruby_ui_popin_ConfirmationPose = function(pID) {
	this.noHC = false;
	this.noMN = false;
	this.noSC = false;
	com_isartdigital_ruby_ui_popin_contextual_ContextualPopin.call(this,pID);
	this.set_modal(false);
};
$hxClasses["com.isartdigital.ruby.ui.popin.ConfirmationPose"] = com_isartdigital_ruby_ui_popin_ConfirmationPose;
com_isartdigital_ruby_ui_popin_ConfirmationPose.__name__ = ["com","isartdigital","ruby","ui","popin","ConfirmationPose"];
com_isartdigital_ruby_ui_popin_ConfirmationPose.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_ConfirmationPose.instance == null) {
		com_isartdigital_ruby_ui_popin_ConfirmationPose.instance = new com_isartdigital_ruby_ui_popin_ConfirmationPose();
	}
	return com_isartdigital_ruby_ui_popin_ConfirmationPose.instance;
};
com_isartdigital_ruby_ui_popin_ConfirmationPose.__super__ = com_isartdigital_ruby_ui_popin_contextual_ContextualPopin;
com_isartdigital_ruby_ui_popin_ConfirmationPose.prototype = $extend(com_isartdigital_ruby_ui_popin_contextual_ContextualPopin.prototype,{
	init: function(pBuiding) {
		this.currentBuilding = pBuiding;
		this.cancelButton = js_Boot.__cast(this.getChildByName("btn_ConfirmReturn") , com_isartdigital_utils_ui_smart_SmartButton);
		this.scmnButtonNormal = js_Boot.__cast(this.getChildByName("ConfirmationPose_ButtonSC") , com_isartdigital_ruby_ui_specialButtons_Textbutton);
		this.hcButtonNormal = js_Boot.__cast(this.getChildByName("ConfirmationPose_ButtonHC") , com_isartdigital_ruby_ui_specialButtons_Textbutton);
		this.scmnYesButton = js_Boot.__cast(this.getChildByName("btn_YesBuySC") , com_isartdigital_utils_ui_smart_SmartButton);
		this.scmnNoButton = js_Boot.__cast(this.getChildByName("btn_NoBuySC") , com_isartdigital_utils_ui_smart_SmartButton);
		this.hcYesButton = js_Boot.__cast(this.getChildByName("btn_YesBuyHC") , com_isartdigital_utils_ui_smart_SmartButton);
		this.hcNoButton = js_Boot.__cast(this.getChildByName("btn_NoBuyHC") , com_isartdigital_utils_ui_smart_SmartButton);
		this.scmnButtonNormal.SCMNMode();
		this.hcButtonNormal.HCMode();
		this.cancelButton.on("click",$bind(this,this.onCancel));
		this.scmnYesButton.on("click",$bind(this,this.payWithSCMN));
		this.scmnNoButton.on("click",$bind(this,this.hideScmnConfirmButtons));
		this.hcYesButton.on("click",$bind(this,this.payWithHC));
		this.hcNoButton.on("click",$bind(this,this.hideHcConfirmButtons));
		this.scmnButtonNormal.on("click",$bind(this,this.displayScmnConfirmButtons));
		this.hcButtonNormal.on("click",$bind(this,this.displayHcConfirmButtons));
		this.cancelButton.on("tap",$bind(this,this.onCancel));
		this.scmnYesButton.on("tap",$bind(this,this.payWithSCMN));
		this.scmnNoButton.on("tap",$bind(this,this.hideScmnConfirmButtons));
		this.hcYesButton.on("tap",$bind(this,this.payWithHC));
		this.hcNoButton.on("tap",$bind(this,this.hideHcConfirmButtons));
		this.scmnButtonNormal.on("tap",$bind(this,this.displayScmnConfirmButtons));
		this.hcButtonNormal.on("tap",$bind(this,this.displayHcConfirmButtons));
		this.scmnYesButton.visible = false;
		this.scmnNoButton.visible = false;
		this.hcYesButton.visible = false;
		this.hcNoButton.visible = false;
		com_isartdigital_ruby_ui_popin_SmartPopinRegister.event.emit("onInit");
	}
	,close: function() {
		this.hideHcConfirmButtons();
		this.hideScmnConfirmButtons();
		com_isartdigital_ruby_ui_popin_contextual_ContextualPopin.prototype.close.call(this);
	}
	,updateValues: function(pSC,pMN,pHC) {
		this.scValue = pSC == null?"null":"" + pSC;
		this.mnValue = pMN == null?"null":"" + pMN;
		this.hcValue = pHC == null?"null":"" + pHC;
		this.DisplayCost();
	}
	,DisplayCost: function() {
		if(this.scValue != null && this.mnValue != null && this.hcValue != null) {
			haxe_Log.trace(this.scValue,{ fileName : "ConfirmationPose.hx", lineNumber : 180, className : "com.isartdigital.ruby.ui.popin.ConfirmationPose", methodName : "DisplayCost", customParams : [this.mnValue]});
			if(Std.parseInt(this.scValue) > 0 && Std.parseInt(this.mnValue) > 0) {
				this.scmnButtonNormal.displayTextSCMN();
			} else {
				this.scmnButtonNormal.visible = false;
			}
			this.hcButtonNormal.displayTextHC();
		}
	}
	,displayScmnConfirmButtons: function() {
		this.scmnYesButton.visible = true;
		this.scmnNoButton.visible = true;
		this.hideHcConfirmButtons();
		this.cancelButton.visible = false;
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerSwitchMode").play();
		this.scmnButtonNormal.on("click",$bind(this,this.hideScmnConfirmButtons));
		this.DisplayCost();
	}
	,displayHcConfirmButtons: function() {
		this.hcYesButton.visible = true;
		this.hcNoButton.visible = true;
		this.hideScmnConfirmButtons();
		this.cancelButton.visible = false;
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerSwitchMode").play();
		this.hcButtonNormal.on("click",$bind(this,this.hideHcConfirmButtons));
		this.DisplayCost();
	}
	,hideScmnConfirmButtons: function() {
		this.scmnYesButton.visible = false;
		this.scmnNoButton.visible = false;
		this.cancelButton.visible = true;
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerSwitchMode").play();
		this.scmnButtonNormal.on("click",$bind(this,this.displayScmnConfirmButtons));
	}
	,hideHcConfirmButtons: function() {
		this.hcYesButton.visible = false;
		this.hcNoButton.visible = false;
		this.cancelButton.visible = true;
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerSwitchMode").play();
		this.hcButtonNormal.on("click",$bind(this,this.displayHcConfirmButtons));
	}
	,onCancel: function() {
		this.resetValues();
		com_isartdigital_ruby_ui_UIManager.getInstance().closeCurrentPopin();
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerSwitchMode").play();
		com_isartdigital_ruby_game_Spawner.getInstance().cancel();
	}
	,payWithSCMN: function() {
		if(this.noSC || this.noMN) {
			if(this.noSC) {
				com_isartdigital_ruby_ui_hud_Hud.getInstance().noSCAnimation();
			}
			if(this.noMN) {
				com_isartdigital_ruby_ui_hud_Hud.getInstance().noMaterialAnimation();
			}
		} else {
			com_isartdigital_ruby_ui_popin_SmartPopinRegister.event.emit("onYes");
			com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerValidate").play();
			com_isartdigital_ruby_game_Spawner.getInstance().onClick();
			this.resetValues();
			com_isartdigital_ruby_ui_UIManager.getInstance().closeCurrentPopin();
		}
	}
	,payWithHC: function() {
		if(this.noHC) {
			com_isartdigital_ruby_ui_hud_Hud.getInstance().noHCAnimation();
		} else {
			com_isartdigital_ruby_ui_popin_SmartPopinRegister.event.emit("onYes");
			com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerValidate").play();
			com_isartdigital_ruby_game_Spawner.getInstance().isPayingWithHC = true;
			com_isartdigital_ruby_game_Spawner.getInstance().onClick();
			this.resetValues();
			com_isartdigital_ruby_ui_UIManager.getInstance().closeCurrentPopin();
		}
	}
	,resetValues: function() {
		this.noHC = false;
		this.noMN = false;
		this.noSC = false;
	}
	,destroy: function() {
		this.cancelButton.off("click",$bind(this,this.onCancel));
		this.scmnYesButton.off("click",$bind(this,this.payWithSCMN));
		this.scmnNoButton.off("click",$bind(this,this.hideScmnConfirmButtons));
		this.hcYesButton.off("click",$bind(this,this.payWithHC));
		this.hcNoButton.off("click",$bind(this,this.hideHcConfirmButtons));
		this.scmnButtonNormal.off("click",$bind(this,this.displayScmnConfirmButtons));
		this.hcButtonNormal.off("click",$bind(this,this.displayHcConfirmButtons));
		this.cancelButton.off("tap",$bind(this,this.onCancel));
		this.scmnYesButton.off("tap",$bind(this,this.payWithSCMN));
		this.scmnNoButton.off("tap",$bind(this,this.hideScmnConfirmButtons));
		this.hcYesButton.off("tap",$bind(this,this.payWithHC));
		this.hcNoButton.off("tap",$bind(this,this.hideHcConfirmButtons));
		this.scmnButtonNormal.off("tap",$bind(this,this.displayScmnConfirmButtons));
		this.hcButtonNormal.off("tap",$bind(this,this.displayHcConfirmButtons));
		com_isartdigital_ruby_ui_popin_ConfirmationPose.instance = null;
		com_isartdigital_ruby_ui_popin_contextual_ContextualPopin.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_ruby_ui_popin_ConfirmationPose
});
var com_isartdigital_ruby_ui_popin_DailyReward = function(pID) {
	com_isartdigital_ruby_ui_popin_SmartPopinRegister.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.popin.DailyReward"] = com_isartdigital_ruby_ui_popin_DailyReward;
com_isartdigital_ruby_ui_popin_DailyReward.__name__ = ["com","isartdigital","ruby","ui","popin","DailyReward"];
com_isartdigital_ruby_ui_popin_DailyReward.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_DailyReward.instance == null) {
		com_isartdigital_ruby_ui_popin_DailyReward.instance = new com_isartdigital_ruby_ui_popin_DailyReward();
	}
	return com_isartdigital_ruby_ui_popin_DailyReward.instance;
};
com_isartdigital_ruby_ui_popin_DailyReward.__super__ = com_isartdigital_ruby_ui_popin_SmartPopinRegister;
com_isartdigital_ruby_ui_popin_DailyReward.prototype = $extend(com_isartdigital_ruby_ui_popin_SmartPopinRegister.prototype,{
	destroy: function() {
		com_isartdigital_ruby_ui_popin_DailyReward.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_popin_DailyReward
});
var com_isartdigital_ruby_ui_popin_Deplacement = function(pID) {
	com_isartdigital_ruby_ui_popin_SmartPopinRegister.call(this,pID);
	this.set_modal(false);
	this.yesButton = js_Boot.__cast(this.getChildByName("btn_Yes") , com_isartdigital_utils_ui_smart_SmartButton);
	this.noButton = js_Boot.__cast(this.getChildByName("btn_No") , com_isartdigital_utils_ui_smart_SmartButton);
	this.yesButton.on("click",$bind(this,this.onYes));
	this.noButton.on("click",$bind(this,this.onNo));
	this.yesButton.on("tap",$bind(this,this.onYes));
	this.noButton.on("tap",$bind(this,this.onNo));
	this.yesButton.visible = false;
};
$hxClasses["com.isartdigital.ruby.ui.popin.Deplacement"] = com_isartdigital_ruby_ui_popin_Deplacement;
com_isartdigital_ruby_ui_popin_Deplacement.__name__ = ["com","isartdigital","ruby","ui","popin","Deplacement"];
com_isartdigital_ruby_ui_popin_Deplacement.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_Deplacement.instance == null) {
		com_isartdigital_ruby_ui_popin_Deplacement.instance = new com_isartdigital_ruby_ui_popin_Deplacement();
	}
	return com_isartdigital_ruby_ui_popin_Deplacement.instance;
};
com_isartdigital_ruby_ui_popin_Deplacement.__super__ = com_isartdigital_ruby_ui_popin_SmartPopinRegister;
com_isartdigital_ruby_ui_popin_Deplacement.prototype = $extend(com_isartdigital_ruby_ui_popin_SmartPopinRegister.prototype,{
	onYes: function() {
	}
	,onNo: function() {
		com_isartdigital_ruby_game_world_MapInteractor.getInstance().stopAlienMode();
		com_isartdigital_ruby_ui_UIManager.getInstance().closeCurrentPopin();
	}
	,destroy: function() {
		this.yesButton.off("click",$bind(this,this.onYes));
		this.noButton.off("click",$bind(this,this.onNo));
		this.yesButton.off("tap",$bind(this,this.onYes));
		this.noButton.off("tap",$bind(this,this.onNo));
		com_isartdigital_ruby_ui_popin_Deplacement.instance = null;
		com_isartdigital_ruby_ui_popin_SmartPopinRegister.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_ruby_ui_popin_Deplacement
});
var com_isartdigital_ruby_ui_popin_Destruction = function(pID) {
	com_isartdigital_ruby_ui_popin_SmartPopinRegister.call(this,pID);
	this.yesButton = js_Boot.__cast(this.getChildByName("btn_Yes") , com_isartdigital_utils_ui_smart_SmartButton);
	this.noButton = js_Boot.__cast(this.getChildByName("btn_No") , com_isartdigital_utils_ui_smart_SmartButton);
	this.yesButton.on("click",$bind(this,this.onYes));
	this.noButton.on("click",$bind(this,this.onNo));
	this.yesButton.on("tap",$bind(this,this.onYes));
	this.noButton.on("tap",$bind(this,this.onNo));
};
$hxClasses["com.isartdigital.ruby.ui.popin.Destruction"] = com_isartdigital_ruby_ui_popin_Destruction;
com_isartdigital_ruby_ui_popin_Destruction.__name__ = ["com","isartdigital","ruby","ui","popin","Destruction"];
com_isartdigital_ruby_ui_popin_Destruction.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_Destruction.instance == null) {
		com_isartdigital_ruby_ui_popin_Destruction.instance = new com_isartdigital_ruby_ui_popin_Destruction();
	}
	return com_isartdigital_ruby_ui_popin_Destruction.instance;
};
com_isartdigital_ruby_ui_popin_Destruction.__super__ = com_isartdigital_ruby_ui_popin_SmartPopinRegister;
com_isartdigital_ruby_ui_popin_Destruction.prototype = $extend(com_isartdigital_ruby_ui_popin_SmartPopinRegister.prototype,{
	onYes: function() {
		com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.getInstance().isDestroyConfirmed();
		com_isartdigital_ruby_ui_UIManager.getInstance().closeCurrentPopin();
		com_isartdigital_ruby_game_world_MapInteractor.getInstance().closeInfoPanel();
		com_isartdigital_utils_sounds_SoundManager.getSound("removeBuilding").play();
		com_isartdigital_ruby_ui_popin_SmartPopinRegister.event.emit("onYes");
	}
	,onNo: function() {
		com_isartdigital_ruby_ui_UIManager.getInstance().closeCurrentPopin();
	}
	,destroy: function() {
		this.yesButton.off("click",$bind(this,this.onYes));
		this.noButton.off("click",$bind(this,this.onNo));
		this.yesButton.off("tap",$bind(this,this.onYes));
		this.noButton.off("tap",$bind(this,this.onNo));
		com_isartdigital_ruby_ui_popin_Destruction.instance = null;
		com_isartdigital_ruby_ui_popin_SmartPopinRegister.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_ruby_ui_popin_Destruction
});
var com_isartdigital_ruby_ui_popin_DynamicPopin = function(pID) {
	com_isartdigital_ruby_ui_popin_SmartPopinRegister.call(this,"Destruction");
	this.componentName = "DynamicPopin";
	this.yesButton = js_Boot.__cast(this.getChildByName("btn_Yes") , com_isartdigital_utils_ui_smart_SmartButton);
	this.noButton = js_Boot.__cast(this.getChildByName("btn_No") , com_isartdigital_utils_ui_smart_SmartButton);
};
$hxClasses["com.isartdigital.ruby.ui.popin.DynamicPopin"] = com_isartdigital_ruby_ui_popin_DynamicPopin;
com_isartdigital_ruby_ui_popin_DynamicPopin.__name__ = ["com","isartdigital","ruby","ui","popin","DynamicPopin"];
com_isartdigital_ruby_ui_popin_DynamicPopin.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_DynamicPopin.instance == null) {
		com_isartdigital_ruby_ui_popin_DynamicPopin.instance = new com_isartdigital_ruby_ui_popin_DynamicPopin();
	}
	return com_isartdigital_ruby_ui_popin_DynamicPopin.instance;
};
com_isartdigital_ruby_ui_popin_DynamicPopin.__super__ = com_isartdigital_ruby_ui_popin_SmartPopinRegister;
com_isartdigital_ruby_ui_popin_DynamicPopin.prototype = $extend(com_isartdigital_ruby_ui_popin_SmartPopinRegister.prototype,{
	init: function(pQuestion,pFunction) {
		var questionText = js_Boot.__cast(this.getChildByName("txt_destroyBuildingConfirm") , com_isartdigital_utils_ui_smart_TextSprite);
		questionText.y -= 80;
		questionText.set_text(pQuestion);
		this.validationFunction = pFunction;
		this.yesButton.on("click",$bind(this,this.onYes));
		this.noButton.on("click",$bind(this,this.onNo));
		this.yesButton.on("tap",$bind(this,this.onYes));
		this.noButton.on("tap",$bind(this,this.onNo));
	}
	,onYes: function() {
		if(this.validationFunction != null) {
			this.validationFunction();
		}
		com_isartdigital_ruby_ui_UIManager.getInstance().closePopin(this);
		com_isartdigital_ruby_game_world_MapInteractor.getInstance().closeInfoPanel();
	}
	,onNo: function() {
		com_isartdigital_ruby_ui_UIManager.getInstance().closeCurrentPopin();
	}
	,destroy: function() {
		this.yesButton.off("click",$bind(this,this.onYes));
		this.noButton.off("click",$bind(this,this.onNo));
		this.yesButton.off("tap",$bind(this,this.onYes));
		this.noButton.off("tap",$bind(this,this.onNo));
		com_isartdigital_ruby_ui_popin_DynamicPopin.instance = null;
		com_isartdigital_ruby_ui_popin_SmartPopinRegister.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_ruby_ui_popin_DynamicPopin
});
var com_isartdigital_ruby_ui_popin_Friendlist = function(pID) {
	com_isartdigital_ruby_ui_popin_SmartPopinRegister.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.popin.Friendlist"] = com_isartdigital_ruby_ui_popin_Friendlist;
com_isartdigital_ruby_ui_popin_Friendlist.__name__ = ["com","isartdigital","ruby","ui","popin","Friendlist"];
com_isartdigital_ruby_ui_popin_Friendlist.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_Friendlist.instance == null) {
		com_isartdigital_ruby_ui_popin_Friendlist.instance = new com_isartdigital_ruby_ui_popin_Friendlist();
	}
	return com_isartdigital_ruby_ui_popin_Friendlist.instance;
};
com_isartdigital_ruby_ui_popin_Friendlist.__super__ = com_isartdigital_ruby_ui_popin_SmartPopinRegister;
com_isartdigital_ruby_ui_popin_Friendlist.prototype = $extend(com_isartdigital_ruby_ui_popin_SmartPopinRegister.prototype,{
	destroy: function() {
		com_isartdigital_ruby_ui_popin_Friendlist.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_popin_Friendlist
});
var com_isartdigital_ruby_ui_popin_IsartPoints = function(pID) {
	com_isartdigital_ruby_ui_popin_MenuClosable.call(this,pID);
	this.set_modal(true);
};
$hxClasses["com.isartdigital.ruby.ui.popin.IsartPoints"] = com_isartdigital_ruby_ui_popin_IsartPoints;
com_isartdigital_ruby_ui_popin_IsartPoints.__name__ = ["com","isartdigital","ruby","ui","popin","IsartPoints"];
com_isartdigital_ruby_ui_popin_IsartPoints.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_IsartPoints.instance == null) {
		com_isartdigital_ruby_ui_popin_IsartPoints.instance = new com_isartdigital_ruby_ui_popin_IsartPoints();
	}
	return com_isartdigital_ruby_ui_popin_IsartPoints.instance;
};
com_isartdigital_ruby_ui_popin_IsartPoints.__super__ = com_isartdigital_ruby_ui_popin_MenuClosable;
com_isartdigital_ruby_ui_popin_IsartPoints.prototype = $extend(com_isartdigital_ruby_ui_popin_MenuClosable.prototype,{
	destroy: function() {
		com_isartdigital_ruby_ui_popin_IsartPoints.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_popin_IsartPoints
});
var com_isartdigital_ruby_ui_popin_RewardNotifications = function(pID) {
	com_isartdigital_ruby_ui_popin_SmartPopinRegister.call(this,pID);
	this.alienSpriteList = [];
	this.rewardList = [];
	this.rewardTypeList = [];
	this.rewardTextList = [];
	this.title = js_Boot.__cast(this.getChildByName("txt_NotificationTitle") , com_isartdigital_utils_ui_smart_TextSprite);
	this.btnContinue = js_Boot.__cast(this.getChildByName("btn_Continue") , com_isartdigital_utils_ui_smart_SmartButton);
	this.btnClose = js_Boot.__cast(this.getChildByName("btn_Close") , com_isartdigital_utils_ui_smart_SmartButton);
	this.shareContainer = js_Boot.__cast(this.getChildByName("RewardNotifications_clipShare") , com_isartdigital_utils_ui_smart_SmartComponent);
	this.logoContainer = js_Boot.__cast(this.getChildByName("RewardNotification_spriteContainerPrincipal") , com_isartdigital_utils_ui_smart_SmartComponent);
	this.alienSprite1 = js_Boot.__cast(this.logoContainer.getChildByName("RewardNotifications_spritePrincipal #0") , com_isartdigital_utils_ui_smart_UISprite);
	this.alienSpriteList.push(this.alienSprite1);
	this.alienSprite2 = js_Boot.__cast(this.logoContainer.getChildByName("RewardNotifications_spritePrincipal #2") , com_isartdigital_utils_ui_smart_UISprite);
	this.alienSpriteList.push(this.alienSprite2);
	this.alienSprite3 = js_Boot.__cast(this.logoContainer.getChildByName("RewardNotifications_spritePrincipal #1") , com_isartdigital_utils_ui_smart_UISprite);
	this.alienSpriteList.push(this.alienSprite3);
	this.rewardContainer = js_Boot.__cast(this.getChildByName("RewardNotification_spriteContainerRewards") , com_isartdigital_utils_ui_smart_SmartComponent);
	var _g = 0;
	while(_g < 6) this.rewardList.push(js_Boot.__cast(this.rewardContainer.getChildByName("RewardNotifications_clipRewardUnit #" + _g++) , com_isartdigital_utils_ui_smart_SmartComponent));
};
$hxClasses["com.isartdigital.ruby.ui.popin.RewardNotifications"] = com_isartdigital_ruby_ui_popin_RewardNotifications;
com_isartdigital_ruby_ui_popin_RewardNotifications.__name__ = ["com","isartdigital","ruby","ui","popin","RewardNotifications"];
com_isartdigital_ruby_ui_popin_RewardNotifications.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_RewardNotifications.instance == null) {
		com_isartdigital_ruby_ui_popin_RewardNotifications.instance = new com_isartdigital_ruby_ui_popin_RewardNotifications();
	}
	return com_isartdigital_ruby_ui_popin_RewardNotifications.instance;
};
com_isartdigital_ruby_ui_popin_RewardNotifications.__super__ = com_isartdigital_ruby_ui_popin_SmartPopinRegister;
com_isartdigital_ruby_ui_popin_RewardNotifications.prototype = $extend(com_isartdigital_ruby_ui_popin_SmartPopinRegister.prototype,{
	initLevelUp: function(pLvl) {
		this.reset();
		this.shareContainer.visible = true;
		this.btnClose.visible = false;
		this.btnContinue.on("click",$bind(this,this.onClick));
		this.btnContinue.on("click",$bind(this,this.onClick));
		this.alienSprite1.visible = false;
		this.alienSprite3.visible = false;
		this.title.set_text(com_isartdigital_utils_system_Localization.getLabel("LABEL_LEVEL_UP") + " " + pLvl);
		var lReward = { hc : 0, sc : 0, gene1 : 0, gene2 : 0, gene3 : 0, gene4 : 0, gene5 : 0, schema : 0, darkMatter : 0};
		if(pLvl == 2) {
			lReward = { hc : 0, sc : 100, gene1 : 10, gene2 : 0, gene3 : 0, gene4 : 0, gene5 : 0, schema : 0, darkMatter : 100};
		}
		if(pLvl == 3) {
			lReward = { hc : 0, sc : 150, gene1 : 15, gene2 : 5, gene3 : 0, gene4 : 0, gene5 : 0, schema : 0, darkMatter : 100};
		}
		this.initRewardContainer(lReward);
		this.initLogoContainer();
		com_isartdigital_ruby_ui_popin_SmartPopinRegister.event.emit("onInit");
	}
	,initMissionEnd: function(pMissionReward,pXenoList) {
		debugger;
		this.reset();
		var _g = 0;
		var _g1 = this.alienSpriteList;
		while(_g < _g1.length) {
			var sprite = _g1[_g];
			++_g;
			sprite.visible = false;
		}
		this.shareContainer.visible = true;
		this.btnClose.visible = false;
		this.btnContinue.on("click",$bind(this,this.onClick));
		this.btnContinue.on("click",$bind(this,this.onClick));
		var _g11 = 0;
		var _g2 = pXenoList.length - 1;
		while(_g11 < _g2) {
			var i = _g11++;
			var lXeno = pXenoList[i];
			this.alienSpriteList[i].visible = true;
			this.setAssetAlien(this.alienSpriteList[i],lXeno);
		}
		this.title.set_text("Bravo !");
		this.initRewardContainer(pMissionReward);
		this.initLogoContainer();
		com_isartdigital_ruby_ui_popin_SmartPopinRegister.event.emit("onInit");
	}
	,reset: function() {
		var _g = 0;
		var _g1 = this.rewardList;
		while(_g < _g1.length) {
			var component = _g1[_g];
			++_g;
			component.visible = true;
			(js_Boot.__cast(component.getChildByName("RewardNotifications_spriteReward") , com_isartdigital_utils_ui_smart_UISprite)).visible = true;
		}
	}
	,setAssetReward: function() {
		var _g1 = 0;
		var _g = this.rewardTextList.length;
		while(_g1 < _g) {
			var i = _g1++;
			var lComponent = this.rewardList[i];
			var lText = js_Boot.__cast(lComponent.getChildByName("txt_itemQuantity") , com_isartdigital_utils_ui_smart_TextSprite);
			var lWrongAsset = js_Boot.__cast(lComponent.getChildByName("RewardNotifications_spriteReward") , com_isartdigital_utils_ui_smart_UISprite);
			lText.set_text("x" + Std.string(this.rewardTextList[i]));
			var lNewAsset = new com_isartdigital_utils_ui_smart_UISprite("RewardNotification_" + this.rewardTypeList[i]);
			lNewAsset.name = "mainAsset";
			lNewAsset.position = lWrongAsset.position.clone();
			lComponent.addChild(lNewAsset);
			lWrongAsset.visible = false;
		}
		var _g11 = 0;
		var _g2 = this.rewardList.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if(i1 >= this.rewardTextList.length) {
				this.rewardList[i1].visible = false;
			}
		}
		while(this.rewardTextList.length > 0) this.rewardTextList.pop();
		while(this.rewardTypeList.length > 0) this.rewardTypeList.pop();
	}
	,setAssetAlien: function(pAsset,pAlien) {
		var lAsset = new com_isartdigital_utils_ui_smart_UISprite("Enclos_" + pAlien.name + "_lvl1");
		lAsset.name = "mainAsset" + pAlien.name;
		lAsset.position = pAsset.position.clone();
		lAsset.position.y -= 130;
		this.addChild(lAsset);
		pAsset.visible = false;
	}
	,initRewardContainer: function(pMissionReward) {
		if(pMissionReward.sc != 0) {
			this.rewardTextList.push(pMissionReward.sc);
			this.rewardTypeList.push("SoftCurrency");
		}
		if(pMissionReward.hc != 0) {
			this.rewardTextList.push(pMissionReward.hc);
			this.rewardTypeList.push("HardCurrency");
		}
		if(pMissionReward.darkMatter != 0) {
			this.rewardTextList.push(pMissionReward.darkMatter);
			this.rewardTypeList.push("MN");
		}
		if(pMissionReward.schema != 0) {
			this.rewardTextList.push(pMissionReward.schema);
			this.rewardTypeList.push("Parchemin");
		}
		if(pMissionReward.gene1 != 0) {
			this.rewardTextList.push(pMissionReward.gene1);
			this.rewardTypeList.push("Rho");
		}
		if(pMissionReward.gene2 != 0) {
			this.rewardTextList.push(pMissionReward.gene2);
			this.rewardTypeList.push("Upsilon");
		}
		if(pMissionReward.gene3 != 0) {
			this.rewardTextList.push(pMissionReward.gene3);
			this.rewardTypeList.push("Beta");
		}
		if(pMissionReward.gene4 != 0) {
			this.rewardTextList.push(pMissionReward.gene4);
			this.rewardTypeList.push("Iota");
		}
		if(pMissionReward.gene5 != 0) {
			this.rewardTextList.push(pMissionReward.gene5);
			this.rewardTypeList.push("Sigma");
		}
		this.setAssetReward();
	}
	,initLogoContainer: function() {
	}
	,onClick: function() {
		com_isartdigital_ruby_ui_UIManager.getInstance().closePopin(this);
		com_isartdigital_utils_sounds_SoundManager.getSound("soundAtmosphere").play();
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_popin_RewardNotifications.instance = null;
		this.btnContinue.off("click",$bind(this,this.onClick));
		this.btnContinue.off("click",$bind(this,this.onClick));
	}
	,__class__: com_isartdigital_ruby_ui_popin_RewardNotifications
});
var com_isartdigital_ruby_ui_popin_Settings = function(pID) {
	com_isartdigital_utils_ui_smart_SmartScreen.call(this,pID);
	this.set_modal(true);
	this.audioOff = js_Boot.__cast(this.getChildByName("btn_AudioOff") , com_isartdigital_utils_ui_smart_SmartComponent);
	this.audioOn = js_Boot.__cast(this.getChildByName("btn_AudioOn") , com_isartdigital_utils_ui_smart_SmartComponent);
	this.audioOff.interactive = true;
	this.audioOn.interactive = true;
	this.audioOff.on("click",$bind(this,this.onAudioOff));
	this.audioOff.on("tap",$bind(this,this.onAudioOff));
	this.audioOn.on("click",$bind(this,this.onAudioOn));
	this.audioOn.on("tap",$bind(this,this.onAudioOn));
	this.close_btn = js_Boot.__cast(this.getChildByName("btn_Close") , com_isartdigital_utils_ui_smart_SmartButton);
	this.close_btn.on("click",$bind(this,this.onClose));
	this.close_btn.on("tap",$bind(this,this.onClose));
	this.moreGame_btn = js_Boot.__cast(this.getChildByName("btn_MoreGames") , com_isartdigital_utils_ui_smart_SmartButton);
};
$hxClasses["com.isartdigital.ruby.ui.popin.Settings"] = com_isartdigital_ruby_ui_popin_Settings;
com_isartdigital_ruby_ui_popin_Settings.__name__ = ["com","isartdigital","ruby","ui","popin","Settings"];
com_isartdigital_ruby_ui_popin_Settings.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_Settings.instance == null) {
		com_isartdigital_ruby_ui_popin_Settings.instance = new com_isartdigital_ruby_ui_popin_Settings();
	}
	return com_isartdigital_ruby_ui_popin_Settings.instance;
};
com_isartdigital_ruby_ui_popin_Settings.__super__ = com_isartdigital_utils_ui_smart_SmartScreen;
com_isartdigital_ruby_ui_popin_Settings.prototype = $extend(com_isartdigital_utils_ui_smart_SmartScreen.prototype,{
	onClose: function() {
		com_isartdigital_ruby_ui_UIManager.getInstance().openScreen(com_isartdigital_ruby_ui_hud_Hud.getInstance());
		com_isartdigital_ruby_ui_hud_Hud.getInstance().update();
	}
	,onAudioOn: function() {
		Howler.mute(false);
	}
	,onAudioOff: function() {
		Howler.mute(true);
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_popin_Settings.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_popin_Settings
});
var com_isartdigital_ruby_ui_popin_TimeBased = function(pID) {
	com_isartdigital_ruby_ui_popin_MenuClosable.call(this,pID);
	this.btnSkip = js_Boot.__cast(this.getChildByName("btn_Skip") , com_isartdigital_utils_ui_smart_SmartButton);
	this.buikdingName = js_Boot.__cast(this.getChildByName("Title_Txt") , com_isartdigital_utils_ui_smart_TextSprite);
	this.time = js_Boot.__cast(this.getChildByName("RemainingTime_Txt") , com_isartdigital_utils_ui_smart_TextSprite);
	this.price = js_Boot.__cast(this.getChildByName("TimeBased_txt_HCDisplay") , com_isartdigital_utils_ui_smart_TextSprite);
	this.skipText = js_Boot.__cast(this.getChildByName("SkipPrice_Txt") , com_isartdigital_utils_ui_smart_TextSprite);
	this.hcSprite = js_Boot.__cast(this.getChildByName("HCsprite") , com_isartdigital_utils_ui_smart_UISprite);
	this.init();
};
$hxClasses["com.isartdigital.ruby.ui.popin.TimeBased"] = com_isartdigital_ruby_ui_popin_TimeBased;
com_isartdigital_ruby_ui_popin_TimeBased.__name__ = ["com","isartdigital","ruby","ui","popin","TimeBased"];
com_isartdigital_ruby_ui_popin_TimeBased.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_TimeBased.instance == null) {
		com_isartdigital_ruby_ui_popin_TimeBased.instance = new com_isartdigital_ruby_ui_popin_TimeBased();
	}
	return com_isartdigital_ruby_ui_popin_TimeBased.instance;
};
com_isartdigital_ruby_ui_popin_TimeBased.__super__ = com_isartdigital_ruby_ui_popin_MenuClosable;
com_isartdigital_ruby_ui_popin_TimeBased.prototype = $extend(com_isartdigital_ruby_ui_popin_MenuClosable.prototype,{
	open: function() {
		com_isartdigital_ruby_ui_popin_MenuClosable.prototype.open.call(this);
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerSkiptime").play();
	}
	,setText: function(pbuilding) {
		this.currentBuilding = pbuilding;
		this.buikdingName.set_text(this.currentBuilding.name);
		this.validationFunction = $bind(pbuilding,pbuilding.cdTimerSkiped);
		if(com_isartdigital_ruby_ui_ftue_FTUEManager.isFTUEon()) {
			this.price.set_text("Gratuit");
			this.hcSprite.visible = false;
			this.skipText.visible = false;
		} else {
			this.price.set_text("3");
		}
		this.btnSkip.on("click",$bind(this,this.onYes));
		this.btnSkip.on("tap",$bind(this,this.onYes));
	}
	,onYes: function() {
		if(this.validationFunction != null) {
			this.validationFunction();
		}
		com_isartdigital_ruby_ui_UIManager.getInstance().closePopin(this);
		com_isartdigital_ruby_game_world_MapInteractor.getInstance().closeInfoPanel();
	}
	,refreshText: function() {
		if(this.currentBuilding != null) {
			if(this.currentBuilding.timeConstruction != null) {
				this.time.set_text(this.currentBuilding.timeConstruction);
			}
		}
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_popin_TimeBased.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_popin_TimeBased
});
var com_isartdigital_ruby_ui_popin_TutoSpecialFeature = function(pID) {
	com_isartdigital_ruby_ui_popin_MenuClosable.call(this,pID);
	this.init();
	this.width += 650;
	this.height += 500;
};
$hxClasses["com.isartdigital.ruby.ui.popin.TutoSpecialFeature"] = com_isartdigital_ruby_ui_popin_TutoSpecialFeature;
com_isartdigital_ruby_ui_popin_TutoSpecialFeature.__name__ = ["com","isartdigital","ruby","ui","popin","TutoSpecialFeature"];
com_isartdigital_ruby_ui_popin_TutoSpecialFeature.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_TutoSpecialFeature.instance == null) {
		com_isartdigital_ruby_ui_popin_TutoSpecialFeature.instance = new com_isartdigital_ruby_ui_popin_TutoSpecialFeature();
	}
	return com_isartdigital_ruby_ui_popin_TutoSpecialFeature.instance;
};
com_isartdigital_ruby_ui_popin_TutoSpecialFeature.__super__ = com_isartdigital_ruby_ui_popin_MenuClosable;
com_isartdigital_ruby_ui_popin_TutoSpecialFeature.prototype = $extend(com_isartdigital_ruby_ui_popin_MenuClosable.prototype,{
	onClose: function() {
		com_isartdigital_ruby_ui_popin_MenuClosable.prototype.onClose.call(this);
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_popin_TutoSpecialFeature.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_popin_TutoSpecialFeature
});
var com_isartdigital_ruby_ui_popin_XenoPage = function(pID) {
	this.XENO_EVOLUTION2 = "XenoEvolution #2";
	this.XENO_EVOLUTION1 = "XenoEvolution #1";
	this.XENO_ACTUAL = "XenoEvolutionActual";
	this.CLIP_SCHEMA = "XenoPage_clipSchema";
	this.TXT_AREA = "txt_EffectiveAreaDisplay";
	this.TXT_RANGE = "txt_RangeDisplay";
	this.TXT_POWERDESCRIPTION = "txt_PowerDescriptionDisplay";
	this.TXT_POWER = "txt_Power";
	this.TXT_CLASSDESCRIPTIONDISPLAY = "txt_ClassDescriptionDisplay";
	this.TXT_CLASSDISPLAY = "txt_ClassDisplay";
	this.TXT_STAMINA = "txt_StaminaXenoDisplay";
	this.TXT_SPECIENAME = "txt_SpecieName";
	this.BTN_RETURN = "btn_Return";
	com_isartdigital_ruby_ui_popin_MenuClosable.call(this,pID);
	this.init();
};
$hxClasses["com.isartdigital.ruby.ui.popin.XenoPage"] = com_isartdigital_ruby_ui_popin_XenoPage;
com_isartdigital_ruby_ui_popin_XenoPage.__name__ = ["com","isartdigital","ruby","ui","popin","XenoPage"];
com_isartdigital_ruby_ui_popin_XenoPage.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_XenoPage.instance == null) {
		com_isartdigital_ruby_ui_popin_XenoPage.instance = new com_isartdigital_ruby_ui_popin_XenoPage();
	}
	return com_isartdigital_ruby_ui_popin_XenoPage.instance;
};
com_isartdigital_ruby_ui_popin_XenoPage.__super__ = com_isartdigital_ruby_ui_popin_MenuClosable;
com_isartdigital_ruby_ui_popin_XenoPage.prototype = $extend(com_isartdigital_ruby_ui_popin_MenuClosable.prototype,{
	init: function() {
		this.description = com_isartdigital_utils_loader_GameLoader.getContent("descriptionAlien.json");
		com_isartdigital_ruby_ui_popin_MenuClosable.prototype.init.call(this);
		this.return_btn = js_Boot.__cast(this.getChildByName(this.BTN_RETURN) , com_isartdigital_utils_ui_smart_SmartButton);
		this.return_btn.on("click",$bind(this,this.onReturn));
		this.return_btn.on("tap",$bind(this,this.onReturn));
		this.specieName = js_Boot.__cast(this.getChildByName(this.TXT_SPECIENAME) , com_isartdigital_utils_ui_smart_TextSprite);
		this.stamina = js_Boot.__cast(this.getChildByName(this.TXT_STAMINA) , com_isartdigital_utils_ui_smart_TextSprite);
		this.classDisplay = js_Boot.__cast(this.getChildByName(this.TXT_CLASSDISPLAY) , com_isartdigital_utils_ui_smart_TextSprite);
		this.classDescription = js_Boot.__cast(this.getChildByName(this.TXT_CLASSDESCRIPTIONDISPLAY) , com_isartdigital_utils_ui_smart_TextSprite);
		this.power = js_Boot.__cast(this.getChildByName(this.TXT_POWER) , com_isartdigital_utils_ui_smart_TextSprite);
		this.powerDescription = js_Boot.__cast(this.getChildByName(this.TXT_POWERDESCRIPTION) , com_isartdigital_utils_ui_smart_TextSprite);
		this.range = js_Boot.__cast(this.getChildByName(this.TXT_RANGE) , com_isartdigital_utils_ui_smart_TextSprite);
		this.area = js_Boot.__cast(this.getChildByName(this.TXT_AREA) , com_isartdigital_utils_ui_smart_TextSprite);
		this.clipSchema = js_Boot.__cast(this.getChildByName(this.CLIP_SCHEMA) , com_isartdigital_utils_ui_smart_SmartComponent);
		this.xenoActual = js_Boot.__cast(this.getChildByName(this.XENO_ACTUAL) , com_isartdigital_utils_ui_smart_SmartComponent);
		this.xenoEvolution1 = js_Boot.__cast(this.getChildByName(this.XENO_EVOLUTION1) , com_isartdigital_utils_ui_smart_SmartComponent);
		this.xenoEvolution2 = js_Boot.__cast(this.getChildByName(this.XENO_EVOLUTION2) , com_isartdigital_utils_ui_smart_SmartComponent);
	}
	,setAlienInfoToDisplay: function(pAlien) {
		if(this.currentAlien == null && !this.isDone) {
			this.currentAlien = pAlien;
			var _g = 0;
			var _g1 = com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList;
			while(_g < _g1.length) {
				var alien = _g1[_g];
				++_g;
				if(alien.name == this.currentAlien.name) {
					this.currentAlienCarac = alien;
					if(alien.stamina != 0) {
						this.stamina.set_text(alien.stamina == null?"null":"" + alien.stamina);
					} else {
						this.stamina.set_text("");
					}
					this.xenoActual.getChildByName("XenoSprite").visible = false;
					this.assignCorrectAsset();
					this.specieName.set_text(this.currentAlien.nomenclature);
					this.classDisplay.set_text(StringTools.replace(this.currentAlien.type,"Alien","") + " : ");
					var tmp;
					if(Reflect.field(this.description,this.currentAlien.name) != null) {
						tmp = Reflect.field(this.description,this.currentAlien.name);
					} else {
						this.powerDescription.set_text("");
						this.power.set_text("");
						this.range.set_text("");
						tmp = this.area.set_text("");
					}
					this.powerDescription.set_text(tmp);
					this.classDescription.set_text(Reflect.field(this.description,this.currentAlien.type));
					this.isDone = true;
				}
			}
		}
	}
	,assignCorrectAsset: function() {
		var assetEvolution1;
		var assetEvolution2;
		var lAsset;
		if(this.currentAlien.type == "AlienForeur") {
			var _g = 0;
			var _g1 = this.xenoEvolution1.children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.visible = false;
			}
			var _g2 = 0;
			var _g11 = this.xenoEvolution2.children;
			while(_g2 < _g11.length) {
				var child1 = _g11[_g2];
				++_g2;
				child1.visible = false;
			}
			lAsset = new com_isartdigital_utils_ui_smart_UISprite("XenoPage_" + this.currentAlien.name);
		} else {
			var _g3 = Std.parseInt(this.currentAlienCarac.carac.nbUpgrade);
			if(_g3 == null) {
				this.xenoEvolution1.getChildByName("XenoSprite").visible = false;
				assetEvolution1 = new com_isartdigital_utils_ui_smart_UISprite("XenoPage_" + this.currentAlien.name + (this.currentAlienCarac.level >= "2"?"_1_Normal":"_2_Disabled"));
				assetEvolution1.position = this.xenoEvolution1.getChildByName("XenoSprite").position.clone();
				this.xenoEvolution1.addChild(assetEvolution1);
				this.xenoEvolution2.getChildByName("XenoSprite").visible = false;
				assetEvolution2 = new com_isartdigital_utils_ui_smart_UISprite("XenoPage_" + this.currentAlien.name + (this.currentAlienCarac.level == "3"?"_2_Normal":"_3_Disabled"));
				assetEvolution2.position = this.xenoEvolution2.getChildByName("XenoSprite").position.clone();
				this.xenoEvolution2.addChild(assetEvolution2);
			} else {
				switch(_g3) {
				case 0:
					var _g4 = 0;
					var _g12 = this.xenoEvolution1.children;
					while(_g4 < _g12.length) {
						var child2 = _g12[_g4];
						++_g4;
						child2.visible = false;
					}
					var _g5 = 0;
					var _g13 = this.xenoEvolution2.children;
					while(_g5 < _g13.length) {
						var child3 = _g13[_g5];
						++_g5;
						child3.visible = false;
					}
					break;
				case 1:
					var _g6 = 0;
					var _g14 = this.xenoEvolution2.children;
					while(_g6 < _g14.length) {
						var child4 = _g14[_g6];
						++_g6;
						child4.visible = false;
					}
					this.xenoEvolution1.getChildByName("XenoSprite").visible = false;
					assetEvolution1 = new com_isartdigital_utils_ui_smart_UISprite("XenoPage_" + this.currentAlien.name + (this.currentAlienCarac.level == "2"?"_1_Normal":"_2_Disabled"));
					assetEvolution1.position = this.xenoEvolution1.getChildByName("XenoSprite").position.clone();
					this.xenoEvolution1.addChild(assetEvolution1);
					break;
				default:
					this.xenoEvolution1.getChildByName("XenoSprite").visible = false;
					assetEvolution1 = new com_isartdigital_utils_ui_smart_UISprite("XenoPage_" + this.currentAlien.name + (this.currentAlienCarac.level >= "2"?"_1_Normal":"_2_Disabled"));
					assetEvolution1.position = this.xenoEvolution1.getChildByName("XenoSprite").position.clone();
					this.xenoEvolution1.addChild(assetEvolution1);
					this.xenoEvolution2.getChildByName("XenoSprite").visible = false;
					assetEvolution2 = new com_isartdigital_utils_ui_smart_UISprite("XenoPage_" + this.currentAlien.name + (this.currentAlienCarac.level == "3"?"_2_Normal":"_3_Disabled"));
					assetEvolution2.position = this.xenoEvolution2.getChildByName("XenoSprite").position.clone();
					this.xenoEvolution2.addChild(assetEvolution2);
				}
			}
			lAsset = new com_isartdigital_utils_ui_smart_UISprite("XenoPage_" + this.currentAlien.name + "_" + Std.string(this.currentAlienCarac.level));
		}
		lAsset.position = this.xenoActual.getChildByName("XenoSprite").position.clone();
		this.xenoActual.addChild(lAsset);
	}
	,onReturn: function() {
		com_isartdigital_ruby_ui_UIManager.getInstance().closePopin(this);
	}
	,onClose: function() {
		this.onReturn();
		com_isartdigital_ruby_ui_UIManager.getInstance().closeCurrentPopin();
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_popin_XenoPage.instance = null;
		com_isartdigital_ruby_ui_popin_MenuClosable.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_ruby_ui_popin_XenoPage
});
var com_isartdigital_ruby_ui_popin_XenosPanel = function(pID) {
	com_isartdigital_ruby_ui_popin_Menu.call(this,pID);
	this.set_modal(false);
};
$hxClasses["com.isartdigital.ruby.ui.popin.XenosPanel"] = com_isartdigital_ruby_ui_popin_XenosPanel;
com_isartdigital_ruby_ui_popin_XenosPanel.__name__ = ["com","isartdigital","ruby","ui","popin","XenosPanel"];
com_isartdigital_ruby_ui_popin_XenosPanel.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_XenosPanel.instance == null) {
		com_isartdigital_ruby_ui_popin_XenosPanel.instance = new com_isartdigital_ruby_ui_popin_XenosPanel();
	}
	return com_isartdigital_ruby_ui_popin_XenosPanel.instance;
};
com_isartdigital_ruby_ui_popin_XenosPanel.__super__ = com_isartdigital_ruby_ui_popin_Menu;
com_isartdigital_ruby_ui_popin_XenosPanel.prototype = $extend(com_isartdigital_ruby_ui_popin_Menu.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_popin_Menu.prototype.init.call(this);
		this.contextualItem = js_Boot.__cast(this.getChildByName("Contextual") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.contextualItem.visible = false;
		this.initTab(com_isartdigital_ruby_ui_items_switchItems_XenosPanelSwitchTab);
		this.initItems();
		this.xenoPageBtn = js_Boot.__cast(this.contextualItem.getChildByName("btn_UnitXenoPage") , com_isartdigital_utils_ui_smart_SmartButton);
		this.xenoPageBtn.on("click",$bind(this,this.onXenoPage));
		this.xenoPageBtn.on("tap",$bind(this,this.onXenoPage));
		this.upgradeBtn = js_Boot.__cast(this.contextualItem.getChildByName("btn_UnitUpgrade") , com_isartdigital_utils_ui_smart_SmartButton);
		this.upgradeBtn.on("click",$bind(this,this.onUpgrade));
		this.upgradeBtn.on("tap",$bind(this,this.onUpgrade));
		this.storeBtn = js_Boot.__cast(this.contextualItem.getChildByName("btn_UnitCryo") , com_isartdigital_utils_ui_smart_SmartButton);
		this.storeBtn.on("click",$bind(this,this.onStore));
		this.storeBtn.on("tap",$bind(this,this.onStore));
		this.btnSell = js_Boot.__cast(this.getChildByName("btn_Sell") , com_isartdigital_utils_ui_smart_SmartButton);
		this.btnSell.visible = false;
	}
	,initItems: function() {
		this.itemContainer = js_Boot.__cast(this.getChildByName(this.ITEM_CONTAINER) , com_isartdigital_utils_ui_smart_SmartComponent);
		this.itemContainer.interactive = true;
		this.initOffsetBetweenItems();
		this.updateItems();
	}
	,updateItems: function() {
		this.destroyAllChildInContainer(this.itemContainer);
		var count = 0;
		var _g1 = 0;
		var _g = com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList[i].type == "AlienProducer" || com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList[i].type == "AlienBuffer") {
				var currentItem = new com_isartdigital_ruby_ui_items_switchItems_XenosPanelSwitchItem();
				this.itemContainer.addChild(currentItem);
				currentItem.setInfo(com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList[i]);
				currentItem.x = this.offsetItem.x * count++;
			}
		}
	}
	,appearContextualMenuItemAt: function(pX) {
		var lY = this.contextualItem.y;
		this.contextualItem.x = pX;
		this.contextualItem.visible = true;
		TweenMax.fromTo(this.contextualItem,0.4,{ y : lY + 50, alpha : 0},{ y : lY, alpha : 1});
	}
	,onUpgrade: function() {
	}
	,onMove: function() {
		if(this.alienSelected != null) {
			com_isartdigital_ruby_game_world_MapInteractor.getInstance().alienSelected = this.alienSelected;
			com_isartdigital_ruby_game_world_MapInteractor.getInstance().highLightAlienBuildings();
		}
	}
	,onXenoPage: function() {
	}
	,onStore: function() {
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_popin_XenosPanel.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_popin_XenosPanel
});
var com_isartdigital_ruby_ui_popin_building_BuildingMenu = function(pID) {
	com_isartdigital_ruby_ui_popin_Menu.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.popin.building.BuildingMenu"] = com_isartdigital_ruby_ui_popin_building_BuildingMenu;
com_isartdigital_ruby_ui_popin_building_BuildingMenu.__name__ = ["com","isartdigital","ruby","ui","popin","building","BuildingMenu"];
com_isartdigital_ruby_ui_popin_building_BuildingMenu.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_building_BuildingMenu.instance == null) {
		com_isartdigital_ruby_ui_popin_building_BuildingMenu.instance = new com_isartdigital_ruby_ui_popin_building_BuildingMenu();
	}
	return com_isartdigital_ruby_ui_popin_building_BuildingMenu.instance;
};
com_isartdigital_ruby_ui_popin_building_BuildingMenu.__super__ = com_isartdigital_ruby_ui_popin_Menu;
com_isartdigital_ruby_ui_popin_building_BuildingMenu.prototype = $extend(com_isartdigital_ruby_ui_popin_Menu.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_popin_Menu.prototype.init.call(this);
		this.currentIndex = com_isartdigital_ruby_ui_popin_building_BuildingMenu.saveCurrentIndex;
		this.initTab(com_isartdigital_ruby_ui_items_switchItems_BuildingMenuSwitchTab);
		this.initItems();
		this.infoContainer = js_Boot.__cast(this.getChildByName("BuildingMenu_clipBuildingInfos") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.panel = new com_isartdigital_ruby_ui_popin_building_BuildingPanel();
		this.panel.init(this.infoContainer);
		this.ftueRegister();
		com_isartdigital_ruby_ui_popin_SmartPopinRegister.event.emit("onInit");
	}
	,initItems: function() {
		this.sliderContainer = js_Boot.__cast(this.getChildByName("Slider") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.itemContainer = js_Boot.__cast(this.sliderContainer.getChildByName(this.ITEM_CONTAINER) , com_isartdigital_utils_ui_smart_SmartComponent);
		this.itemContainer.interactive = true;
		this.initOffsetBetweenItems();
		this.slider = new com_isartdigital_ruby_ui_Slider();
		this.slider.init(this.sliderContainer,this.itemContainer);
		this.updateItems();
	}
	,updateItems: function() {
		this.destroyAllChildInContainer(this.itemContainer);
		com_isartdigital_ruby_ui_popin_building_BuildingMenu.saveCurrentIndex = this.currentIndex;
		var _g1 = 0;
		var _g = com_isartdigital_ruby_ui_popin_building_datas_BuildingMenuData.getInstance().datas[this.currentIndex].length;
		while(_g1 < _g) {
			var i = _g1++;
			var currentItemInfo = com_isartdigital_ruby_ui_popin_building_datas_BuildingMenuData.getInstance().datas[this.currentIndex][i];
			var currentItem = new com_isartdigital_ruby_ui_items_switchItems_BuildingMenuSwitchItem();
			this.itemContainer.addChild(currentItem);
			currentItem.x = this.offsetItem.x * i;
			currentItem.setInfo(currentItemInfo);
			currentItem.id = i;
			com_isartdigital_ruby_ui_ftue_FTUEManager.register(currentItem);
		}
		this.slider.update();
	}
	,updateEnergy: function() {
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_popin_building_BuildingMenu.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_popin_building_BuildingMenu
});
var com_isartdigital_ruby_ui_popin_building_BuildingPanel = function() {
};
$hxClasses["com.isartdigital.ruby.ui.popin.building.BuildingPanel"] = com_isartdigital_ruby_ui_popin_building_BuildingPanel;
com_isartdigital_ruby_ui_popin_building_BuildingPanel.__name__ = ["com","isartdigital","ruby","ui","popin","building","BuildingPanel"];
com_isartdigital_ruby_ui_popin_building_BuildingPanel.prototype = {
	init: function(pInfoContainer) {
		this.mainContainer = pInfoContainer;
		this.buildingName = this.getTextSprite("BuildingMenutxt_BatimentName");
		this.buildTime = this.getTextSprite("txt_buildTimeDisplay");
		this.scPrice = this.getTextSprite("txt_SCPrice");
		this.hcPrice = this.getTextSprite("txt_HCPrice");
		this.dmPrice = this.getTextSprite("txtMNPrice");
		this.description = this.getTextSprite("txt_descriptionBuilding");
		this.energy = this.getTextSprite("txt_energyBuildingDisplay");
		this.reset();
	}
	,getTextSprite: function(pName) {
		return js_Boot.__cast(this.mainContainer.getChildByName(pName) , com_isartdigital_utils_ui_smart_TextSprite);
	}
	,reset: function() {
		this.mainContainer.visible = false;
		this.buildingName.set_text("");
		this.buildTime.set_text("");
		this.scPrice.set_text("");
		this.hcPrice.set_text("");
		this.dmPrice.set_text("");
		this.description.set_text("");
		this.energy.set_text("");
	}
	,setInfo: function(pBuildingType) {
		this.mainContainer.visible = true;
		var h = pBuildingType.buildingTime.getHours() - 1;
		var m = pBuildingType.buildingTime.getMinutes();
		var s = pBuildingType.buildingTime.getSeconds();
		this.buildingName.set_text(com_isartdigital_ruby_ui_LocalizationByType.getInstance().translateFromType(pBuildingType.buildingName));
		this.buildTime.set_text("" + (h > 0?h + " H ":"") + (m > 0?m + " m ":"") + (s > 0?s + " s":""));
		this.scPrice.set_text("" + pBuildingType.softCurrencyCost);
		this.hcPrice.set_text("" + pBuildingType.hardCurrencyCost);
		this.dmPrice.set_text("" + pBuildingType.ressourcesCost);
		this.description.set_text("" + com_isartdigital_ruby_ui_LocalizationByType.getInstance().translateFromType(pBuildingType.description));
		this.energy.set_text("" + pBuildingType.energyCost);
	}
	,__class__: com_isartdigital_ruby_ui_popin_building_BuildingPanel
};
var com_isartdigital_ruby_ui_popin_building_datas_BuildingMenuData = function() {
};
$hxClasses["com.isartdigital.ruby.ui.popin.building.datas.BuildingMenuData"] = com_isartdigital_ruby_ui_popin_building_datas_BuildingMenuData;
com_isartdigital_ruby_ui_popin_building_datas_BuildingMenuData.__name__ = ["com","isartdigital","ruby","ui","popin","building","datas","BuildingMenuData"];
com_isartdigital_ruby_ui_popin_building_datas_BuildingMenuData.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_building_datas_BuildingMenuData.instance == null) {
		com_isartdigital_ruby_ui_popin_building_datas_BuildingMenuData.instance = new com_isartdigital_ruby_ui_popin_building_datas_BuildingMenuData();
	}
	return com_isartdigital_ruby_ui_popin_building_datas_BuildingMenuData.instance;
};
com_isartdigital_ruby_ui_popin_building_datas_BuildingMenuData.prototype = {
	init: function(pBuildingMenuData) {
		this.datas = pBuildingMenuData;
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_popin_building_datas_BuildingMenuData.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_popin_building_datas_BuildingMenuData
};
var com_isartdigital_ruby_ui_popin_buyRegion_BuyRegion = function(pID) {
	com_isartdigital_ruby_ui_popin_contextual_ContextualPopin.call(this,pID);
	this.set_modal(false);
	this.tooltip = js_Boot.__cast(this.getChildByName("RegionSwitch") , com_isartdigital_ruby_ui_popin_buyRegion_RegionSwitch);
	this.yesBtn = js_Boot.__cast(this.getChildByName("btn_YesBuySC") , com_isartdigital_utils_ui_smart_SmartButton);
	this.noBtn = js_Boot.__cast(this.getChildByName("btn_NoBuySC") , com_isartdigital_utils_ui_smart_SmartButton);
	this.tooltip.setOwnPopin(this);
	this.hideConfirmButtons();
	this.yesBtn.on("click",$bind(this,this.buyRegion));
	this.yesBtn.on("tap",$bind(this,this.buyRegion));
};
$hxClasses["com.isartdigital.ruby.ui.popin.buyRegion.BuyRegion"] = com_isartdigital_ruby_ui_popin_buyRegion_BuyRegion;
com_isartdigital_ruby_ui_popin_buyRegion_BuyRegion.__name__ = ["com","isartdigital","ruby","ui","popin","buyRegion","BuyRegion"];
com_isartdigital_ruby_ui_popin_buyRegion_BuyRegion.__super__ = com_isartdigital_ruby_ui_popin_contextual_ContextualPopin;
com_isartdigital_ruby_ui_popin_buyRegion_BuyRegion.prototype = $extend(com_isartdigital_ruby_ui_popin_contextual_ContextualPopin.prototype,{
	setOwnRegion: function(pRegion) {
		this.ownRegion = pRegion;
	}
	,displayCost: function() {
		this.tooltip.setText(com_isartdigital_ruby_game_world_World.getInstance().unlockRegionCost);
	}
	,displayConfirmButtons: function() {
		this.yesBtn.visible = true;
	}
	,hideConfirmButtons: function() {
		this.yesBtn.visible = false;
		this.noBtn.visible = false;
	}
	,unlock: function() {
		if(this.ownRegion == null) {
			return;
		}
		this.ownRegion.unlock();
	}
	,pay: function() {
		if(!com_isartdigital_ruby_game_GameManager.getInstance().godMode) {
			com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(-com_isartdigital_ruby_game_world_World.getInstance().unlockRegionCost,"softCurrency",false);
		}
	}
	,canAffortIt: function() {
		if(com_isartdigital_ruby_game_GameManager.getInstance().godMode) {
			return true;
		} else if(com_isartdigital_ruby_game_player_Player.getInstance().hasEnoughQuantity(com_isartdigital_ruby_game_world_World.getInstance().unlockRegionCost,com_isartdigital_ruby_game_player_Player.getInstance().softCurrency)) {
			return true;
		} else {
			com_isartdigital_ruby_ui_hud_Hud.getInstance().noSCAnimation();
			return false;
		}
	}
	,buyRegion: function() {
		if(this.canAffortIt()) {
			this.pay();
			this.unlock();
		}
	}
	,__class__: com_isartdigital_ruby_ui_popin_buyRegion_BuyRegion
});
var com_isartdigital_ruby_ui_popin_buyRegion_RegionSwitch = function(pID) {
	this.isDisplaying = false;
	this.counter = 0;
	com_isartdigital_ruby_ui_items_Item.call(this,pID);
	this.container = js_Boot.__cast(this.getChildByName("ConfirmationPose_clipPriceHCInfos") , com_isartdigital_utils_ui_smart_SmartComponent);
	this.text = js_Boot.__cast(this.container.getChildByName("txt_SCPrice") , com_isartdigital_utils_ui_smart_TextSprite);
};
$hxClasses["com.isartdigital.ruby.ui.popin.buyRegion.RegionSwitch"] = com_isartdigital_ruby_ui_popin_buyRegion_RegionSwitch;
com_isartdigital_ruby_ui_popin_buyRegion_RegionSwitch.__name__ = ["com","isartdigital","ruby","ui","popin","buyRegion","RegionSwitch"];
com_isartdigital_ruby_ui_popin_buyRegion_RegionSwitch.__super__ = com_isartdigital_ruby_ui_items_Item;
com_isartdigital_ruby_ui_popin_buyRegion_RegionSwitch.prototype = $extend(com_isartdigital_ruby_ui_items_Item.prototype,{
	setText: function(pCost) {
		this.text.set_text(pCost == null?"null":"" + pCost);
	}
	,setOwnPopin: function(pPopin) {
		this.popin = pPopin;
	}
	,monClick: function() {
		com_isartdigital_ruby_ui_items_Item.prototype.monClick.call(this);
		if(this.isDisplaying) {
			this.hide();
		} else {
			this.display();
		}
	}
	,display: function() {
		this.isDisplaying = true;
		this.popin.displayConfirmButtons();
	}
	,hide: function() {
		this.isDisplaying = false;
		this.counter = 0;
		this.popin.hideConfirmButtons();
	}
	,count: function() {
		if(this.isDisplaying) {
			if(++this.counter >= 180) {
				this.hide();
			}
		}
	}
	,__class__: com_isartdigital_ruby_ui_popin_buyRegion_RegionSwitch
});
var com_isartdigital_ruby_ui_popin_centreForage_CentreForage = function(pID) {
	this.missionIndex = 0;
	com_isartdigital_ruby_ui_popin_Menu.call(this,pID);
	this.set_modal(true);
};
$hxClasses["com.isartdigital.ruby.ui.popin.centreForage.CentreForage"] = com_isartdigital_ruby_ui_popin_centreForage_CentreForage;
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.__name__ = ["com","isartdigital","ruby","ui","popin","centreForage","CentreForage"];
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_centreForage_CentreForage.instance == null) {
		com_isartdigital_ruby_ui_popin_centreForage_CentreForage.instance = new com_isartdigital_ruby_ui_popin_centreForage_CentreForage();
	}
	return com_isartdigital_ruby_ui_popin_centreForage_CentreForage.instance;
};
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.__super__ = com_isartdigital_ruby_ui_popin_Menu;
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.prototype = $extend(com_isartdigital_ruby_ui_popin_Menu.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_popin_Menu.prototype.init.call(this);
		this.availableMissions = [];
		this.sliderContainerVertical = js_Boot.__cast(this.getChildByName("VerticalSlider") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.missionsContainer = js_Boot.__cast(this.sliderContainerVertical.getChildByName("MissionContainer") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.xenoSlotList = [];
		this.initSlider();
		this.initFriendsTab();
		this.initXenoItem();
		this.sliderHorizontal.init(this.sliderContainerHorizontal,this.xenosTab);
		this.drillBtn = js_Boot.__cast(this.getChildByName("btn_Forage") , com_isartdigital_ruby_ui_items_switchItems_SwitchItem);
		this.drillBtn.on("click",$bind(this,this.openDrillingFeature));
		this.drillBtn.on("tap",$bind(this,this.openDrillingFeature));
		this.drillBtn.visible = false;
		com_isartdigital_ruby_ui_ftue_FTUEManager.register(this.drillBtn);
		this.xenoList = [];
		this.initMissionTab();
		this.initInfoMissionPanel();
		this.arrowUp = js_Boot.__cast(this.getChildByName("btn_Fleche #1") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.arrowDown = js_Boot.__cast(this.getChildByName("btn_Fleche") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.arrowUp.on("click",$bind(this,this.upMission));
		this.arrowDown.on("click",$bind(this,this.downMission));
		this.activeXenos();
		this.updateItems();
		com_isartdigital_ruby_ui_popin_SmartPopinRegister.event.emit("onInit");
	}
	,onClickMission: function(pParams) {
		this.hcSprite.visible = true;
		this.mission = pParams;
		this.missionName.set_text(this.mission.name);
		this.maxXenosForThisMission = this.mission.alienSpawner;
		if(this.missionPanelContainer.getChildByName("thumbnail") != null) {
			this.missionPanelContainer.removeChild(this.missionPanelContainer.getChildByName("thumbnail"));
		}
		this.missionThumbnail = js_Boot.__cast(this.missionPanelContainer.getChildByName("CentreForage_spriteApercuMission") , com_isartdigital_utils_ui_smart_UISprite);
		var assetThumbail = new com_isartdigital_utils_ui_smart_UISprite("Thumbnail_" + StringTools.replace(this.mission.name," ",""));
		assetThumbail.position = this.missionThumbnail.position.clone();
		assetThumbail.y -= 20;
		assetThumbail.name = "thumbnail";
		this.missionPanelContainer.addChild(assetThumbail);
		this.missionThumbnail.visible = false;
		this.drillBtn.visible = true;
		this.drillBtn.interactive = false;
		this.drillBtn.setDisabled();
		this.initXenoSlot();
		this.missionPanelContainer.visible = true;
		if(this.mission.name == "Mission 25") {
			this.outpostText.set_text("6 / 6");
		}
		this.hcSprite.visible = true;
		this.scSprite.visible = true;
		this.schemaSprite.visible = true;
		this.mnSprite.visible = true;
		this.gene1Sprite.visible = true;
		this.gene2Sprite.visible = true;
		this.gene3Sprite.visible = true;
		this.gene4Sprite.visible = true;
		this.gene5Sprite.visible = true;
		if(this.mission.rewards.hc == 0) {
			this.hcSprite.visible = false;
		}
		if(this.mission.rewards.sc == 0) {
			this.scSprite.visible = false;
		}
		if(this.mission.rewards.darkMatter == 0) {
			this.mnSprite.visible = false;
		}
		if(this.mission.rewards.schema == 0) {
			this.schemaSprite.visible = false;
		}
		if(this.mission.rewards.gene1 == 0) {
			this.gene1Sprite.visible = false;
		}
		if(this.mission.rewards.gene2 == 0) {
			this.gene2Sprite.visible = false;
		}
		if(this.mission.rewards.gene3 == 0) {
			this.gene3Sprite.visible = false;
		}
		if(this.mission.rewards.gene4 == 0) {
			this.gene4Sprite.visible = false;
		}
		if(this.mission.rewards.gene5 == 0) {
			this.gene5Sprite.visible = false;
		}
	}
	,initXenoSlot: function() {
		while(this.xenoSlotList.length > 0) this.xenoSlotList.pop();
		this.xenoSlotContainer = js_Boot.__cast(this.missionPanelContainer.getChildByName("XenoSlotContainer") , com_isartdigital_utils_ui_smart_SmartComponent);
		var _g = 0;
		while(_g < 3) this.xenoSlotList.push(js_Boot.__cast(this.xenoSlotContainer.getChildByName("Item #" + _g++) , com_isartdigital_ruby_ui_specialButtons_SlotButton));
		var _g1 = 0;
		var _g2 = this.xenoSlotList.length;
		while(_g1 < _g2) {
			var i = _g1++;
			this.xenoSlotList[i].visible = true;
			this.xenoSlotList[i].alien = null;
			if(i > this.maxXenosForThisMission - 1) {
				this.xenoSlotList[i].visible = false;
			}
		}
		com_isartdigital_ruby_ui_ftue_FTUEManager.register(this.xenoSlotList[0]);
		this.maxXenosForThisMission++;
	}
	,initFriendsTab: function() {
		this.friendsTab = js_Boot.__cast(this.sliderContainerHorizontal.getChildByName("ItemContainerFriendList") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.offsetFriendItem = new PIXI.Point(this.friendsTab.children[0].x - this.friendsTab.children[1].x,this.friendsTab.children[0].y - this.friendsTab.children[1].y);
	}
	,initXenoItem: function() {
		this.xenosTab = js_Boot.__cast(this.sliderContainerHorizontal.getChildByName("ItemContainerXenosList") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.offsetXenoItem = new PIXI.Point(this.xenosTab.children[0].x - this.xenosTab.children[1].x,this.xenosTab.children[0].y - this.xenosTab.children[1].y);
		this.sliderHorizontal.init(this.sliderContainerHorizontal,this.xenosTab);
	}
	,initSlider: function() {
		this.sliderContainerHorizontal = js_Boot.__cast(this.getChildByName("Slider") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.sliderHorizontal = new com_isartdigital_ruby_ui_Slider();
	}
	,initInfoMissionPanel: function() {
		this.missionPanelContainer = js_Boot.__cast(this.getChildByName("CentreForage_clipMissionStats") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.missionPanelContainer.visible = false;
		this.sablierContainer = js_Boot.__cast(this.missionPanelContainer.getChildByName("CentreForage_clipMissionConditions") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.sablierText = js_Boot.__cast(this.sablierContainer.getChildByName("txt_drillTimeDisplay") , com_isartdigital_utils_ui_smart_TextSprite);
		this.outpostText = js_Boot.__cast(this.sablierContainer.getChildByName("txt_neededCentersDisplay") , com_isartdigital_utils_ui_smart_TextSprite);
		this.spriteSablier = js_Boot.__cast(this.sablierContainer.getChildByName("CentreForage_spriteCooldown") , com_isartdigital_utils_ui_smart_UISprite);
		this.spriteSablier.visible = false;
		this.sablierText.visible = false;
		this.outpostText.set_text("1 / 1");
		this.rewardContainer = js_Boot.__cast(this.missionPanelContainer.getChildByName("RewardContainer") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.scSprite = js_Boot.__cast(this.rewardContainer.getChildByName("Calque 2") , com_isartdigital_utils_ui_smart_UISprite);
		this.hcSprite = js_Boot.__cast(this.rewardContainer.getChildByName("CentreForage_spriteReward #5") , com_isartdigital_utils_ui_smart_UISprite);
		this.schemaSprite = js_Boot.__cast(this.rewardContainer.getChildByName("Calque 3") , com_isartdigital_utils_ui_smart_UISprite);
		this.mnSprite = js_Boot.__cast(this.rewardContainer.getChildByName("Calque 4") , com_isartdigital_utils_ui_smart_UISprite);
		this.gene1Sprite = js_Boot.__cast(this.rewardContainer.getChildByName("CentreForage_spriteReward #2") , com_isartdigital_utils_ui_smart_UISprite);
		this.gene2Sprite = js_Boot.__cast(this.rewardContainer.getChildByName("CentreForage_spriteReward #4") , com_isartdigital_utils_ui_smart_UISprite);
		this.gene3Sprite = js_Boot.__cast(this.rewardContainer.getChildByName("CentreForage_spriteReward #0") , com_isartdigital_utils_ui_smart_UISprite);
		this.gene4Sprite = js_Boot.__cast(this.rewardContainer.getChildByName("CentreForage_spriteReward #1") , com_isartdigital_utils_ui_smart_UISprite);
		this.gene5Sprite = js_Boot.__cast(this.rewardContainer.getChildByName("CentreForage_spriteReward #3") , com_isartdigital_utils_ui_smart_UISprite);
		this.missionName = js_Boot.__cast(this.missionPanelContainer.getChildByName("txt_missionName") , com_isartdigital_utils_ui_smart_TextSprite);
	}
	,switchXenosSocial: function() {
		if(this.friendsTab.visible) {
			this.activeXenos();
		} else {
			this.activeFriend();
		}
		this.updateItems();
		this.sliderHorizontal.update();
	}
	,activeFriend: function() {
		this.friendsTab.visible = true;
		this.xenosTab.visible = false;
		this.sliderHorizontal.initContainer(this.sliderContainerHorizontal,this.friendsTab);
	}
	,initMissionTab: function() {
		this.offsetMissionItem = new PIXI.Point(this.missionsContainer.children[0].x - this.missionsContainer.children[1].x,this.missionsContainer.children[0].y - this.missionsContainer.children[1].y);
		if(this.firstMissionPosition == null) {
			this.firstMissionPosition = this.missionsContainer.getChildByName("Mission" + " #0").position;
		}
		this.destroyAllChildInContainer(this.missionsContainer);
		this.updateMission();
	}
	,updateMission: function() {
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			this.availableMissions.push(Type.createInstance(com_isartdigital_ruby_ui_items_switchItems_MissionSwitchItem,[]));
			this.availableMissions[i].x = this.firstMissionPosition.x + i * this.offsetMissionItem.x;
			this.availableMissions[i].y = this.firstMissionPosition.y + i * this.offsetMissionItem.y;
			var tmp = com_isartdigital_ruby_game_player_MissionsManager.getInstance().missions[this.missionIndex + i];
			this.availableMissions[i].setInfo(tmp);
			this.availableMissions[i].name = "centreForageMission" + this.missionIndex + i;
			this.missionsContainer.addChild(this.availableMissions[i]);
			com_isartdigital_ruby_ui_ftue_FTUEManager.register(this.availableMissions[i]);
		}
	}
	,activeXenos: function() {
		this.friendsTab.visible = false;
		this.xenosTab.visible = true;
		this.sliderHorizontal.initContainer(this.sliderContainerHorizontal,this.xenosTab);
	}
	,updateItems: function() {
		if(this.sliderHorizontal == null) {
			return;
		}
		if(this.sliderHorizontal.itemContainer == this.xenosTab) {
			this.updateXenosItems();
		} else {
			this.updateFriendsItems();
		}
		this.sliderHorizontal.update();
	}
	,updateXenosItems: function() {
		this.destroyAllChildInContainer(this.xenosTab);
		var index = 0;
		var _g1 = 0;
		var _g = com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList[i].type == "AlienForeur") {
				var currentItem = new com_isartdigital_ruby_ui_items_DrillingXenoItem();
				this.xenosTab.addChild(currentItem);
				currentItem.initAlien(com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList[i]);
				currentItem.x = this.offsetXenoItem.x * index;
				currentItem.id = index;
				currentItem.name = "xeno" + index;
				com_isartdigital_ruby_ui_ftue_FTUEManager.register(currentItem);
				++index;
			}
		}
	}
	,updateFriendsItems: function() {
		this.destroyAllChildInContainer(this.friendsTab);
		if(com_isartdigital_utils_save_DataManager.getInstance().alienFriendsList.length == 0) {
			return;
		}
		var _g1 = 0;
		var _g = com_isartdigital_utils_save_DataManager.getInstance().alienFriendsList.length;
		while(_g1 < _g) {
			var i = _g1++;
			var currentItem = new com_isartdigital_ruby_ui_items_DrillingFriendItem();
			currentItem.setAlienElem(com_isartdigital_utils_save_DataManager.getInstance().alienFriendsList[i]);
			this.friendsTab.addChild(currentItem);
			currentItem.x = this.offsetFriendItem.x * i;
			com_isartdigital_ruby_ui_ftue_FTUEManager.register(currentItem);
		}
	}
	,upMission: function() {
		this.missionIndex--;
		if(this.missionIndex < 0) {
			this.missionIndex = 0;
		}
		this.updateMission();
	}
	,downMission: function() {
		this.missionIndex++;
		haxe_Log.trace(this.missionIndex + 4 + " " + com_isartdigital_ruby_game_player_MissionsManager.getInstance().missions.length,{ fileName : "CentreForage.hx", lineNumber : 421, className : "com.isartdigital.ruby.ui.popin.centreForage.CentreForage", methodName : "downMission"});
		if(this.missionIndex + 4 > com_isartdigital_ruby_game_player_MissionsManager.getInstance().missions.length) {
			this.missionIndex--;
		}
		this.updateMission();
	}
	,checkIfMissionCanBeStarted: function() {
		var _g = 0;
		var _g1 = this.xenoSlotList;
		while(_g < _g1.length) {
			var slot = _g1[_g];
			++_g;
			if(slot.alien != null) {
				this.drillBtn.setNormal();
				this.drillBtn.interactive = true;
			}
		}
	}
	,openDrillingFeature: function() {
		if(this.mission == null) {
			return;
		}
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerLaunchMission").play();
		com_isartdigital_ruby_ui_UIManager.getInstance().closeAllPopins();
		var _g = 0;
		var _g1 = this.xenoSlotList;
		while(_g < _g1.length) {
			var slot = _g1[_g];
			++_g;
			if(slot.visible) {
				this.xenoList.push(slot.alien);
			}
		}
		com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.getInstance().init(this.mission,this.xenoList);
	}
	,close: function() {
		com_isartdigital_ruby_ui_popin_Menu.prototype.close.call(this);
		com_isartdigital_ruby_game_world_MapInteractor.getInstance().modalPopinOpened = false;
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_popin_centreForage_CentreForage.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_popin_centreForage_CentreForage
});
var com_isartdigital_ruby_ui_popin_codex_Codex = function(pID) {
	com_isartdigital_ruby_ui_popin_Menu.call(this,pID);
	this.set_modal(true);
};
$hxClasses["com.isartdigital.ruby.ui.popin.codex.Codex"] = com_isartdigital_ruby_ui_popin_codex_Codex;
com_isartdigital_ruby_ui_popin_codex_Codex.__name__ = ["com","isartdigital","ruby","ui","popin","codex","Codex"];
com_isartdigital_ruby_ui_popin_codex_Codex.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_codex_Codex.instance == null) {
		com_isartdigital_ruby_ui_popin_codex_Codex.instance = new com_isartdigital_ruby_ui_popin_codex_Codex();
	}
	return com_isartdigital_ruby_ui_popin_codex_Codex.instance;
};
com_isartdigital_ruby_ui_popin_codex_Codex.__super__ = com_isartdigital_ruby_ui_popin_Menu;
com_isartdigital_ruby_ui_popin_codex_Codex.prototype = $extend(com_isartdigital_ruby_ui_popin_Menu.prototype,{
	open: function() {
		com_isartdigital_ruby_ui_popin_Menu.prototype.open.call(this);
		com_isartdigital_ruby_game_world_MapInteractor.getInstance().modalPopinOpened = true;
	}
	,close: function() {
		com_isartdigital_ruby_ui_popin_Menu.prototype.close.call(this);
		com_isartdigital_ruby_game_world_MapInteractor.getInstance().modalPopinOpened = false;
	}
	,init: function() {
		com_isartdigital_ruby_ui_popin_Menu.prototype.init.call(this);
		this.initTab(com_isartdigital_ruby_ui_items_switchItems_CodexSwitchTab);
		this.initItems();
		this.ftueRegister();
	}
	,initItems: function() {
		this.itemContainer = js_Boot.__cast(this.getChildByName(this.ITEM_CONTAINER) , com_isartdigital_utils_ui_smart_SmartComponent);
		this.itemContainer.interactive = true;
		this.initOffsetBetweenItems();
		this.updateItems();
	}
	,initOffsetBetweenItems: function() {
		com_isartdigital_ruby_ui_popin_Menu.prototype.initOffsetBetweenItems.call(this);
		this.offsetItem.y = this.itemContainer.getChildByName(this.ITEM + " #6").position.y - this.firstItemPosition.y;
	}
	,updateItems: function() {
		this.destroyAllChildInContainer(this.itemContainer);
		var currentLine = 0;
		var _g1 = 0;
		var _g = com_isartdigital_ruby_ui_popin_codex_CodexData.getInstance().listXeno.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(i > 0 && i % 6 == 0) {
				++currentLine;
			}
			var currentItem = new com_isartdigital_ruby_ui_items_switchItems_CodexSwitchItem();
			this.itemContainer.addChild(currentItem);
			currentItem.setInfo(com_isartdigital_ruby_ui_popin_codex_CodexData.getInstance().listXeno[i]);
			currentItem.x = this.offsetItem.x * (i % 6);
			currentItem.y = this.offsetItem.y * currentLine;
			currentItem.id = i;
			com_isartdigital_ruby_ui_ftue_FTUEManager.register(currentItem);
		}
	}
	,updateItemsByTypes: function(pType,pType2) {
		if(pType2 == null) {
			pType2 = "";
		}
		this.destroyAllChildInContainer(this.itemContainer);
		var counter = 0;
		var currentLine = 0;
		var _g1 = 0;
		var _g = com_isartdigital_ruby_ui_popin_codex_CodexData.getInstance().listXeno.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(com_isartdigital_ruby_ui_popin_codex_CodexData.getInstance().listXeno[i].type == pType || com_isartdigital_ruby_ui_popin_codex_CodexData.getInstance().listXeno[i].type == pType2) {
				if(counter > 0 && counter % 6 == 0) {
					++currentLine;
				}
				var currentItem = new com_isartdigital_ruby_ui_items_switchItems_CodexSwitchItem();
				this.itemContainer.addChild(currentItem);
				currentItem.setInfo(com_isartdigital_ruby_ui_popin_codex_CodexData.getInstance().listXeno[i]);
				currentItem.x = this.offsetItem.x * (i % 6);
				currentItem.y = this.offsetItem.y * currentLine;
				currentItem.id = i;
				com_isartdigital_ruby_ui_ftue_FTUEManager.register(currentItem);
				++counter;
			}
		}
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_popin_codex_Codex.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_popin_codex_Codex
});
var com_isartdigital_ruby_ui_popin_codex_CodexData = function() {
	this.listXeno = [];
};
$hxClasses["com.isartdigital.ruby.ui.popin.codex.CodexData"] = com_isartdigital_ruby_ui_popin_codex_CodexData;
com_isartdigital_ruby_ui_popin_codex_CodexData.__name__ = ["com","isartdigital","ruby","ui","popin","codex","CodexData"];
com_isartdigital_ruby_ui_popin_codex_CodexData.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_codex_CodexData.instance == null) {
		com_isartdigital_ruby_ui_popin_codex_CodexData.instance = new com_isartdigital_ruby_ui_popin_codex_CodexData();
	}
	return com_isartdigital_ruby_ui_popin_codex_CodexData.instance;
};
com_isartdigital_ruby_ui_popin_codex_CodexData.prototype = {
	init: function(pData) {
		this.data = pData.xenos;
	}
	,listAllAlienTypesInCodex: function() {
		var _g = 0;
		var _g1 = com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienBuffer.bufferTypes;
		while(_g < _g1.length) {
			var buffer = _g1[_g];
			++_g;
			this.listXeno.push(this.createNewXenoType(buffer.name,"AlienBuffer",buffer.nomenclature));
		}
		var _g2 = 0;
		var _g11 = com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienProducer.prodTypes;
		while(_g2 < _g11.length) {
			var producer = _g11[_g2];
			++_g2;
			this.listXeno.push(this.createNewXenoType(producer.name,"AlienProducer",producer.nomenclature));
		}
		var _g3 = 0;
		var _g12 = com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens.speFeatTypes;
		while(_g3 < _g12.length) {
			var foreur = _g12[_g3];
			++_g3;
			this.listXeno.push(this.createNewXenoType(foreur.name,"AlienForeur",foreur.nomenclature));
		}
		this.countAlienByName();
	}
	,countAlienByName: function() {
		var _g = 0;
		var _g1 = this.listXeno;
		while(_g < _g1.length) {
			var xeno = _g1[_g];
			++_g;
			xeno.quantity = com_isartdigital_ruby_game_sprites_elements_aliens_Alien.countAliensByName(xeno.name);
		}
	}
	,createNewXenoType: function(pName,pType,pNomenclature,pQuantity) {
		if(pQuantity == null) {
			pQuantity = 0;
		}
		if(pNomenclature == null) {
			pNomenclature = "";
		}
		return { name : pName, quantity : pQuantity, type : pType, nomenclature : pNomenclature};
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_popin_codex_CodexData.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_popin_codex_CodexData
};
var com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu = function(pID) {
	com_isartdigital_ruby_ui_popin_contextual_ContextualPopin.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.popin.contextual.BuildingContextualMenu"] = com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu;
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.__name__ = ["com","isartdigital","ruby","ui","popin","contextual","BuildingContextualMenu"];
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.instance == null) {
		com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.instance = new com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu();
	}
	return com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.instance;
};
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.__super__ = com_isartdigital_ruby_ui_popin_contextual_ContextualPopin;
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.prototype = $extend(com_isartdigital_ruby_ui_popin_contextual_ContextualPopin.prototype,{
	init: function() {
		this.set_modal(false);
		this.visible = false;
		this.initLeft();
		this.initRight();
		this.initInfoPanel();
		this.initConfirmUpgrade();
		this.visible = true;
	}
	,initPositionCenterTarget: function() {
		com_isartdigital_ruby_ui_popin_contextual_ContextualPopin.prototype.initPositionCenterTarget.call(this);
		this.currentBuilding = js_Boot.__cast(this.get_target() , com_isartdigital_ruby_game_sprites_elements_Building);
		this.currentBuilding.removeHoverFilter();
	}
	,initLeft: function() {
		this.leftButtons = [];
		this.leftFinalPosition = [];
		this.leftContainer = js_Boot.__cast(this.getChildByName("LeftButtonsPanel") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.moveBtn = js_Boot.__cast(this.leftContainer.getChildByName("btn_Move") , com_isartdigital_utils_ui_smart_SmartButton);
		this.moveBtn.on("click",$bind(this,this.moveBuilding));
		this.moveBtn.on("tap",$bind(this,this.moveBuilding));
		if(js_Boot.__instanceof(this.get_target(),com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock)) {
			this.moveBtn.visible = false;
		}
		this.destroyBtn = js_Boot.__cast(this.leftContainer.getChildByName("btn_Destroy") , com_isartdigital_utils_ui_smart_SmartButton);
		this.destroyBtn.on("click",$bind(this,this.destroyBuilding));
		this.destroyBtn.on("tap",$bind(this,this.destroyBuilding));
		if(js_Boot.__instanceof(this.get_target(),com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanHeadQuarter)) {
			this.destroyBtn.visible = false;
		}
		this.infoBtn = js_Boot.__cast(this.leftContainer.getChildByName("btn_Info") , com_isartdigital_utils_ui_smart_SmartButton);
		this.infoBtn.on("click",$bind(this,this.showInfo));
		this.infoBtn.on("tap",$bind(this,this.showInfo));
		var _g = 0;
		var _g1 = this.leftContainer.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			this.leftButtons.push(js_Boot.__cast(child , com_isartdigital_utils_ui_smart_SmartButton));
			this.leftFinalPosition.push(child.position.clone());
			child.x = 0;
			child.y = 0;
		}
	}
	,initRight: function() {
		this.rightButtons = [];
		this.rightFinalPosition = [];
		this.rightContainer = js_Boot.__cast(this.getChildByName("RightButtonsPanel") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.upgradeBtn = js_Boot.__cast(this.rightContainer.getChildByName("btn_Upgrade") , com_isartdigital_utils_ui_smart_SmartButton);
		this.upgradeBtn.on("click",$bind(this,this.clickUpgrade));
		this.upgradeBtn.on("tap",$bind(this,this.clickUpgrade));
		if(this.get_target().maxLevel == this.get_target().level || js_Boot.__instanceof(this.get_target(),com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanAntenna) || js_Boot.__instanceof(this.get_target(),com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienTrainingCenter)) {
			this.upgradeBtn.visible = false;
		} else if(js_Boot.__instanceof(this.get_target(),com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanHeadQuarter) || this.get_target().level < com_isartdigital_ruby_game_sprites_elements_Building.HQinstance.level) {
			this.upgradeBtn.visible = true;
		} else {
			this.upgradeBtn.visible = false;
		}
		this.featureBtn = js_Boot.__cast(this.rightContainer.getChildByName("btn_Feature") , com_isartdigital_utils_ui_smart_SmartButton);
		this.featureBtn.on("click",$bind(this,this.openFeature));
		this.featureBtn.on("tap",$bind(this,this.openFeature));
		if(!js_Boot.__instanceof(this.get_target(),com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingCenter) && !js_Boot.__instanceof(this.get_target(),com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingOutPost) && !js_Boot.__instanceof(this.get_target(),com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienIncubator) && !js_Boot.__instanceof(this.get_target(),com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanTranslation) && !js_Boot.__instanceof(this.get_target(),com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienTrainingCenter) && !js_Boot.__instanceof(this.get_target(),com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock)) {
			this.featureBtn.visible = false;
		}
		this.harvestBtn = js_Boot.__cast(this.rightContainer.getChildByName("btn_Harvest") , com_isartdigital_utils_ui_smart_SmartButton);
		this.harvestBtn.on("click",$bind(this,this.harvest));
		this.harvestBtn.on("tap",$bind(this,this.harvest));
		if(!js_Boot.__instanceof(this.get_target(),com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock)) {
			this.harvestBtn.visible = false;
		}
		var _g = 0;
		var _g1 = this.rightContainer.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			this.rightButtons.push(js_Boot.__cast(child , com_isartdigital_utils_ui_smart_SmartButton));
			this.rightFinalPosition.push(child.position.clone());
			child.x = 0;
			child.y = 0;
		}
		com_isartdigital_ruby_ui_ftue_FTUEManager.register(this.featureBtn);
		haxe_Timer.delay($bind(this,this.sendEvent),500);
	}
	,sendEvent: function() {
		haxe_Log.trace("",{ fileName : "BuildingContextualMenu.hx", lineNumber : 225, className : "com.isartdigital.ruby.ui.popin.contextual.BuildingContextualMenu", methodName : "sendEvent"});
		com_isartdigital_ruby_ui_popin_SmartPopinRegister.event.emit("onInit");
	}
	,initInfoPanel: function() {
		this.infoContainer = js_Boot.__cast(this.getChildByName("InfoPanel") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.infoContainer.visible = false;
		this.buildingName = js_Boot.__cast(this.getChildByName("txt_BuildingName") , com_isartdigital_utils_ui_smart_TextSprite);
		this.description = js_Boot.__cast(this.infoContainer.getChildByName("txt_descriptionBuilding") , com_isartdigital_utils_ui_smart_TextSprite);
		this.description.set_text("");
		this.levelBuilding = js_Boot.__cast(this.infoContainer.getChildByName("txt_levelBuilding") , com_isartdigital_utils_ui_smart_TextSprite);
		this.levelBuilding.set_text("");
	}
	,initConfirmUpgrade: function() {
		this.confirmUpgradeContainer = js_Boot.__cast(this.getChildByName("ConfirmUpgrade") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.confirmUpgradeContainer.visible = false;
		this.yesUpgradeBtn = js_Boot.__cast(this.confirmUpgradeContainer.getChildByName("btn_YesBuyHC") , com_isartdigital_utils_ui_smart_SmartButton);
		this.yesUpgradeBtn.visible = false;
		this.yesUpgradeBtn.on("click",$bind(this,this.upgradeBuilding));
		this.yesUpgradeBtn.on("tap",$bind(this,this.upgradeBuilding));
		this.noUpgradeBtn = js_Boot.__cast(this.confirmUpgradeContainer.getChildByName("btn_NoBuyHC") , com_isartdigital_utils_ui_smart_SmartButton);
		this.noUpgradeBtn.visible = false;
		this.noUpgradeBtn.on("click",$bind(this,this.clickUpgrade));
		this.noUpgradeBtn.on("tap",$bind(this,this.clickUpgrade));
		this.confirmUpgradeCostContainer = js_Boot.__cast(this.confirmUpgradeContainer.getChildByName("UpgradeCost") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.confirmUpgradeCostTextContainer = js_Boot.__cast(this.confirmUpgradeCostContainer.getChildByName("BuildingContextualMenu_clipCostContainer") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.scCost = js_Boot.__cast(this.confirmUpgradeCostTextContainer.getChildByName("UpgradeBuilding_txt_SCCost") , com_isartdigital_utils_ui_smart_TextSprite);
		this.mnCost = js_Boot.__cast(this.confirmUpgradeCostTextContainer.getChildByName("UpgradeBuilding_txt_MNCost") , com_isartdigital_utils_ui_smart_TextSprite);
	}
	,update: function() {
		this.buildingName.set_text(Std.string(this.currentBuilding.buildingName));
		this.description.set_text(this.currentBuilding.description);
		this.animationsContainers();
	}
	,playSFX: function() {
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerSwitchMode").play();
	}
	,animationsButtons: function() {
		this.playSFX();
		var _g1 = 0;
		var _g = this.leftFinalPosition.length;
		while(_g1 < _g) {
			var i = _g1++;
			new TweenMax(this.leftButtons[i],0.2,{ x : this.leftFinalPosition[i].x, y : this.leftFinalPosition[i].y, ease : Quart.easeIn, onComplete : $bind(this,this.playSFX)});
		}
		var _g11 = 0;
		var _g2 = this.rightFinalPosition.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			new TweenMax(this.rightButtons[i1],0.2,{ x : this.rightFinalPosition[i1].x, y : this.rightFinalPosition[i1].y, ease : Quart.easeIn});
		}
	}
	,animationsContainers: function() {
		var lLeftPoint = this.leftContainer.position.clone();
		this.leftContainer.position = new PIXI.Point(0,0);
		var lRightPoint = this.rightContainer.position.clone();
		this.rightContainer.position = new PIXI.Point(0,0);
		new TweenMax(this.leftContainer,0.2,{ x : lLeftPoint.x, y : lLeftPoint.y, onComplete : $bind(this,this.animationsButtons), ease : Quart.easeIn});
		new TweenMax(this.rightContainer,0.2,{ x : lRightPoint.x, y : lRightPoint.y, onComplete : $bind(this,this.animationsButtons), ease : Quart.easeIn});
	}
	,animationsInfoPanel: function() {
		this.infoContainer.scale.x = 0;
		this.infoContainer.scale.y = 0;
		new TweenMax(this.infoContainer.scale,0.3,{ x : 1, y : 1, ease : Quart.easeIn});
	}
	,animationConfirmUpgrade: function() {
		this.confirmUpgradeContainer.visible = true;
		TweenMax.fromTo(this.confirmUpgradeContainer.scale,0.2,{ x : 0, y : 0},{ x : 1, y : 1});
	}
	,animationConfirmBtns: function() {
		this.yesUpgradeBtn.visible = true;
		this.noUpgradeBtn.visible = true;
		TweenMax.fromTo(this.yesUpgradeBtn,0.1,{ x : this.confirmUpgradeCostContainer.x, y : this.confirmUpgradeCostContainer.y, alpha : 0},{ x : this.yesUpgradeBtn.x, y : this.yesUpgradeBtn.y, alpha : 1, delay : 0.2});
		TweenMax.fromTo(this.noUpgradeBtn,0.1,{ x : this.confirmUpgradeCostContainer.x, y : this.confirmUpgradeCostContainer.y, alpha : 0},{ x : this.noUpgradeBtn.x, y : this.noUpgradeBtn.y, alpha : 1, delay : 0.2});
	}
	,upgradeBuilding: function() {
		if(this.currentBuilding.canAffordUpgrade()) {
			this.currentBuilding.startUpgrading();
		}
	}
	,clickUpgrade: function() {
		if(!this.confirmUpgradeContainer.visible) {
			this.animationConfirmUpgrade();
			this.animationConfirmBtns();
			this.updateConfirmInfo();
			com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerSwitchMode").play();
		} else {
			this.confirmUpgradeContainer.visible = false;
		}
	}
	,updateConfirmInfo: function() {
		this.scCost.set_text(this.currentBuilding.costUpgradeSC + "");
		this.mnCost.set_text(this.currentBuilding.costUpgradeMN + "");
	}
	,destroyBuilding: function() {
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerSwitchMode").play();
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_Destruction.getInstance());
	}
	,openFeature: function() {
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerSwitchMode").play();
		com_isartdigital_ruby_ui_UIManager.getInstance().closeAllPopins();
		com_isartdigital_ruby_game_world_MapInteractor.getInstance().modalPopinOpened = true;
		if(js_Boot.__instanceof(this.get_target(),com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingCenter) || js_Boot.__instanceof(this.get_target(),com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingOutPost)) {
			com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_centreForage_CentreForage.getInstance());
		} else if(js_Boot.__instanceof(this.get_target(),com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanTranslation)) {
			com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.getInstance());
		} else if(js_Boot.__instanceof(this.get_target(),com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienIncubator)) {
			var lCurBuilding = js_Boot.__cast(this.get_target() , com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienIncubator);
			com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_incubator_Incubator.getInstance());
			com_isartdigital_ruby_ui_popin_incubator_Incubator.getInstance().initializationCurrentBuildingIncubator(lCurBuilding);
		} else if(js_Boot.__instanceof(this.get_target(),com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienTrainingCenter)) {
			var lCurBuilding1 = js_Boot.__cast(this.get_target() , com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienTrainingCenter);
			com_isartdigital_ruby_ui_popin_upgradeCenter_UpgradeCenter.getInstance().initializationCurrentBuildingTrainingCenter(lCurBuilding1);
			com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_upgradeCenter_UpgradeCenter.getInstance());
		} else if(js_Boot.__instanceof(this.get_target(),com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock)) {
			var lCurBuilding2 = js_Boot.__cast(this.get_target() , com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock);
			com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_enclos_Enclos.getInstance());
			com_isartdigital_ruby_ui_popin_enclos_Enclos.getInstance().initPopin(lCurBuilding2);
		}
	}
	,harvest: function() {
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerSwitchMode").play();
		var lApaddock = js_Boot.__cast(this.get_target() , com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock);
		lApaddock.setModeCollectable();
		lApaddock.onCollect();
	}
	,isDestroyConfirmed: function() {
		com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(Reflect.field(this.currentBuilding.buildingType,"SellingCost") | 0,"softCurrency");
		this.get_target().setModeDestroy();
	}
	,moveBuilding: function() {
		this.currentBuilding.setModeMove();
	}
	,showInfo: function() {
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerSwitchMode").play();
		if(!this.infoContainer.visible) {
			this.infoContainer.visible = true;
			this.description.set_text(this.currentBuilding.description);
			this.levelBuilding.set_text(this.get_target().level + " / " + this.get_target().maxLevel);
			this.animationsInfoPanel();
		} else {
			this.infoContainer.visible = false;
		}
	}
	,close: function() {
		this.removeAllListeners("click");
		this.removeAllListeners("tap");
		this.currentBuilding.contextualOpened = false;
		com_isartdigital_ruby_ui_popin_contextual_ContextualPopin.prototype.close.call(this);
	}
	,destroy: function() {
		this.removeAllListeners("click");
		this.removeAllListeners("tap");
		com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu
});
var com_isartdigital_ruby_ui_popin_contextual_YesNoPose = function(pID) {
	com_isartdigital_ruby_ui_popin_contextual_ContextualPopin.call(this,pID);
	this.set_modal(false);
	this.yesButton = js_Boot.__cast(this.getChildByName("btn_Yes") , com_isartdigital_utils_ui_smart_SmartButton);
	this.noButton = js_Boot.__cast(this.getChildByName("btn_No") , com_isartdigital_utils_ui_smart_SmartButton);
	this.yesButton.on("click",$bind(this,this.onYes));
	this.noButton.on("click",$bind(this,this.onNo));
	this.yesButton.on("tap",$bind(this,this.onYes));
	this.noButton.on("tap",$bind(this,this.onNo));
};
$hxClasses["com.isartdigital.ruby.ui.popin.contextual.YesNoPose"] = com_isartdigital_ruby_ui_popin_contextual_YesNoPose;
com_isartdigital_ruby_ui_popin_contextual_YesNoPose.__name__ = ["com","isartdigital","ruby","ui","popin","contextual","YesNoPose"];
com_isartdigital_ruby_ui_popin_contextual_YesNoPose.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_contextual_YesNoPose.instance == null) {
		com_isartdigital_ruby_ui_popin_contextual_YesNoPose.instance = new com_isartdigital_ruby_ui_popin_contextual_YesNoPose();
	}
	return com_isartdigital_ruby_ui_popin_contextual_YesNoPose.instance;
};
com_isartdigital_ruby_ui_popin_contextual_YesNoPose.__super__ = com_isartdigital_ruby_ui_popin_contextual_ContextualPopin;
com_isartdigital_ruby_ui_popin_contextual_YesNoPose.prototype = $extend(com_isartdigital_ruby_ui_popin_contextual_ContextualPopin.prototype,{
	onYes: function() {
		com_isartdigital_ruby_ui_popin_SmartPopinRegister.event.emit("onYes");
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerFinishCreateBuilding").play();
		com_isartdigital_ruby_game_Spawner.getInstance().onClick();
	}
	,onNo: function() {
		com_isartdigital_ruby_game_Spawner.getInstance().cancel();
		com_isartdigital_ruby_ui_UIManager.getInstance().closeCurrentPopin();
	}
	,destroy: function() {
		this.yesButton.off("click",$bind(this,this.onYes));
		this.noButton.off("click",$bind(this,this.onNo));
		this.yesButton.off("tap",$bind(this,this.onYes));
		this.noButton.off("tap",$bind(this,this.onNo));
		com_isartdigital_ruby_ui_popin_contextual_YesNoPose.instance = null;
		com_isartdigital_ruby_ui_popin_contextual_ContextualPopin.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_ruby_ui_popin_contextual_YesNoPose
});
var com_isartdigital_ruby_ui_popin_enclos_Enclos = function(pID) {
	com_isartdigital_ruby_ui_popin_MenuClosable.call(this,pID);
	this.set_modal(true);
	this.init();
};
$hxClasses["com.isartdigital.ruby.ui.popin.enclos.Enclos"] = com_isartdigital_ruby_ui_popin_enclos_Enclos;
com_isartdigital_ruby_ui_popin_enclos_Enclos.__name__ = ["com","isartdigital","ruby","ui","popin","enclos","Enclos"];
com_isartdigital_ruby_ui_popin_enclos_Enclos.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_enclos_Enclos.instance == null) {
		com_isartdigital_ruby_ui_popin_enclos_Enclos.instance = new com_isartdigital_ruby_ui_popin_enclos_Enclos();
	}
	return com_isartdigital_ruby_ui_popin_enclos_Enclos.instance;
};
com_isartdigital_ruby_ui_popin_enclos_Enclos.__super__ = com_isartdigital_ruby_ui_popin_MenuClosable;
com_isartdigital_ruby_ui_popin_enclos_Enclos.prototype = $extend(com_isartdigital_ruby_ui_popin_MenuClosable.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_popin_MenuClosable.prototype.init.call(this);
		this.nameList = [];
		this.lvlList = [];
		this.switchList = [];
		this.lvlPictoList = [];
		this.contextualMenu = js_Boot.__cast(this.getChildByName("clipContextualButtonsContainer") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.levelContainer = js_Boot.__cast(this.getChildByName("clipLevelContainer") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.xenoContainer = js_Boot.__cast(this.getChildByName("clipXenoContainer") , com_isartdigital_utils_ui_smart_SmartComponent);
		var _g = 0;
		while(_g < 6) {
			var i = _g++;
			this.nameList.push(js_Boot.__cast(this.getChildByName("txt_XenoName #" + i) , com_isartdigital_utils_ui_smart_TextSprite));
			var lLevelPicto = js_Boot.__cast(this.levelContainer.getChildByName("Enclos_clipUnitLevel #" + i) , com_isartdigital_utils_ui_smart_SmartComponent);
			this.lvlPictoList.push(lLevelPicto);
			this.lvlList.push(js_Boot.__cast(lLevelPicto.getChildByName("Enclos_txt_Level") , com_isartdigital_utils_ui_smart_TextSprite));
			var lSwitch = js_Boot.__cast(this.xenoContainer.getChildByName("Enclos_clipUnitSwitch #" + i) , com_isartdigital_ruby_ui_popin_enclos_EnclosSwitchItem);
			lSwitch.setNormal();
			this.switchList.push(lSwitch);
		}
		this.moveBtn = js_Boot.__cast(this.contextualMenu.getChildByName("Enclos_btn_UnitMove") , com_isartdigital_utils_ui_smart_SmartButton);
		this.infoBtn = js_Boot.__cast(this.contextualMenu.getChildByName("Enclos_btn_UnitXenoPage") , com_isartdigital_utils_ui_smart_SmartButton);
		this.freezeeBtn = js_Boot.__cast(this.contextualMenu.getChildByName("Enclos_btn_UnitCryo") , com_isartdigital_utils_ui_smart_SmartButton);
		this.upgradeBtn = js_Boot.__cast(this.contextualMenu.getChildByName("Enclos_btn_UnitUpgrade") , com_isartdigital_utils_ui_smart_SmartButton);
		this.moveBtn.on("click",$bind(this,this.moveAlien));
		this.moveBtn.on("tap",$bind(this,this.moveAlien));
		this.infoBtn.on("click",$bind(this,this.infoAlien));
		this.infoBtn.on("tap",$bind(this,this.infoAlien));
		this.freezeeBtn.on("click",$bind(this,this.freezeAlien));
		this.freezeeBtn.on("tap",$bind(this,this.freezeAlien));
		this.upgradeBtn.on("click",$bind(this,this.upgradeAlien));
		this.upgradeBtn.on("tap",$bind(this,this.upgradeAlien));
		this.contextualMenu.visible = false;
	}
	,initPopin: function(pPaddock) {
		this.currentPaddock = pPaddock;
		var _g1 = 0;
		var _g = this.switchList.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.nameList[i].set_text("Emplacement vide");
			if(i > this.currentPaddock.room - 1) {
				this.switchList[i].visible = false;
				this.nameList[i].visible = false;
				this.lvlList[i].visible = false;
				this.lvlPictoList[i].visible = false;
			}
		}
		var _g11 = 0;
		var _g2 = this.currentPaddock.totalAliens.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var lAlien = this.currentPaddock.totalAliens[i1];
			this.switchList[i1].setAlien(lAlien);
			this.nameList[i1].set_text(lAlien.name);
			this.lvlList[i1].set_text(lAlien.level == null?"null":"" + lAlien.level);
		}
	}
	,positionContextualMenu: function(pPosition) {
		this.contextualMenu.visible = true;
		this.contextualMenu.position = pPosition;
	}
	,moveAlien: function() {
		if(this.alienSelected == null) {
			return;
		}
		this.currentPaddock.removeAlien(this.alienSelected);
		com_isartdigital_ruby_game_world_MapInteractor.getInstance().highLightAlienBuildings();
	}
	,infoAlien: function() {
		if(this.alienSelected == null) {
			return;
		}
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_XenoPage.getInstance());
	}
	,freezeAlien: function() {
		if(this.alienSelected == null) {
			return;
		}
	}
	,upgradeAlien: function() {
		if(this.alienSelected == null) {
			return;
		}
	}
	,close: function() {
		com_isartdigital_ruby_ui_popin_MenuClosable.prototype.close.call(this);
		com_isartdigital_ruby_game_world_MapInteractor.getInstance().modalPopinOpened = false;
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_popin_enclos_Enclos.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_popin_enclos_Enclos
});
var com_isartdigital_ruby_ui_popin_enclos_EnclosSwitchItem = function(pID) {
	com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.popin.enclos.EnclosSwitchItem"] = com_isartdigital_ruby_ui_popin_enclos_EnclosSwitchItem;
com_isartdigital_ruby_ui_popin_enclos_EnclosSwitchItem.__name__ = ["com","isartdigital","ruby","ui","popin","enclos","EnclosSwitchItem"];
com_isartdigital_ruby_ui_popin_enclos_EnclosSwitchItem.__super__ = com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem;
com_isartdigital_ruby_ui_popin_enclos_EnclosSwitchItem.prototype = $extend(com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.init.call(this);
		this.onOff();
		this.prefix = "XenosThumbnail_";
		this.asset = js_Boot.__cast(this.currentState.getChildByName("asset") , com_isartdigital_utils_ui_smart_UISprite);
		this.asset.visible = false;
		this.btnNormal.interactive = false;
		this.addStateSuffix = true;
	}
	,setSelected: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setSelected.call(this);
		com_isartdigital_ruby_ui_popin_enclos_Enclos.getInstance().alienSelected = this.alien;
		com_isartdigital_ruby_ui_popin_enclos_Enclos.getInstance().positionContextualMenu(this.position);
	}
	,onOver: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.onOver.call(this);
		this.setAsset();
	}
	,onOut: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.onOut.call(this);
		this.setAsset();
	}
	,onDown: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.onDown.call(this);
		this.setAsset();
	}
	,setAlien: function(pAlienElem) {
		this.alien = pAlienElem;
		this.assetName = this.alien.name;
		this.setAsset();
		this.btnNormal.interactive = true;
		this.onListen();
	}
	,__class__: com_isartdigital_ruby_ui_popin_enclos_EnclosSwitchItem
});
var com_isartdigital_ruby_ui_popin_incubator_GeneButton = function(pID) {
	com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.popin.incubator.GeneButton"] = com_isartdigital_ruby_ui_popin_incubator_GeneButton;
com_isartdigital_ruby_ui_popin_incubator_GeneButton.__name__ = ["com","isartdigital","ruby","ui","popin","incubator","GeneButton"];
com_isartdigital_ruby_ui_popin_incubator_GeneButton.__super__ = com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem;
com_isartdigital_ruby_ui_popin_incubator_GeneButton.prototype = $extend(com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype,{
	initSup: function() {
		this.geneAsset = new com_isartdigital_utils_ui_smart_UISprite("IncubatorGene" + this.idGene);
		var o = com_isartdigital_ruby_game_player_Player.getInstance();
		var field = "gene" + this.idGene;
		var tmp;
		var tmp1;
		if(o == null) {
			tmp1 = null;
		} else {
			var tmp2;
			if(o.__properties__) {
				tmp = o.__properties__["get_" + field];
				tmp2 = tmp;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				tmp1 = o[tmp]();
			} else {
				tmp1 = o[field];
			}
		}
		this.quantity = tmp1;
		this.currentState.addChild(this.geneAsset);
	}
	,updateQuantityGene: function() {
		var o = com_isartdigital_ruby_game_player_Player.getInstance();
		var field = "gene" + this.idGene;
		var tmp;
		var tmp1;
		if(o == null) {
			tmp1 = null;
		} else {
			var tmp2;
			if(o.__properties__) {
				tmp = o.__properties__["get_" + field];
				tmp2 = tmp;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				tmp1 = o[tmp]();
			} else {
				tmp1 = o[field];
			}
		}
		this.quantity = tmp1;
	}
	,setInfo: function() {
		this.textQuantity = js_Boot.__cast(this.currentState.getChildByName("txt_geneQuantity") , com_isartdigital_utils_ui_smart_TextSprite);
		this.textQuantity.set_text(Std.string(this.quantity));
		if(this.geneAsset == null || this.currentState == null) {
			return;
		}
		if(this.currentState.children.indexOf(this.geneAsset) == -1) {
			this.currentState.addChild(this.geneAsset);
		}
	}
	,setNormal: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setNormal.call(this);
		this.setInfo();
	}
	,setDisabled: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setDisabled.call(this);
		this.setInfo();
	}
	,setSelected: function() {
		this.setInfo();
	}
	,monClick: function() {
		this.setInfo();
	}
	,onOver: function() {
		this.setInfo();
	}
	,onOut: function() {
		this.setInfo();
	}
	,changeIncubatorCurrentGeneButton: function() {
	}
	,__class__: com_isartdigital_ruby_ui_popin_incubator_GeneButton
});
var com_isartdigital_ruby_ui_popin_incubator_GeneSpot = function(pID) {
	this.isSelected = false;
	this.NAME = "ItemName";
	com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.popin.incubator.GeneSpot"] = com_isartdigital_ruby_ui_popin_incubator_GeneSpot;
com_isartdigital_ruby_ui_popin_incubator_GeneSpot.__name__ = ["com","isartdigital","ruby","ui","popin","incubator","GeneSpot"];
com_isartdigital_ruby_ui_popin_incubator_GeneSpot.__super__ = com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem;
com_isartdigital_ruby_ui_popin_incubator_GeneSpot.prototype = $extend(com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype,{
	updateTextChild: function() {
		this.textSpot = js_Boot.__cast(this.getChildByName(this.NAME) , com_isartdigital_utils_ui_smart_TextSprite);
	}
	,setNormal: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setNormal.call(this);
		this.updateTextChild();
		this.update();
	}
	,setDisabled: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setNormal.call(this);
		this.updateTextChild();
		this.update();
	}
	,setSelected: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setNormal.call(this);
		this.updateTextChild();
		this.update(true);
	}
	,initGene: function(pGene) {
		this.geneId = pGene;
		this.setNormal();
		this.textSpot.set_text("");
	}
	,onOver: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.onOver.call(this);
		this.updateTextChild();
		this.update();
	}
	,onOut: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.onOut.call(this);
		this.updateTextChild();
		this.update();
	}
	,update: function(isSelected) {
		if(isSelected == null) {
			isSelected = false;
		}
		if(this.geneId == null) {
			return;
		}
		if(this.geneQuant != null) {
			this.textSpot.set_text(Std.string(this.geneQuant));
		}
		if(this.assetGene != null && !isSelected) {
			this.currentState.addChild(this.assetGene);
		}
	}
	,monClick: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.monClick.call(this);
		if(com_isartdigital_ruby_ui_popin_incubator_Incubator.getInstance().geneSelected == this.geneId && com_isartdigital_ruby_ui_popin_incubator_Incubator.getInstance().quantityMax >= this.geneQuant) {
			this.isSelected = true;
			this.setSelected();
		} else {
			var _g = 0;
			var _g1 = this.inseminator.listGenoSpot;
			while(_g < _g1.length) {
				var gene = _g1[_g];
				++_g;
				this.setNormal();
				gene.isSelected = false;
			}
		}
		this.update();
	}
	,setInfoGene: function(pId,pQuant) {
		this.geneId = pId;
		this.geneQuant = pQuant;
		this.assetGene = new com_isartdigital_utils_ui_smart_UISprite("IncubatorGene" + pId);
		this.isSelected = true;
		this.update();
	}
	,unsetInfoGene: function() {
		this.geneId = null;
		this.geneQuant = null;
		this.isSelected = false;
		this.update();
	}
	,__class__: com_isartdigital_ruby_ui_popin_incubator_GeneSpot
});
var com_isartdigital_ruby_ui_popin_incubator_Incubator = function(pID) {
	this.TXT_GENE = "txt_Genes";
	this.SCHEMA_BUTTON = "Incubator_clipSwitchSchema";
	this.FILTER_BUTTON = "TabSwitch2";
	this.INSEMINATE_CONTAINER = "Incubator";
	com_isartdigital_ruby_ui_popin_Menu.call(this,pID);
	this.set_modal(true);
};
$hxClasses["com.isartdigital.ruby.ui.popin.incubator.Incubator"] = com_isartdigital_ruby_ui_popin_incubator_Incubator;
com_isartdigital_ruby_ui_popin_incubator_Incubator.__name__ = ["com","isartdigital","ruby","ui","popin","incubator","Incubator"];
com_isartdigital_ruby_ui_popin_incubator_Incubator.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_incubator_Incubator.instance == null) {
		com_isartdigital_ruby_ui_popin_incubator_Incubator.instance = new com_isartdigital_ruby_ui_popin_incubator_Incubator();
	}
	return com_isartdigital_ruby_ui_popin_incubator_Incubator.instance;
};
com_isartdigital_ruby_ui_popin_incubator_Incubator.__super__ = com_isartdigital_ruby_ui_popin_Menu;
com_isartdigital_ruby_ui_popin_incubator_Incubator.prototype = $extend(com_isartdigital_ruby_ui_popin_Menu.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_popin_Menu.prototype.init.call(this);
		this.availableSchema = [];
		this.geneContainer = js_Boot.__cast(this.getChildByName(com_isartdigital_ruby_ui_popin_incubator_Incubator.GENE_CONTAINER) , com_isartdigital_utils_ui_smart_SmartComponent);
		this.schemaContainer = js_Boot.__cast(this.getChildByName(com_isartdigital_ruby_ui_popin_incubator_Incubator.SCHEMA_CONTAINER) , com_isartdigital_utils_ui_smart_SmartComponent);
		this.initSchemaList();
		this.listGeneBtn = [];
		var currentGene;
		var _g1 = 0;
		var _g = this.geneContainer.children.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(HxOverrides.substr(this.geneContainer.children[i].name,0,4) == "Gene") {
				currentGene = js_Boot.__cast(this.geneContainer.children[i] , com_isartdigital_ruby_ui_popin_incubator_GeneButton);
				currentGene.init();
				currentGene.idGene = i + 1;
				currentGene.initSup();
				this.listGeneBtn.push(currentGene);
			}
		}
		this.initInseminators();
	}
	,initSchemaButtons: function() {
		var currentGene;
		var _g1 = 0;
		var _g = this.schemaContainer.children.length;
		while(_g1 < _g) {
			var i = _g1++;
			currentGene = js_Boot.__cast(this.geneContainer.children[i] , com_isartdigital_ruby_ui_popin_incubator_GeneButton);
			currentGene.id = i + 1;
			currentGene.init();
		}
	}
	,newSchemaButton: function(pContainer,pSchema,pID,pFirstOffSet) {
		this.availableSchema.push(Type.createInstance(com_isartdigital_ruby_ui_popin_incubator_SchemaSwitchItem,[]));
		this.availableSchema[pID].x = pFirstOffSet.x + pID * this.offsetSchemaItem.x;
		this.availableSchema[pID].y = pFirstOffSet.y + pID * this.offsetSchemaItem.y;
		this.availableSchema[pID].setInfo(pSchema);
		this.availableSchema[pID].name = "IncubatorSchema" + pID;
		this.schemaContainer.addChild(this.availableSchema[pID]);
		com_isartdigital_ruby_ui_ftue_FTUEManager.register(this.availableSchema[pID]);
	}
	,initSchemaList: function() {
		this.offsetSchemaItem = new PIXI.Point(this.schemaContainer.children[0].x - this.schemaContainer.children[1].x,this.schemaContainer.children[0].y - this.schemaContainer.children[1].y);
		var lFirstItemPosition = this.schemaContainer.getChildByName("Schema #0").position;
		this.destroyAllChildInContainer(this.schemaContainer);
		var lList = com_isartdigital_utils_save_DataManager.getInstance().getUnlockedSchemas();
		var lSchema;
		var _g1 = 0;
		var _g = lList.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(i > 4) {
				break;
			}
			var key = Std.string(lList[i].idSchema);
			var _this = com_isartdigital_ruby_ui_popin_incubator_Incubator.listSchema;
			if(__map_reserved[key] != null) {
				lSchema = _this.getReserved(key);
			} else {
				lSchema = _this.h[key];
			}
			this.newSchemaButton(this.schemaContainer,lSchema,i,lFirstItemPosition);
		}
	}
	,initInseminators: function() {
		this.inseminator1 = js_Boot.__cast(this.getChildByName("Incubator #0") , com_isartdigital_ruby_ui_popin_incubator_Inseminator);
		this.inseminator2 = js_Boot.__cast(this.getChildByName("Incubator #1") , com_isartdigital_ruby_ui_popin_incubator_Inseminator);
		this.inseminator1.init();
		this.inseminator2.init();
	}
	,initializationCurrentBuildingIncubator: function(pAlienIncubator) {
		this.currentBuilding = pAlienIncubator;
		this.initAlienInIncubator();
	}
	,onClickSchema: function(pInfo) {
		if(!this.inseminator1.isBusy) {
			this.inseminator1.setInfo(pInfo);
		} else if(!this.inseminator2.isBusy) {
			this.inseminator2.setInfo(pInfo);
		} else {
			return;
		}
	}
	,checkQuantity: function(pKey) {
		var o = com_isartdigital_ruby_game_player_Player.getInstance();
		var field = "gene" + Std.string(_$UInt_UInt_$Impl_$.toFloat(pKey.gene1));
		var tmp;
		var quantity1;
		if(o == null) {
			quantity1 = null;
		} else {
			var tmp1;
			if(o.__properties__) {
				tmp = o.__properties__["get_" + field];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				quantity1 = o[tmp]();
			} else {
				quantity1 = o[field];
			}
		}
		var o1 = com_isartdigital_ruby_game_player_Player.getInstance();
		var field1 = "gene" + Std.string(_$UInt_UInt_$Impl_$.toFloat(pKey.gene2));
		var tmp2;
		var quantity2;
		if(o1 == null) {
			quantity2 = null;
		} else {
			var tmp3;
			if(o1.__properties__) {
				tmp2 = o1.__properties__["get_" + field1];
				tmp3 = tmp2;
			} else {
				tmp3 = false;
			}
			if(tmp3) {
				quantity2 = o1[tmp2]();
			} else {
				quantity2 = o1[field1];
			}
		}
		var o2 = com_isartdigital_ruby_game_player_Player.getInstance();
		var field2 = "gene" + Std.string(_$UInt_UInt_$Impl_$.toFloat(pKey.gene2));
		var tmp4;
		var quantity3;
		if(o2 == null) {
			quantity3 = null;
		} else {
			var tmp5;
			if(o2.__properties__) {
				tmp4 = o2.__properties__["get_" + field2];
				tmp5 = tmp4;
			} else {
				tmp5 = false;
			}
			if(tmp5) {
				quantity3 = o2[tmp4]();
			} else {
				quantity3 = o2[field2];
			}
		}
		if(quantity1 >= 100 && quantity2 >= 100 && quantity3 >= 100) {
			quantity1 -= 100;
			quantity2 -= 100;
			quantity3 -= 100;
			var o3 = com_isartdigital_ruby_game_player_Player.getInstance();
			var field3 = "gene" + Std.string(_$UInt_UInt_$Impl_$.toFloat(pKey.gene1));
			var tmp6;
			var tmp7;
			if(o3.__properties__) {
				tmp6 = o3.__properties__["set_" + field3];
				tmp7 = tmp6;
			} else {
				tmp7 = false;
			}
			if(tmp7) {
				o3[tmp6](quantity1);
			} else {
				o3[field3] = quantity1;
			}
			var o4 = com_isartdigital_ruby_game_player_Player.getInstance();
			var field4 = "gene" + Std.string(_$UInt_UInt_$Impl_$.toFloat(pKey.gene2));
			var tmp8;
			var tmp9;
			if(o4.__properties__) {
				tmp8 = o4.__properties__["set_" + field4];
				tmp9 = tmp8;
			} else {
				tmp9 = false;
			}
			if(tmp9) {
				o4[tmp8](quantity2);
			} else {
				o4[field4] = quantity2;
			}
			var o5 = com_isartdigital_ruby_game_player_Player.getInstance();
			var field5 = "gene" + Std.string(_$UInt_UInt_$Impl_$.toFloat(pKey.gene3));
			var tmp10;
			var tmp11;
			if(o5.__properties__) {
				tmp10 = o5.__properties__["set_" + field5];
				tmp11 = tmp10;
			} else {
				tmp11 = false;
			}
			if(tmp11) {
				o5[tmp10](quantity3);
			} else {
				o5[field5] = quantity3;
			}
			(js_Boot.__cast(this.getChildByName("txt_gene" + Std.string(_$UInt_UInt_$Impl_$.toFloat(pKey.gene1)) + "Quantity") , com_isartdigital_utils_ui_smart_TextSprite)).set_text(quantity1 == null?"null":"" + quantity1);
			(js_Boot.__cast(this.getChildByName("txt_gene" + Std.string(_$UInt_UInt_$Impl_$.toFloat(pKey.gene2)) + "Quantity") , com_isartdigital_utils_ui_smart_TextSprite)).set_text(quantity2 == null?"null":"" + quantity2);
			(js_Boot.__cast(this.getChildByName("txt_gene" + Std.string(_$UInt_UInt_$Impl_$.toFloat(pKey.gene3)) + "Quantity") , com_isartdigital_utils_ui_smart_TextSprite)).set_text(quantity3 == null?"null":"" + quantity3);
			com_isartdigital_utils_save_DataBaseAction.getInstance().updateGene();
			return true;
		}
		return false;
	}
	,createAlien: function(pInfo,pInsemitaor) {
		var lString = pInfo.tableXenos == "SpecialFeatureAliens"?"AlienForeur":pInfo.tableXenos;
		var lType = com_isartdigital_ruby_game_sprites_elements_aliens_Alien.getAlienType(pInfo.type,com_isartdigital_utils_save_DataManager.getInstance().getAlienArray(lString));
		var alienID = pInfo.type + new Date().getTime();
		var lDate = HxOverrides.strDate(lType.time);
		var lTimeStamp = com_isartdigital_ruby_utils_TimeManager.getInstance().convertInStamp(lDate.getSeconds(),lDate.getMinutes(),lDate.getHours() - 1);
		var t = new Date().getTime() + lTimeStamp;
		var lDelta = new Date(t);
		var lAlien = { idAlien : alienID, idBuilding : this.currentBuilding.instanceID, mode : "Constructing", name : pInfo.type, type : lString, nomPropre : pInfo.xenoName, stamina : 6, level : 1, startTime : HxOverrides.dateStr(new Date()), endTime : HxOverrides.dateStr(lDelta), carac : lType, idPlayer : com_isartdigital_ruby_game_player_Player.getInstance().id};
		com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList.push(lAlien);
		com_isartdigital_utils_save_DataBaseAction.getInstance().addAlien(lAlien.idAlien,lAlien.idBuilding,lAlien.type,lAlien.name,lAlien.nomPropre,lAlien.stamina,lType.time);
		pInsemitaor.setTime(lAlien.endTime,lAlien);
	}
	,initAlienInIncubator: function() {
		var counter = 0;
		var lInseminator;
		var _g = 0;
		var _g1 = com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList;
		while(_g < _g1.length) {
			var alien = _g1[_g];
			++_g;
			if(counter >= 2) {
				break;
			}
			if(alien.idBuilding == this.currentBuilding.instanceID) {
				if(counter == 0) {
					lInseminator = this.inseminator1;
				} else {
					lInseminator = this.inseminator2;
				}
				lInseminator.setAlien(alien);
				++counter;
			}
		}
	}
	,close: function() {
		com_isartdigital_ruby_ui_popin_Menu.prototype.close.call(this);
		com_isartdigital_ruby_game_world_MapInteractor.getInstance().modalPopinOpened = false;
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_popin_incubator_Incubator.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_popin_incubator_Incubator
});
var com_isartdigital_ruby_ui_popin_incubator_Inseminator = function(pID) {
	this.isBusy = false;
	this.MANAGE_BUTTON = "manageBtn";
	this.SKIP_BUTTON = "skipBtn";
	this.INSEMINATE_TIME_TEXT = "txt_timer";
	this.INSEMINATE_BUTTON = "inseminateBtn";
	this.XENO_TEXTNAME = "txt_xenoNameUpgrading";
	this.XENO_NAME = "xenoName";
	this.RESULTAT = "resultat";
	this.SPOT_CONTAINER = "spotContainer";
	com_isartdigital_utils_ui_smart_SmartComponent.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.popin.incubator.Inseminator"] = com_isartdigital_ruby_ui_popin_incubator_Inseminator;
com_isartdigital_ruby_ui_popin_incubator_Inseminator.__name__ = ["com","isartdigital","ruby","ui","popin","incubator","Inseminator"];
com_isartdigital_ruby_ui_popin_incubator_Inseminator.__super__ = com_isartdigital_utils_ui_smart_SmartComponent;
com_isartdigital_ruby_ui_popin_incubator_Inseminator.prototype = $extend(com_isartdigital_utils_ui_smart_SmartComponent.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_popin_incubator_Inseminator.list.push(this);
		this.result = js_Boot.__cast(this.getChildByName(this.RESULTAT) , com_isartdigital_utils_ui_smart_UISprite);
		this.spotContainer = js_Boot.__cast(this.getChildByName(this.SPOT_CONTAINER) , com_isartdigital_utils_ui_smart_SmartComponent);
		this.xenoName = js_Boot.__cast(this.getChildByName(this.XENO_NAME) , com_isartdigital_utils_ui_smart_SmartComponent);
		this.xenoTextName = js_Boot.__cast(this.xenoName.getChildByName(this.XENO_TEXTNAME) , com_isartdigital_utils_ui_smart_TextSprite);
		this.inseminateBtn = js_Boot.__cast(this.getChildByName(this.INSEMINATE_BUTTON) , com_isartdigital_ruby_ui_popin_incubator_TimerIncubator);
		this.inseminateTimeText = js_Boot.__cast(this.inseminateBtn.getChildByName(this.INSEMINATE_TIME_TEXT) , com_isartdigital_utils_ui_smart_TextSprite);
		this.skipBtn = js_Boot.__cast(this.getChildByName(this.SKIP_BUTTON) , com_isartdigital_utils_ui_smart_SmartButton);
		this.manageBtn = js_Boot.__cast(this.getChildByName(this.MANAGE_BUTTON) , com_isartdigital_utils_ui_smart_SmartButton);
		this.stockGeneSpot();
		if(!this.isBusy) {
			this.manageBtn.visible = false;
			this.skipBtn.visible = false;
			this.inseminateTimeText.textField.text = "";
			this.xenoTextName.set_text("");
			this.inseminateBtn.on("click",$bind(this,this.onInseminate));
			this.inseminateBtn.on("tap",$bind(this,this.onInseminate));
		}
	}
	,stockGeneSpot: function() {
		this.listGenoSpot = [];
		var _g1 = 0;
		var _g = this.spotContainer.children.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.listGenoSpot.push(js_Boot.__cast(this.spotContainer.children[i] , com_isartdigital_ruby_ui_popin_incubator_GeneSpot));
			this.listGenoSpot[i].inseminator = this;
		}
	}
	,isGenesFilled: function() {
		var _g = 0;
		var _g1 = this.listGenoSpot;
		while(_g < _g1.length) {
			var spot = _g1[_g];
			++_g;
			if(!spot.isSelected) {
				return false;
			}
		}
		return true;
	}
	,lockGeneSpot: function() {
		var _g = 0;
		var _g1 = this.listGenoSpot;
		while(_g < _g1.length) {
			var spot = _g1[_g];
			++_g;
			spot.visible = false;
		}
	}
	,onInseminate: function() {
		if(!this.isGenesFilled()) {
			return;
		}
		this.lockGeneSpot();
		this.isBusy = true;
		this.updatePlayerGene();
		com_isartdigital_ruby_ui_popin_incubator_Incubator.getInstance().createAlien(this.geneInfo,this);
	}
	,updatePlayerGene: function() {
		var lGene;
		var _g = 0;
		var _g1 = this.listGenoSpot;
		while(_g < _g1.length) {
			var gene = _g1[_g];
			++_g;
			var o = com_isartdigital_ruby_game_player_Player.getInstance();
			var field = "gene" + gene.geneId;
			var tmp;
			var tmp1;
			if(o == null) {
				tmp1 = null;
			} else {
				var tmp2;
				if(o.__properties__) {
					tmp = o.__properties__["get_" + field];
					tmp2 = tmp;
				} else {
					tmp2 = false;
				}
				if(tmp2) {
					tmp1 = o[tmp]();
				} else {
					tmp1 = o[field];
				}
			}
			lGene = (tmp1 | 0) - gene.geneQuant;
			var o1 = com_isartdigital_ruby_game_player_Player.getInstance();
			var field1 = "gene" + gene.geneId;
			var tmp3;
			var tmp4;
			if(o1.__properties__) {
				tmp3 = o1.__properties__["set_" + field1];
				tmp4 = tmp3;
			} else {
				tmp4 = false;
			}
			if(tmp4) {
				o1[tmp3](lGene);
			} else {
				o1[field1] = lGene;
			}
		}
		com_isartdigital_utils_save_DataBaseAction.getInstance().updateGene();
		var _g2 = 0;
		var _g11 = com_isartdigital_ruby_ui_popin_incubator_Incubator.getInstance().listGeneBtn;
		while(_g2 < _g11.length) {
			var geneBtn = _g11[_g2];
			++_g2;
			geneBtn.updateQuantityGene();
		}
	}
	,setInfo: function(pInfo) {
		this.geneInfo = pInfo;
		this.listGenoSpot[0].setInfoGene(pInfo.gene1,pInfo.gene1quant);
		this.listGenoSpot[1].setInfoGene(pInfo.gene2,pInfo.gene2quant);
		this.listGenoSpot[2].setInfoGene(pInfo.gene3,pInfo.gene3quant);
		this.xenoTextName.set_text(pInfo.xenoName);
		if(this.xenoSprite != null) {
			this.result.removeChild(this.xenoSprite);
		}
		this.xenoSprite = new com_isartdigital_utils_ui_smart_UISprite("XenoPage_" + pInfo.type + (pInfo.tableXenos == "SpecialFeatureAliens"?"":"_1"));
		this.result.addChild(this.xenoSprite);
	}
	,isSkiped: function() {
		this.endTime = null;
		this.alien.endTime = HxOverrides.dateStr(new Date());
		com_isartdigital_utils_save_DataBaseAction.getInstance().releaseAlienMode(this.alien.idAlien,"Wait",new Date());
	}
	,isTransfered: function() {
		this.result.removeChild(this.xenoSprite);
		this.xenoTextName.set_text("");
		this.endTime = null;
		var _g = 0;
		var _g1 = this.listGenoSpot;
		while(_g < _g1.length) {
			var gene = _g1[_g];
			++_g;
			gene.unsetInfoGene();
			gene.visible = true;
		}
		this.isBusy = false;
		haxe_Log.trace(this.alien,{ fileName : "Inseminator.hx", lineNumber : 155, className : "com.isartdigital.ruby.ui.popin.incubator.Inseminator", methodName : "isTransfered"});
		this.alien.idBuilding = "";
		this.alien.endTime = HxOverrides.dateStr(new Date());
		this.inseminateBtn.on("click",$bind(this,this.onInseminate));
		this.inseminateBtn.on("tap",$bind(this,this.onInseminate));
	}
	,setAlien: function(pAlien) {
		this.isBusy = true;
		this.alien = pAlien;
		this.lockGeneSpot();
		this.xenoTextName.textField.text = pAlien.nomPropre;
		haxe_Log.trace(pAlien,{ fileName : "Inseminator.hx", lineNumber : 168, className : "com.isartdigital.ruby.ui.popin.incubator.Inseminator", methodName : "setAlien"});
		this.xenoSprite = new com_isartdigital_utils_ui_smart_UISprite("XenoPage_" + pAlien.name + (pAlien.type == "AlienForeur"?"":"_1"));
		this.result.addChild(this.xenoSprite);
		if(HxOverrides.strDate(pAlien.endTime).getTime() < new Date().getTime()) {
			this.inseminateBtn.visible = false;
			this.manageBtn.visible = true;
		} else {
			this.setTime(pAlien.endTime,pAlien);
		}
	}
	,setTime: function(pTime,pAlien) {
		this.alien = pAlien;
		this.endTime = pTime;
		this.inseminateBtn.off("click",$bind(this,this.onInseminate));
		this.inseminateBtn.off("tap",$bind(this,this.onInseminate));
		this.inseminateBtn.currentText = com_isartdigital_ruby_utils_TimeManager.getInstance().getTimeToFinishBuildingStringFormat(HxOverrides.strDate(pTime));
		this.inseminateBtn.initText(this);
	}
	,doAction: function() {
		if(this.endTime == null || this.inseminateTimeText == null) {
			return;
		}
		this.inseminateBtn.currentText = com_isartdigital_ruby_utils_TimeManager.getInstance().getTimeToFinishBuildingStringFormat(HxOverrides.strDate(this.endTime));
		this.inseminateBtn.updateText();
	}
	,destroy: function() {
		HxOverrides.remove(com_isartdigital_ruby_ui_popin_incubator_Inseminator.list,this);
		com_isartdigital_utils_ui_smart_SmartComponent.prototype.destroy.call(this);
		this.inseminateBtn.off("click",$bind(this,this.onInseminate));
		this.inseminateBtn.off("tap",$bind(this,this.onInseminate));
	}
	,__class__: com_isartdigital_ruby_ui_popin_incubator_Inseminator
});
var com_isartdigital_ruby_ui_popin_incubator_SchemaSwitchItem = function(pID) {
	com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.popin.incubator.SchemaSwitchItem"] = com_isartdigital_ruby_ui_popin_incubator_SchemaSwitchItem;
com_isartdigital_ruby_ui_popin_incubator_SchemaSwitchItem.__name__ = ["com","isartdigital","ruby","ui","popin","incubator","SchemaSwitchItem"];
com_isartdigital_ruby_ui_popin_incubator_SchemaSwitchItem.__super__ = com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem;
com_isartdigital_ruby_ui_popin_incubator_SchemaSwitchItem.prototype = $extend(com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.init.call(this);
	}
	,setInfo: function(pParams) {
		this.schemaInfo = pParams;
		this.setNormal();
	}
	,updateInfo: function() {
		if(this.schemaInfo == null) {
			return;
		}
		this.nameText.set_text(this.schemaInfo.type);
	}
	,setNormal: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setNormal.call(this);
		this.updateTextChild();
		this.updateInfo();
	}
	,setDisabled: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setDisabled.call(this);
		this.updateTextChild();
		this.updateInfo();
	}
	,setSelected: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.setNormal.call(this);
		com_isartdigital_ruby_ui_popin_incubator_Incubator.getInstance().onClickSchema(this.schemaInfo);
		this.updateTextChild();
		this.updateInfo();
	}
	,onOver: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.onOver.call(this);
		this.updateTextChild();
		this.updateInfo();
	}
	,onOut: function() {
		com_isartdigital_ruby_ui_items_switchItems_SwitchGroupItem.prototype.onOut.call(this);
		this.updateTextChild();
		this.updateInfo();
	}
	,updateTextChild: function() {
		this.nameText = js_Boot.__cast(this.currentState.getChildByName(com_isartdigital_ruby_ui_popin_incubator_SchemaSwitchItem.NAME) , com_isartdigital_utils_ui_smart_TextSprite);
	}
	,__class__: com_isartdigital_ruby_ui_popin_incubator_SchemaSwitchItem
});
var com_isartdigital_utils_ui_smart_SmartButton = function(pID) {
	com_isartdigital_utils_ui_smart_SmartComponent.call(this,pID);
	this.set_modal(false);
	this.interactive = true;
	this.buttonMode = true;
	this.on("mouseover",$bind(this,this._mouseOver));
	this.on("mousedown",$bind(this,this._mouseDown));
	this.on("click",$bind(this,this._click));
	this.on("mouseout",$bind(this,this._mouseOut));
	this.on("mouseupoutside",$bind(this,this._mouseOut));
	this.on("touchstart",$bind(this,this._mouseDown));
	this.on("tap",$bind(this,this._click));
	this.on("touchend",$bind(this,this._mouseOut));
	this.on("touchendoutside",$bind(this,this._mouseOut));
};
$hxClasses["com.isartdigital.utils.ui.smart.SmartButton"] = com_isartdigital_utils_ui_smart_SmartButton;
com_isartdigital_utils_ui_smart_SmartButton.__name__ = ["com","isartdigital","utils","ui","smart","SmartButton"];
com_isartdigital_utils_ui_smart_SmartButton.__super__ = com_isartdigital_utils_ui_smart_SmartComponent;
com_isartdigital_utils_ui_smart_SmartButton.prototype = $extend(com_isartdigital_utils_ui_smart_SmartComponent.prototype,{
	registerClick: function(pCallBack) {
		this.on("click",pCallBack);
		this.on("tap",pCallBack);
	}
	,unregisterClick: function(pCallBack) {
		this.off("click",pCallBack);
		this.off("tap",pCallBack);
	}
	,build: function(pFrame) {
		if(pFrame == null) {
			pFrame = 0;
		}
		com_isartdigital_utils_ui_smart_SmartComponent.prototype.build.call(this,3);
		this.hitArea = this.getBounds().clone();
		this._mouseOut();
	}
	,overBuild: function(pFrame) {
		this.clear();
		com_isartdigital_utils_ui_smart_SmartComponent.prototype.build.call(this,pFrame);
	}
	,clear: function() {
		while(this.children.length > 0) this.removeChildAt(0);
	}
	,_click: function(pEvent) {
		this._mouseOut();
	}
	,_mouseDown: function(pEvent) {
		this.clear();
		com_isartdigital_utils_ui_smart_SmartComponent.prototype.build.call(this,2);
	}
	,_mouseOver: function(pEvent) {
		this.clear();
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerClic").play();
		com_isartdigital_utils_ui_smart_SmartComponent.prototype.build.call(this,1);
	}
	,_mouseOut: function(pEvent) {
		this.clear();
		com_isartdigital_utils_ui_smart_SmartComponent.prototype.build.call(this);
	}
	,destroy: function() {
		this.off("mouseover",$bind(this,this._mouseOver));
		this.off("mousedown",$bind(this,this._mouseDown));
		this.off("click",$bind(this,this._click));
		this.off("mouseout",$bind(this,this._mouseOut));
		this.off("mouseupoutside",$bind(this,this._mouseOut));
		this.off("touchstart",$bind(this,this._mouseDown));
		this.off("tap",$bind(this,this._click));
		this.off("touchend",$bind(this,this._mouseOut));
		this.off("touchendoutside",$bind(this,this._mouseOut));
		com_isartdigital_utils_ui_smart_SmartComponent.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_utils_ui_smart_SmartButton
});
var com_isartdigital_ruby_ui_popin_incubator_TimerIncubator = function(pID) {
	this.hardToSkipTimer = 3;
	this.INSEMINATE_TEXT = "txt_inseminate";
	this.INSEMINATE_TIME_TEXT = "txt_timer";
	com_isartdigital_utils_ui_smart_SmartButton.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.popin.incubator.TimerIncubator"] = com_isartdigital_ruby_ui_popin_incubator_TimerIncubator;
com_isartdigital_ruby_ui_popin_incubator_TimerIncubator.__name__ = ["com","isartdigital","ruby","ui","popin","incubator","TimerIncubator"];
com_isartdigital_ruby_ui_popin_incubator_TimerIncubator.__super__ = com_isartdigital_utils_ui_smart_SmartButton;
com_isartdigital_ruby_ui_popin_incubator_TimerIncubator.prototype = $extend(com_isartdigital_utils_ui_smart_SmartButton.prototype,{
	initText: function(pIns) {
		this.inseminator = pIns;
		this.currentName = "Passer";
		this.on("click",$bind(this,this.onSkip));
		this.on("tap",$bind(this,this.onSkip));
		this.updateText();
	}
	,_mouseOver: function(pEvent) {
		com_isartdigital_utils_ui_smart_SmartButton.prototype._mouseOver.call(this,pEvent);
		this.updateText();
	}
	,_mouseDown: function(pEvent) {
		com_isartdigital_utils_ui_smart_SmartButton.prototype._mouseDown.call(this,pEvent);
		this.updateText();
	}
	,_mouseOut: function(pEvent) {
		com_isartdigital_utils_ui_smart_SmartButton.prototype._mouseOut.call(this,pEvent);
		this.updateText();
	}
	,updateText: function() {
		this.inseminateTimeText = js_Boot.__cast(this.getChildByName(this.INSEMINATE_TIME_TEXT) , com_isartdigital_utils_ui_smart_TextSprite);
		this.inseminateText = js_Boot.__cast(this.getChildByName(this.INSEMINATE_TEXT) , com_isartdigital_utils_ui_smart_TextSprite);
		if(this.currentText != null) {
			this.inseminateTimeText.textField.text = this.currentText;
		} else {
			this.inseminateTimeText.textField.text = "";
		}
		this.inseminateText.textField.text = this.currentName == null?"Inseminate":this.currentName;
	}
	,_click: function(pEvent) {
		com_isartdigital_utils_ui_smart_SmartButton.prototype._click.call(this,pEvent);
		this.updateText();
	}
	,onSkip: function() {
		com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerSkiptime").play();
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_DynamicPopin.getInstance());
		if(!com_isartdigital_ruby_ui_ftue_FTUEManager.isFTUEon()) {
			com_isartdigital_ruby_ui_popin_DynamicPopin.getInstance().init("Accélerer le temps en dépensant " + this.hardToSkipTimer + " cristaux ?",$bind(this,this.onSkiped));
		} else {
			com_isartdigital_ruby_ui_popin_DynamicPopin.getInstance().init("Gratuit pour cette fois",$bind(this,this.onSkiped));
		}
	}
	,onSkiped: function() {
		if(com_isartdigital_ruby_game_player_Player.getInstance().hasEnoughQuantity(this.hardToSkipTimer,com_isartdigital_ruby_game_player_Player.getInstance().hardCurrency)) {
			this.currentName = "Transferer";
			this.currentText = "Terminer";
			this.updateText();
			this.off("click",$bind(this,this.onSkip));
			this.off("tap",$bind(this,this.onSkip));
			if(!com_isartdigital_ruby_ui_ftue_FTUEManager.isFTUEon()) {
				com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(-this.hardToSkipTimer,"hardCurrency");
			}
			this.on("click",$bind(this,this.onTransfert));
			this.on("tap",$bind(this,this.onTransfert));
			this.inseminator.isSkiped();
		} else {
			com_isartdigital_ruby_ui_hud_Hud.getInstance().noHCAnimation();
		}
	}
	,onTransfert: function() {
		this.currentName = "Inseminate";
		this.currentText = "Terminer";
		this.updateText();
		this.inseminator.isTransfered();
		this.off("click",$bind(this,this.onTransfert));
		this.off("tap",$bind(this,this.onTransfert));
	}
	,destroy: function() {
		com_isartdigital_utils_ui_smart_SmartButton.prototype.destroy.call(this);
		this.off("click",$bind(this,this.onSkip));
		this.off("tap",$bind(this,this.onSkip));
	}
	,__class__: com_isartdigital_ruby_ui_popin_incubator_TimerIncubator
});
var com_isartdigital_ruby_ui_popin_shop_Shop = function(pID) {
	com_isartdigital_ruby_ui_popin_Menu.call(this,pID);
	this.set_modal(true);
};
$hxClasses["com.isartdigital.ruby.ui.popin.shop.Shop"] = com_isartdigital_ruby_ui_popin_shop_Shop;
com_isartdigital_ruby_ui_popin_shop_Shop.__name__ = ["com","isartdigital","ruby","ui","popin","shop","Shop"];
com_isartdigital_ruby_ui_popin_shop_Shop.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_shop_Shop.instance == null) {
		com_isartdigital_ruby_ui_popin_shop_Shop.instance = new com_isartdigital_ruby_ui_popin_shop_Shop();
	}
	return com_isartdigital_ruby_ui_popin_shop_Shop.instance;
};
com_isartdigital_ruby_ui_popin_shop_Shop.__super__ = com_isartdigital_ruby_ui_popin_Menu;
com_isartdigital_ruby_ui_popin_shop_Shop.prototype = $extend(com_isartdigital_ruby_ui_popin_Menu.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_popin_Menu.prototype.init.call(this);
		this.shopTitles = ["Pack","Pieces d'or","Genes","Pack Genes","Cristaux"];
		this.shopAssetTitles = ["Pack","SC","Genes","Pack Genes","HC"];
		this.title = js_Boot.__cast(this.getChildByName("txt_tabTitle") , com_isartdigital_utils_ui_smart_TextSprite);
		this.initTab(com_isartdigital_ruby_ui_items_switchItems_ShopSwitchTab);
		this.initItems();
	}
	,initItems: function() {
		this.itemContainer = js_Boot.__cast(this.getChildByName(this.ITEM_CONTAINER) , com_isartdigital_utils_ui_smart_SmartComponent);
		this.initPositionItem();
		this.updateItems();
	}
	,initPositionItem: function() {
		this.itemPositions = [];
		var _g1 = 0;
		var _g = this.itemContainer.children.length;
		while(_g1 < _g) this.itemPositions.push(this.itemContainer.getChildByName(this.ITEM + " #" + _g1++).position.clone());
	}
	,updateItems: function() {
		this.title.set_text(this.shopTitles[this.currentIndex]);
		this.destroyAllChildInContainer(this.itemContainer);
		var currentItem;
		var _g1 = 0;
		var _g = this.itemPositions.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(i >= com_isartdigital_ruby_ui_popin_shop_datas_ShopData.getInstance().datas[this.currentIndex].length) {
				return;
			}
			var currentItemInfo = com_isartdigital_ruby_ui_popin_shop_datas_ShopData.getInstance().datas[this.currentIndex][i];
			currentItem = new com_isartdigital_ruby_ui_popin_shop_ShopItemMedium();
			this.itemContainer.addChild(currentItem);
			currentItem.position = this.itemPositions[i].clone();
			currentItem.setInfo(currentItemInfo);
		}
	}
	,onTabSelected: function(pId) {
		com_isartdigital_ruby_ui_popin_Menu.prototype.onTabSelected.call(this,pId);
		this.updateItems();
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_popin_shop_Shop.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_popin_shop_Shop
});
var com_isartdigital_ruby_ui_popin_shop_ShopItem = function(pID) {
	com_isartdigital_ruby_ui_items_Item.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.popin.shop.ShopItem"] = com_isartdigital_ruby_ui_popin_shop_ShopItem;
com_isartdigital_ruby_ui_popin_shop_ShopItem.__name__ = ["com","isartdigital","ruby","ui","popin","shop","ShopItem"];
com_isartdigital_ruby_ui_popin_shop_ShopItem.round = function(number,precision) {
	if(precision == null) {
		precision = 2;
	}
	number *= Math.pow(10,precision);
	return Math.round(number) / Math.pow(10,precision);
};
com_isartdigital_ruby_ui_popin_shop_ShopItem.__super__ = com_isartdigital_ruby_ui_items_Item;
com_isartdigital_ruby_ui_popin_shop_ShopItem.prototype = $extend(com_isartdigital_ruby_ui_items_Item.prototype,{
	setInfo: function(pShopItemParams) {
		this.itemName = js_Boot.__cast(this.getChildByName("txt_itemName") , com_isartdigital_utils_ui_smart_TextSprite);
		this.itemName.set_text(pShopItemParams.name);
		this.promo = pShopItemParams.promo;
		this.promoCmp = js_Boot.__cast(this.getChildByName("promo") , com_isartdigital_utils_ui_smart_SmartComponent);
		(js_Boot.__cast(this.getChildByName("spriteItemAsset") , com_isartdigital_utils_ui_smart_UISprite)).visible = false;
		this.assetsItem = new com_isartdigital_utils_ui_smart_UISprite("Shop_spriteItemAsset_" + StringTools.replace(com_isartdigital_ruby_ui_popin_shop_Shop.getInstance().shopAssetTitles[com_isartdigital_ruby_ui_popin_shop_Shop.getInstance().currentIndex]," ","_") + "_" + StringTools.replace(pShopItemParams.name," ","_"));
		this.assetsItem.position = (js_Boot.__cast(this.getChildByName("spriteItemAsset") , com_isartdigital_utils_ui_smart_UISprite)).position;
		this.addChild(this.assetsItem);
		if(this.promoCmp.getChildByName("txt_promo") != null) {
			this.textPromo = js_Boot.__cast(this.promoCmp.getChildByName("txt_promo") , com_isartdigital_utils_ui_smart_TextSprite);
			this.textPromo.set_text(this.promo + " %\nFREE");
		}
		if(this.promo == 0) {
			this.promoCmp.visible = false;
		}
		this.price = com_isartdigital_ruby_ui_popin_shop_ShopItem.round(pShopItemParams.price - pShopItemParams.price * this.promo / 100,2);
		this.textPrice = js_Boot.__cast(this.getChildByName("txt_price") , com_isartdigital_utils_ui_smart_TextSprite);
		this.textPrice.set_text(this.price + "");
		this.gains = pShopItemParams.gains;
		this.money = pShopItemParams.typeMoney;
		switch(Std.string(this.money) + "") {
		case "Money.HardCurrency":
			(js_Boot.__cast(this.getChildByName("spriteCurrencie") , com_isartdigital_utils_ui_smart_UISprite)).visible = false;
			this.assetsItem = new com_isartdigital_utils_ui_smart_UISprite("Shop_spriteCurrencie_" + "HC");
			this.assetsItem.position = (js_Boot.__cast(this.getChildByName("spriteCurrencie") , com_isartdigital_utils_ui_smart_UISprite)).position;
			this.addChild(this.assetsItem);
			break;
		case "Money.IsartPoint":
			(js_Boot.__cast(this.getChildByName("spriteCurrencie") , com_isartdigital_utils_ui_smart_UISprite)).visible = false;
			this.assetsItem = new com_isartdigital_utils_ui_smart_UISprite("Shop_spriteCurrencie_" + "IsartPoint");
			this.assetsItem.position = (js_Boot.__cast(this.getChildByName("spriteCurrencie") , com_isartdigital_utils_ui_smart_UISprite)).position;
			this.addChild(this.assetsItem);
			break;
		}
		this.interactive = true;
		this.name = this.itemName.get_text();
		com_isartdigital_ruby_ui_ftue_FTUEManager.register(this);
	}
	,Buy: function() {
		this.checkMoneyAndDecreasePrice();
	}
	,checkMoneyAndDecreasePrice: function() {
		switch(Std.string(this.money) + "") {
		case "Money.HardCurrency":
			if(!com_isartdigital_ruby_ui_ftue_FTUEManager.isFTUEon()) {
				var tmp = this.price | 0;
				com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(-tmp,"hardCurrency");
			}
			this.giveAllTheGainsToPlayer();
			break;
		case "Money.IsartPoint":
			com_isartdigital_services_monetization_Wallet.getMoney(com_isartdigital_ruby_game_player_Player.getInstance().email,$bind(this,this.callBackWallet));
			return;
		case "Money.SoftCurrency":
			var tmp1 = this.price | 0;
			com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(-tmp1,"softCurrency");
			this.giveAllTheGainsToPlayer();
			break;
		}
	}
	,callBackWallet: function(pData) {
		if(pData == null) {
			haxe_Log.trace("Erreur Service",{ fileName : "ShopItem.hx", lineNumber : 154, className : "com.isartdigital.ruby.ui.popin.shop.ShopItem", methodName : "callBackWallet"});
		} else if(pData.error != null) {
			haxe_Log.trace(pData.error,{ fileName : "ShopItem.hx", lineNumber : 156, className : "com.isartdigital.ruby.ui.popin.shop.ShopItem", methodName : "callBackWallet"});
		} else {
			com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_DynamicPopin.getInstance());
			com_isartdigital_ruby_ui_popin_DynamicPopin.getInstance().init("Voulez-vous acheter cet objet pour " + this.price + " IsartPoints ? Il vous reste actuellement : " + Std.string(Reflect.field(pData,"money")),$bind(this,this.checkWalletPlayer));
		}
	}
	,checkWalletPlayer: function() {
		if(com_isartdigital_ruby_game_player_Player.getInstance().currentIsartPoint >= this.price) {
			com_isartdigital_services_monetization_Wallet.buy(com_isartdigital_ruby_game_player_Player.getInstance().email,this.price,$bind(this,this.callBackBuy));
			com_isartdigital_ruby_game_player_Player.getInstance().currentIsartPoint -= this.price;
		} else {
			com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_DynamicPopin.getInstance());
			com_isartdigital_ruby_ui_popin_DynamicPopin.getInstance().init("Désolé, vous n'avez plus assez d'IsartPoints :(",null);
		}
	}
	,callBackBuy: function(pData) {
		if(pData == null) {
			haxe_Log.trace("Erreur Service",{ fileName : "ShopItem.hx", lineNumber : 184, className : "com.isartdigital.ruby.ui.popin.shop.ShopItem", methodName : "callBackBuy"});
		} else if(pData.error != null) {
			haxe_Log.trace(pData.error,{ fileName : "ShopItem.hx", lineNumber : 186, className : "com.isartdigital.ruby.ui.popin.shop.ShopItem", methodName : "callBackBuy"});
		} else {
			this.giveAllTheGainsToPlayer();
		}
	}
	,giveAllTheGainsToPlayer: function() {
		var _g = 0;
		var _g1 = this.gains;
		while(_g < _g1.length) {
			var gain = _g1[_g];
			++_g;
			switch(Std.string(gain.type) + "") {
			case "Gain.DarkMatter":
				com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerBuyBundle").play();
				var tmp = gain.quantity | 0;
				com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(tmp,"ressource");
				break;
			case "Gain.GeneBeta":
				com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayBuyGenepack").play();
				var tmp1 = gain.quantity | 0;
				com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(tmp1,"gene1");
				break;
			case "Gain.GeneIota":
				com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayBuyGenepack").play();
				var tmp2 = gain.quantity | 0;
				com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(tmp2,"gene2");
				break;
			case "Gain.GeneMultiple":
				com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayBuyGenepack").play();
				var _g2 = 0;
				while(_g2 < 6) {
					var i = _g2++;
					com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(gain.quantity | 0,"gene" + i);
				}
				break;
			case "Gain.GeneRho":
				com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayBuyGenepack").play();
				var tmp3 = gain.quantity | 0;
				com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(tmp3,"gene2");
				break;
			case "Gain.GeneSigma":
				com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayBuyGenepack").play();
				var tmp4 = gain.quantity | 0;
				com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(tmp4,"gene3");
				break;
			case "Gain.GeneUpsilon":
				com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayBuyGenepack").play();
				var tmp5 = gain.quantity | 0;
				com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(tmp5,"gene4");
				break;
			case "Gain.HardCurrency":
				com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerBuyHcpack").play();
				var tmp6 = gain.quantity | 0;
				com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(tmp6,"hardCurrency");
				break;
			case "Gain.SoftCurrency":
				com_isartdigital_utils_sounds_SoundManager.getSound("soundPlayerBuyScpack").play();
				var tmp7 = gain.quantity | 0;
				com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(tmp7,"softCurrency");
				break;
			default:
				haxe_Log.trace("pas encore géré",{ fileName : "ShopItem.hx", lineNumber : 233, className : "com.isartdigital.ruby.ui.popin.shop.ShopItem", methodName : "giveAllTheGainsToPlayer"});
			}
		}
		com_isartdigital_ruby_ui_hud_Hud.getInstance().update();
	}
	,monClick: function() {
		this.Buy();
	}
	,destroy: function() {
		this.off("click",$bind(this,this.Buy));
		if(this.parent != null) {
			this.parent.removeChild(this);
		}
		com_isartdigital_ruby_ui_items_Item.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_ruby_ui_popin_shop_ShopItem
});
var com_isartdigital_ruby_ui_popin_shop_ShopItemBig = function(pID) {
	com_isartdigital_ruby_ui_popin_shop_ShopItem.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.popin.shop.ShopItemBig"] = com_isartdigital_ruby_ui_popin_shop_ShopItemBig;
com_isartdigital_ruby_ui_popin_shop_ShopItemBig.__name__ = ["com","isartdigital","ruby","ui","popin","shop","ShopItemBig"];
com_isartdigital_ruby_ui_popin_shop_ShopItemBig.__super__ = com_isartdigital_ruby_ui_popin_shop_ShopItem;
com_isartdigital_ruby_ui_popin_shop_ShopItemBig.prototype = $extend(com_isartdigital_ruby_ui_popin_shop_ShopItem.prototype,{
	__class__: com_isartdigital_ruby_ui_popin_shop_ShopItemBig
});
var com_isartdigital_ruby_ui_popin_shop_ShopItemMedium = function(pID) {
	com_isartdigital_ruby_ui_popin_shop_ShopItem.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.popin.shop.ShopItemMedium"] = com_isartdigital_ruby_ui_popin_shop_ShopItemMedium;
com_isartdigital_ruby_ui_popin_shop_ShopItemMedium.__name__ = ["com","isartdigital","ruby","ui","popin","shop","ShopItemMedium"];
com_isartdigital_ruby_ui_popin_shop_ShopItemMedium.__super__ = com_isartdigital_ruby_ui_popin_shop_ShopItem;
com_isartdigital_ruby_ui_popin_shop_ShopItemMedium.prototype = $extend(com_isartdigital_ruby_ui_popin_shop_ShopItem.prototype,{
	__class__: com_isartdigital_ruby_ui_popin_shop_ShopItemMedium
});
var com_isartdigital_ruby_ui_popin_shop_datas_Gain = { __ename__ : true, __constructs__ : ["SoftCurrency","HardCurrency","GeneBeta","GeneIota","GeneRho","GeneSigma","GeneUpsilon","DarkMatter","BluePrint"] };
com_isartdigital_ruby_ui_popin_shop_datas_Gain.SoftCurrency = ["SoftCurrency",0];
com_isartdigital_ruby_ui_popin_shop_datas_Gain.SoftCurrency.__enum__ = com_isartdigital_ruby_ui_popin_shop_datas_Gain;
com_isartdigital_ruby_ui_popin_shop_datas_Gain.HardCurrency = ["HardCurrency",1];
com_isartdigital_ruby_ui_popin_shop_datas_Gain.HardCurrency.__enum__ = com_isartdigital_ruby_ui_popin_shop_datas_Gain;
com_isartdigital_ruby_ui_popin_shop_datas_Gain.GeneBeta = ["GeneBeta",2];
com_isartdigital_ruby_ui_popin_shop_datas_Gain.GeneBeta.__enum__ = com_isartdigital_ruby_ui_popin_shop_datas_Gain;
com_isartdigital_ruby_ui_popin_shop_datas_Gain.GeneIota = ["GeneIota",3];
com_isartdigital_ruby_ui_popin_shop_datas_Gain.GeneIota.__enum__ = com_isartdigital_ruby_ui_popin_shop_datas_Gain;
com_isartdigital_ruby_ui_popin_shop_datas_Gain.GeneRho = ["GeneRho",4];
com_isartdigital_ruby_ui_popin_shop_datas_Gain.GeneRho.__enum__ = com_isartdigital_ruby_ui_popin_shop_datas_Gain;
com_isartdigital_ruby_ui_popin_shop_datas_Gain.GeneSigma = ["GeneSigma",5];
com_isartdigital_ruby_ui_popin_shop_datas_Gain.GeneSigma.__enum__ = com_isartdigital_ruby_ui_popin_shop_datas_Gain;
com_isartdigital_ruby_ui_popin_shop_datas_Gain.GeneUpsilon = ["GeneUpsilon",6];
com_isartdigital_ruby_ui_popin_shop_datas_Gain.GeneUpsilon.__enum__ = com_isartdigital_ruby_ui_popin_shop_datas_Gain;
com_isartdigital_ruby_ui_popin_shop_datas_Gain.DarkMatter = ["DarkMatter",7];
com_isartdigital_ruby_ui_popin_shop_datas_Gain.DarkMatter.__enum__ = com_isartdigital_ruby_ui_popin_shop_datas_Gain;
com_isartdigital_ruby_ui_popin_shop_datas_Gain.BluePrint = ["BluePrint",8];
com_isartdigital_ruby_ui_popin_shop_datas_Gain.BluePrint.__enum__ = com_isartdigital_ruby_ui_popin_shop_datas_Gain;
var com_isartdigital_ruby_ui_popin_shop_datas_ShopData = function() {
};
$hxClasses["com.isartdigital.ruby.ui.popin.shop.datas.ShopData"] = com_isartdigital_ruby_ui_popin_shop_datas_ShopData;
com_isartdigital_ruby_ui_popin_shop_datas_ShopData.__name__ = ["com","isartdigital","ruby","ui","popin","shop","datas","ShopData"];
com_isartdigital_ruby_ui_popin_shop_datas_ShopData.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_shop_datas_ShopData.instance == null) {
		com_isartdigital_ruby_ui_popin_shop_datas_ShopData.instance = new com_isartdigital_ruby_ui_popin_shop_datas_ShopData();
	}
	return com_isartdigital_ruby_ui_popin_shop_datas_ShopData.instance;
};
com_isartdigital_ruby_ui_popin_shop_datas_ShopData.prototype = {
	init: function(pShopData) {
		this.datas = pShopData;
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_popin_shop_datas_ShopData.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_popin_shop_datas_ShopData
};
var com_isartdigital_ruby_ui_popin_shop_datas_Money = { __ename__ : true, __constructs__ : ["SoftCurrency","HardCurrency","IsartPoint"] };
com_isartdigital_ruby_ui_popin_shop_datas_Money.SoftCurrency = ["SoftCurrency",0];
com_isartdigital_ruby_ui_popin_shop_datas_Money.SoftCurrency.__enum__ = com_isartdigital_ruby_ui_popin_shop_datas_Money;
com_isartdigital_ruby_ui_popin_shop_datas_Money.HardCurrency = ["HardCurrency",1];
com_isartdigital_ruby_ui_popin_shop_datas_Money.HardCurrency.__enum__ = com_isartdigital_ruby_ui_popin_shop_datas_Money;
com_isartdigital_ruby_ui_popin_shop_datas_Money.IsartPoint = ["IsartPoint",2];
com_isartdigital_ruby_ui_popin_shop_datas_Money.IsartPoint.__enum__ = com_isartdigital_ruby_ui_popin_shop_datas_Money;
var com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter = function(pID) {
	this.schemaInDecryptMode = [];
	com_isartdigital_ruby_ui_popin_MenuClosable.call(this,pID);
	this.init();
};
$hxClasses["com.isartdigital.ruby.ui.popin.translationCenter.TranslationCenter"] = com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter;
com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.__name__ = ["com","isartdigital","ruby","ui","popin","translationCenter","TranslationCenter"];
com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.instance == null) {
		com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.instance = new com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter();
	}
	return com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.instance;
};
com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.__super__ = com_isartdigital_ruby_ui_popin_MenuClosable;
com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.prototype = $extend(com_isartdigital_ruby_ui_popin_MenuClosable.prototype,{
	init: function() {
		com_isartdigital_ruby_ui_popin_MenuClosable.prototype.init.call(this);
		this.txtTitle = js_Boot.__cast(this.getChildByName("TranslationCenter_txt_TranslationCenter") , com_isartdigital_utils_ui_smart_TextSprite);
		this.parchemin = js_Boot.__cast(this.getChildByName("TranslationCenter_clipSwitchParchment") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.txtParcheminCount = js_Boot.__cast(this.parchemin.getChildByName("TranslationCenter_txt_parchmentCount") , com_isartdigital_utils_ui_smart_TextSprite);
		this.txtParcheminName = js_Boot.__cast(this.parchemin.getChildByName("TranslationCenter_txt_ParchmentName") , com_isartdigital_utils_ui_smart_TextSprite);
		this.btnSkipTimer = js_Boot.__cast(this.getChildByName("TranslationCenter_btn_SkipTime") , com_isartdigital_utils_ui_smart_SmartButton);
		this.timer = js_Boot.__cast(this.getChildByName("TranslationCenter_TimerWindow") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.txtTimer = js_Boot.__cast(this.timer.getChildByName("TranslationCenter_txt_timerWindowtimer") , com_isartdigital_utils_ui_smart_TextSprite);
		this.btnTranslate = js_Boot.__cast(this.getChildByName("TranslationCenter_btn_Translate") , com_isartdigital_utils_ui_smart_SmartButton);
		this.updatePoppin();
		var lockedSchemaList = com_isartdigital_utils_save_DataManager.getInstance().getLockedSchemas();
		var _g = 0;
		while(_g < lockedSchemaList.length) {
			var schema = lockedSchemaList[_g];
			++_g;
			if(schema.isLocked == 1 && schema.startDecrypt != HxOverrides.strDate("0000-00-00 00:00:00")) {
				this.currentSchema = schema;
			}
		}
	}
	,updatePoppin: function() {
		this.lockedSchema = com_isartdigital_utils_save_DataManager.getInstance().getPlayerSchemaCount(true);
		this.txtParcheminCount.set_text(Std.string("x " + this.lockedSchema));
		if(this.lockedSchema == 0) {
			this.btnSkipTimer.visible = false;
			this.timer.visible = false;
			this.btnTranslate.visible = false;
			this.txtParcheminCount.visible = false;
			this.txtParcheminName.set_text(com_isartdigital_utils_system_Localization.getLabel("LABEL_TRANSLATION_CENTER_NO_SCHEMA"));
		} else {
			this.btnTranslate.on("click",$bind(this,this.translate));
			this.btnTranslate.on("tap",$bind(this,this.translate));
			this.btnTranslate.visible = true;
			this.btnSkipTimer.visible = false;
			this.timer.visible = false;
		}
	}
	,translate: function() {
		this.btnTranslate.visible = false;
		this.btnSkipTimer.visible = true;
		this.timer.visible = true;
		this.decryptSchema();
	}
	,decryptSchema: function() {
		this.btnTranslate.off("click",$bind(this,this.translate));
		this.btnTranslate.off("tap",$bind(this,this.translate));
		this.btnSkipTimer.on("click",$bind(this,this.skipTime));
		this.btnSkipTimer.on("tap",$bind(this,this.skipTime));
		var lockedSchemaList = com_isartdigital_utils_save_DataManager.getInstance().getLockedSchemas();
		this.schema = lockedSchemaList[lockedSchemaList.length - 1];
		var key = "" + this.schema.idSchema;
		var _this = com_isartdigital_ruby_ui_popin_incubator_Incubator.listSchema;
		var decryptTime = (__map_reserved[key] != null?_this.getReserved(key):_this.h[key]).decryptTime;
		this.schema.startDecrypt = new Date();
		var t = this.schema.startDecrypt.getTime() + HxOverrides.strDate(decryptTime).getTime();
		this.schema.endDecrypt = new Date(t);
		this.schemaInDecryptMode.push(this.schema);
		this.currentSchema = this.schemaInDecryptMode[0];
	}
	,doAction: function() {
		if(this.currentSchema == null || this.checkDecryptTime(this.currentSchema)) {
			return;
		}
		this.txtTimer.set_text(com_isartdigital_ruby_utils_TimeManager.getInstance().getTimeToFinishBuildingStringFormat(this.currentSchema.endDecrypt));
	}
	,checkDecryptTime: function(pSchema) {
		if(new Date().getTime() > pSchema.endDecrypt.getTime()) {
			com_isartdigital_utils_save_DataBaseAction.getInstance().unlockSchema(pSchema.idSchema);
			var lIndex = com_isartdigital_utils_save_DataManager.getInstance().schemasList.indexOf(pSchema);
			pSchema.isLocked = 0;
			com_isartdigital_utils_save_DataManager.getInstance().schemasList[lIndex] = pSchema;
			this.schemaInDecryptMode.pop();
			this.updatePoppin();
			return true;
		}
		return false;
	}
	,skipTime: function() {
		com_isartdigital_ruby_ui_UIManager.getInstance().openPopin(com_isartdigital_ruby_ui_popin_DynamicPopin.getInstance());
		com_isartdigital_ruby_ui_popin_DynamicPopin.getInstance().init("Accélerer le temps en dépensant " + 5 + " cristaux ?",$bind(this,this.timerSkipped));
	}
	,timerSkipped: function() {
		if(com_isartdigital_ruby_game_player_Player.getInstance().hasEnoughQuantity(5,com_isartdigital_ruby_game_player_Player.getInstance().hardCurrency)) {
			com_isartdigital_ruby_game_player_Player.getInstance().changePlayerValue(-5,"hardCurrency");
			this.btnSkipTimer.off("click",$bind(this,this.skipTime));
			this.btnSkipTimer.off("tap",$bind(this,this.skipTime));
			this.currentSchema.isLocked = 0;
			this.schemaInDecryptMode.pop();
			com_isartdigital_utils_save_DataBaseAction.getInstance().unlockSchema(this.currentSchema.idSchema);
			this.updatePoppin();
		} else {
			com_isartdigital_ruby_ui_hud_Hud.getInstance().noHCAnimation();
		}
	}
	,close: function() {
		com_isartdigital_ruby_ui_popin_MenuClosable.prototype.close.call(this);
		com_isartdigital_ruby_game_world_MapInteractor.getInstance().modalPopinOpened = false;
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter
});
var com_isartdigital_ruby_ui_popin_upgradeCenter_TankUpgrade = function(pID) {
	com_isartdigital_utils_ui_smart_SmartComponent.call(this,pID);
	this.initTank();
};
$hxClasses["com.isartdigital.ruby.ui.popin.upgradeCenter.TankUpgrade"] = com_isartdigital_ruby_ui_popin_upgradeCenter_TankUpgrade;
com_isartdigital_ruby_ui_popin_upgradeCenter_TankUpgrade.__name__ = ["com","isartdigital","ruby","ui","popin","upgradeCenter","TankUpgrade"];
com_isartdigital_ruby_ui_popin_upgradeCenter_TankUpgrade.__super__ = com_isartdigital_utils_ui_smart_SmartComponent;
com_isartdigital_ruby_ui_popin_upgradeCenter_TankUpgrade.prototype = $extend(com_isartdigital_utils_ui_smart_SmartComponent.prototype,{
	initTank: function() {
		this.tankXenos = js_Boot.__cast(this.getChildByName(com_isartdigital_ruby_ui_popin_upgradeCenter_TankUpgrade.XENO_SLOT) , com_isartdigital_utils_ui_smart_SmartComponent);
		this.cartouche = js_Boot.__cast(this.getChildByName(com_isartdigital_ruby_ui_popin_upgradeCenter_TankUpgrade.CARTOUCHE) , com_isartdigital_utils_ui_smart_SmartComponent);
		this.xenoName = js_Boot.__cast(this.cartouche.getChildByName("txt_xenoNameUpgrading") , com_isartdigital_utils_ui_smart_TextSprite);
		this.time = js_Boot.__cast(this.cartouche.getChildByName("txt_UpgradeDelayDisplay") , com_isartdigital_utils_ui_smart_TextSprite);
		this.time.visible = false;
		this.costMN = js_Boot.__cast(this.cartouche.getChildByName("txt_CostUpgradeDisplay") , com_isartdigital_utils_ui_smart_TextSprite);
		this.level = js_Boot.__cast(this.getChildByName("txt_level") , com_isartdigital_utils_ui_smart_TextSprite);
		this.btnManage = js_Boot.__cast(this.getChildByName("btn_Manage") , com_isartdigital_utils_ui_smart_SmartButton);
		this.btnManage.visible = false;
		this.btnUpgrade = js_Boot.__cast(this.getChildByName("btn_Upgrade") , com_isartdigital_utils_ui_smart_SmartButton);
		this.btnSkip = js_Boot.__cast(this.getChildByName("btn_Skip") , com_isartdigital_utils_ui_smart_SmartButton);
		this.btnSkip.visible = false;
		this.xenoName.set_text("tutui tiu");
		this.costMN.set_text("1000");
		if(!this.isEmpty) {
			this.tankXenos.getChildByName("Disabled").visible = false;
			this.tankXenos.getChildByName("Selected").visible = false;
		}
	}
	,setAlien: function(pAlien) {
		this.alien = pAlien;
		this.xenoName.visible = false;
	}
	,__class__: com_isartdigital_ruby_ui_popin_upgradeCenter_TankUpgrade
});
var com_isartdigital_ruby_ui_popin_upgradeCenter_UpgradeCenter = function(pID) {
	this.array = [];
	com_isartdigital_ruby_ui_popin_Menu.call(this,pID);
	this.set_modal(true);
};
$hxClasses["com.isartdigital.ruby.ui.popin.upgradeCenter.UpgradeCenter"] = com_isartdigital_ruby_ui_popin_upgradeCenter_UpgradeCenter;
com_isartdigital_ruby_ui_popin_upgradeCenter_UpgradeCenter.__name__ = ["com","isartdigital","ruby","ui","popin","upgradeCenter","UpgradeCenter"];
com_isartdigital_ruby_ui_popin_upgradeCenter_UpgradeCenter.getInstance = function() {
	if(com_isartdigital_ruby_ui_popin_upgradeCenter_UpgradeCenter.instance == null) {
		com_isartdigital_ruby_ui_popin_upgradeCenter_UpgradeCenter.instance = new com_isartdigital_ruby_ui_popin_upgradeCenter_UpgradeCenter();
	}
	return com_isartdigital_ruby_ui_popin_upgradeCenter_UpgradeCenter.instance;
};
com_isartdigital_ruby_ui_popin_upgradeCenter_UpgradeCenter.__super__ = com_isartdigital_ruby_ui_popin_Menu;
com_isartdigital_ruby_ui_popin_upgradeCenter_UpgradeCenter.prototype = $extend(com_isartdigital_ruby_ui_popin_Menu.prototype,{
	initializationCurrentBuildingTrainingCenter: function(pCenter) {
		this.currentCenter = pCenter;
		this.container = js_Boot.__cast(this.getChildByName("UpgradeCenter_clipXenoListUpgrading") , com_isartdigital_utils_ui_smart_SmartComponent);
		this.firstSlot = js_Boot.__cast(this.container.getChildByName("SlotUpgrade #1") , com_isartdigital_ruby_ui_popin_upgradeCenter_TankUpgrade);
		if(this.currentCenter.slot1Bought) {
			this.getChildByName("btn_AddSlot #1").visible = false;
		} else {
			(js_Boot.__cast(this.getChildByName("UpgradeCenter_clipXenoListUpgrading") , com_isartdigital_utils_ui_smart_SmartComponent)).getChildByName("SlotUpgrade #1").visible = false;
		}
		if(this.currentCenter.slot2Bought) {
			this.getChildByName("btn_AddSlot #2").visible = false;
		} else {
			(js_Boot.__cast(this.getChildByName("UpgradeCenter_clipXenoListUpgrading") , com_isartdigital_utils_ui_smart_SmartComponent)).getChildByName("SlotUpgrade #2").visible = false;
		}
	}
	,setAlien: function() {
		this.firstSlot.setAlien(this.currentCenter.alien);
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_popin_upgradeCenter_UpgradeCenter.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_popin_upgradeCenter_UpgradeCenter
});
var com_isartdigital_ruby_ui_screens_PubImage = function(pID) {
	com_isartdigital_ruby_ui_screens_SmartScreenRegister.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.screens.PubImage"] = com_isartdigital_ruby_ui_screens_PubImage;
com_isartdigital_ruby_ui_screens_PubImage.__name__ = ["com","isartdigital","ruby","ui","screens","PubImage"];
com_isartdigital_ruby_ui_screens_PubImage.getInstance = function() {
	if(com_isartdigital_ruby_ui_screens_PubImage.instance == null) {
		com_isartdigital_ruby_ui_screens_PubImage.instance = new com_isartdigital_ruby_ui_screens_PubImage();
	}
	return com_isartdigital_ruby_ui_screens_PubImage.instance;
};
com_isartdigital_ruby_ui_screens_PubImage.__super__ = com_isartdigital_ruby_ui_screens_SmartScreenRegister;
com_isartdigital_ruby_ui_screens_PubImage.prototype = $extend(com_isartdigital_ruby_ui_screens_SmartScreenRegister.prototype,{
	destroy: function() {
		com_isartdigital_ruby_ui_screens_PubImage.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_screens_PubImage
});
var com_isartdigital_ruby_ui_screens_PubVideo = function(pID) {
	com_isartdigital_ruby_ui_screens_SmartScreenRegister.call(this,pID);
};
$hxClasses["com.isartdigital.ruby.ui.screens.PubVideo"] = com_isartdigital_ruby_ui_screens_PubVideo;
com_isartdigital_ruby_ui_screens_PubVideo.__name__ = ["com","isartdigital","ruby","ui","screens","PubVideo"];
com_isartdigital_ruby_ui_screens_PubVideo.getInstance = function() {
	if(com_isartdigital_ruby_ui_screens_PubVideo.instance == null) {
		com_isartdigital_ruby_ui_screens_PubVideo.instance = new com_isartdigital_ruby_ui_screens_PubVideo();
	}
	return com_isartdigital_ruby_ui_screens_PubVideo.instance;
};
com_isartdigital_ruby_ui_screens_PubVideo.__super__ = com_isartdigital_ruby_ui_screens_SmartScreenRegister;
com_isartdigital_ruby_ui_screens_PubVideo.prototype = $extend(com_isartdigital_ruby_ui_screens_SmartScreenRegister.prototype,{
	destroy: function() {
		com_isartdigital_ruby_ui_screens_PubVideo.instance = null;
	}
	,__class__: com_isartdigital_ruby_ui_screens_PubVideo
});
var com_isartdigital_ruby_ui_screens_TitleCard = function() {
	com_isartdigital_utils_ui_Screen.call(this);
	this.background = new PIXI.Sprite(PIXI.Texture.fromImage(com_isartdigital_utils_Config.url(com_isartdigital_utils_Config.get_assetsPath() + "SplashScreen.png")));
	this.background.anchor.set(0.5,0.5);
	this.addChild(this.background);
	this.interactive = true;
	this.buttonMode = true;
};
$hxClasses["com.isartdigital.ruby.ui.screens.TitleCard"] = com_isartdigital_ruby_ui_screens_TitleCard;
com_isartdigital_ruby_ui_screens_TitleCard.__name__ = ["com","isartdigital","ruby","ui","screens","TitleCard"];
com_isartdigital_ruby_ui_screens_TitleCard.getInstance = function() {
	if(com_isartdigital_ruby_ui_screens_TitleCard.instance == null) {
		com_isartdigital_ruby_ui_screens_TitleCard.instance = new com_isartdigital_ruby_ui_screens_TitleCard();
	}
	return com_isartdigital_ruby_ui_screens_TitleCard.instance;
};
com_isartdigital_ruby_ui_screens_TitleCard.__super__ = com_isartdigital_utils_ui_Screen;
com_isartdigital_ruby_ui_screens_TitleCard.prototype = $extend(com_isartdigital_utils_ui_Screen.prototype,{
	onClick: function(pEvent) {
		com_isartdigital_utils_sounds_SoundManager.getSound("click").play();
	}
	,destroy: function() {
		com_isartdigital_ruby_ui_screens_TitleCard.instance = null;
		com_isartdigital_utils_ui_Screen.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_ruby_ui_screens_TitleCard
});
var com_isartdigital_ruby_ui_specialButtons_SlotButton = function(pID) {
	com_isartdigital_utils_ui_smart_SmartButton.call(this,pID);
	com_isartdigital_ruby_ui_specialButtons_SlotButton.list.push(this);
};
$hxClasses["com.isartdigital.ruby.ui.specialButtons.SlotButton"] = com_isartdigital_ruby_ui_specialButtons_SlotButton;
com_isartdigital_ruby_ui_specialButtons_SlotButton.__name__ = ["com","isartdigital","ruby","ui","specialButtons","SlotButton"];
com_isartdigital_ruby_ui_specialButtons_SlotButton.__super__ = com_isartdigital_utils_ui_smart_SmartButton;
com_isartdigital_ruby_ui_specialButtons_SlotButton.prototype = $extend(com_isartdigital_utils_ui_smart_SmartButton.prototype,{
	_click: function(pEvent) {
		com_isartdigital_utils_ui_smart_SmartButton.prototype._click.call(this,pEvent);
		this.placeXeno(com_isartdigital_ruby_ui_popin_centreForage_CentreForage.getInstance().alienSelected);
	}
	,invisibleGreySquare: function() {
		this.getChildByName("asset").visible = false;
	}
	,placeXeno: function(pAlien) {
		if(pAlien != this.alien) {
			var _g = 0;
			var _g1 = com_isartdigital_ruby_ui_popin_centreForage_CentreForage.getInstance().xenoSlotList;
			while(_g < _g1.length) {
				var slot = _g1[_g];
				++_g;
				if(slot.alien == pAlien) {
					slot.removeXeno(pAlien);
				}
			}
		}
		this.alien = pAlien;
		if(this.alien != null) {
			this.assetName = this.alien.name + "_Normal";
			this.prefix = "XenosThumbnail_";
			this.setAsset();
			com_isartdigital_ruby_ui_popin_centreForage_CentreForage.getInstance().alienSelected = null;
			com_isartdigital_ruby_ui_popin_centreForage_CentreForage.getInstance().checkIfMissionCanBeStarted();
		}
	}
	,removeXeno: function(pAlien) {
		haxe_Log.trace("remove",{ fileName : "SlotButton.hx", lineNumber : 57, className : "com.isartdigital.ruby.ui.specialButtons.SlotButton", methodName : "removeXeno"});
		this.alien = null;
	}
	,setAsset: function() {
		if(this.prefix == null || this.children == null) {
			return;
		}
		if(this.alien == null && this.getChildByName("mainAsset") != null) {
			this.removeChild(this.getChildByName("mainAsset"));
		}
		var lAsset;
		var lSpawnAsset = js_Boot.__cast(this.getChildByName("asset") , com_isartdigital_utils_ui_smart_UISprite);
		lAsset = new com_isartdigital_utils_ui_smart_UISprite(this.prefix + this.assetName);
		lAsset.name = "mainAsset";
		lAsset.position = lSpawnAsset.position.clone();
		if(this.getChildByName(lAsset.name) != null) {
			this.removeChild(this.getChildByName(lAsset.name));
		}
		this.addChild(lAsset);
		lSpawnAsset.visible = false;
	}
	,destroy: function() {
		com_isartdigital_utils_ui_smart_SmartButton.prototype.destroy.call(this);
		HxOverrides.remove(com_isartdigital_ruby_ui_specialButtons_SlotButton.list,this);
	}
	,__class__: com_isartdigital_ruby_ui_specialButtons_SlotButton
});
var com_isartdigital_ruby_ui_specialButtons_Textbutton = function(pID) {
	this.isInHCMode = false;
	com_isartdigital_ruby_ui_items_Item.call(this,pID);
	this.scmnInfoContainerNormal = js_Boot.__cast(this.getChildByName("ConfirmationPose_clipPriceSCInfos") , com_isartdigital_utils_ui_smart_SmartComponent);
	this.hcInfoContainerNormal = js_Boot.__cast(this.getChildByName("ConfirmationPose_clipPriceHCInfos") , com_isartdigital_utils_ui_smart_SmartComponent);
	this.scTextNormal = js_Boot.__cast(this.scmnInfoContainerNormal.getChildByName("txt_SCPrice") , com_isartdigital_utils_ui_smart_TextSprite);
	this.mnTextNormal = js_Boot.__cast(this.scmnInfoContainerNormal.getChildByName("txt_MNPrice") , com_isartdigital_utils_ui_smart_TextSprite);
	this.hcTextNormal = js_Boot.__cast(this.hcInfoContainerNormal.getChildByName("txt_HCPrice") , com_isartdigital_utils_ui_smart_TextSprite);
	this.payBtn = js_Boot.__cast(this.getChildByName("pay_btn") , com_isartdigital_utils_ui_smart_SmartButton);
};
$hxClasses["com.isartdigital.ruby.ui.specialButtons.Textbutton"] = com_isartdigital_ruby_ui_specialButtons_Textbutton;
com_isartdigital_ruby_ui_specialButtons_Textbutton.__name__ = ["com","isartdigital","ruby","ui","specialButtons","Textbutton"];
com_isartdigital_ruby_ui_specialButtons_Textbutton.__super__ = com_isartdigital_ruby_ui_items_Item;
com_isartdigital_ruby_ui_specialButtons_Textbutton.prototype = $extend(com_isartdigital_ruby_ui_items_Item.prototype,{
	HCMode: function() {
		this.isInHCMode = true;
		this.scmnInfoContainerNormal.visible = false;
	}
	,SCMNMode: function() {
		this.hcInfoContainerNormal.visible = false;
	}
	,onOver: function() {
		this.payBtn.overBuild(1);
	}
	,onOut: function() {
		this.payBtn.overBuild(0);
	}
	,onDown: function() {
		this.payBtn.overBuild(2);
	}
	,displayTextHC: function() {
		this.HCMode();
		this.hcTextNormal.set_text(com_isartdigital_ruby_ui_popin_ConfirmationPose.getInstance().hcValue);
	}
	,displayTextSCMN: function() {
		this.SCMNMode();
		this.scTextNormal.set_text(com_isartdigital_ruby_ui_popin_ConfirmationPose.getInstance().scValue);
		this.mnTextNormal.set_text(com_isartdigital_ruby_ui_popin_ConfirmationPose.getInstance().mnValue);
	}
	,__class__: com_isartdigital_ruby_ui_specialButtons_Textbutton
});
var com_isartdigital_ruby_utils_BezierCurve = function() {
};
$hxClasses["com.isartdigital.ruby.utils.BezierCurve"] = com_isartdigital_ruby_utils_BezierCurve;
com_isartdigital_ruby_utils_BezierCurve.__name__ = ["com","isartdigital","ruby","utils","BezierCurve"];
com_isartdigital_ruby_utils_BezierCurve.customEase = function(pTime) {
	return com_isartdigital_ruby_utils_BezierCurve.calculCurve(new PIXI.Point(0,0),new PIXI.Point(0.91,0.1),new PIXI.Point(0.16,0.99),new PIXI.Point(1,1),pTime).y;
};
com_isartdigital_ruby_utils_BezierCurve.calculCurve = function(pA,pB,pC,pD,t,pCustomEase) {
	if(pCustomEase == null) {
		pCustomEase = false;
	}
	var lPoint = new PIXI.Point(0,0);
	if(pCustomEase) {
		t = com_isartdigital_ruby_utils_BezierCurve.customEase(t);
	}
	var s = 1 - t;
	lPoint.x = s * s * s * pA.x + 3 * t * s * s * pB.x + 3 * t * t * s * pC.x + t * t * t * pD.x;
	lPoint.y = s * s * s * pA.y + 3 * t * s * s * pB.y + 3 * t * t * s * pC.y + t * t * t * pD.y;
	return lPoint;
};
com_isartdigital_ruby_utils_BezierCurve.prototype = {
	__class__: com_isartdigital_ruby_utils_BezierCurve
};
var com_isartdigital_ruby_utils_ColorFilterManager = function() {
	this.listParams = [];
	this.listElements = [];
	this.colorMatrix = [];
};
$hxClasses["com.isartdigital.ruby.utils.ColorFilterManager"] = com_isartdigital_ruby_utils_ColorFilterManager;
com_isartdigital_ruby_utils_ColorFilterManager.__name__ = ["com","isartdigital","ruby","utils","ColorFilterManager"];
com_isartdigital_ruby_utils_ColorFilterManager.getInstance = function() {
	if(com_isartdigital_ruby_utils_ColorFilterManager.instance == null) {
		com_isartdigital_ruby_utils_ColorFilterManager.instance = new com_isartdigital_ruby_utils_ColorFilterManager();
	}
	return com_isartdigital_ruby_utils_ColorFilterManager.instance;
};
com_isartdigital_ruby_utils_ColorFilterManager.prototype = {
	applyFilter: function(pTarget,pParams) {
		this.listElements.push(pTarget);
		this.listParams.push(pParams);
	}
	,doAction: function() {
		if(this.listElements.length <= 0) {
			return;
		}
		var _g1 = 0;
		var _g = this.listElements.length;
		while(_g1 < _g) {
			var element = _g1++;
			this.currentElement = element;
			if(this.listParams[element].duration != 0) {
				this.listParams[element].colorAmount -= 0.01;
			}
			if(this.listParams[element].colorToApply == "red") {
				this.colorMatrix = [1,0,0,this.listParams[element].colorAmount,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0];
			}
			if(this.listParams[element].colorToApply == "green") {
				this.colorMatrix = [0,0,0,0,0,this.listParams[element].colorAmount,1,0,0,0,1,0,0,0,0,this.listParams[element].colorAmount,0,0,0,0];
			}
			if(this.listParams[element].colorToApply == "blue") {
				this.colorMatrix = [1,0,0,0,0,0,1,0,0,0,this.listParams[element].colorAmount,1,1,0,0,0,0,0,0,0];
			}
			if(this.listParams[element].colorToApply == "pink") {
				this.colorMatrix = [this.listParams[element].colorAmount,1,0,0,0,this.listParams[element].colorAmount,0,0,0,0,this.listParams[element].colorAmount,1,0,0,0,this.listParams[element].colorAmount,1,0,0,0];
			}
			if(this.listParams[element].colorToApply == "white") {
				this.colorMatrix = [1,0,0,0,this.listParams[element].colorAmount,0,1,0,0,this.listParams[element].colorAmount,0,0,1,0,this.listParams[element].colorAmount,0,0,0,0,this.listParams[element].colorAmount];
			}
			if(this.listParams[element].colorToApply == "black") {
				this.colorMatrix = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0];
			}
			if(this.listParams[element].colorToApply == "orange") {
				this.colorMatrix = [this.listParams[element].colorAmount,0.5,0.25,0.25,this.listParams[element].colorAmount,this.listParams[element].colorAmount,0.4,0,0.19,this.listParams[element].colorAmount,0,0,0,0,0,1,0,0,0,0];
			}
			this.listElements[element].colorFilter.matrix = this.colorMatrix;
			this.listElements[element].filters = [this.listElements[element].colorFilter];
			if(this.listParams[element].colorAmount <= 0) {
				this.resetColor();
				return;
			}
		}
	}
	,resetColor: function() {
		if(this.currentElement == null) {
			return;
		}
		this.listElements[this.currentElement].colorFilter.reset();
		this.listElements[this.currentElement].filters = null;
		HxOverrides.remove(this.listElements,this.listElements[this.currentElement]);
		HxOverrides.remove(this.listParams,this.listParams[this.currentElement]);
	}
	,destroy: function() {
		com_isartdigital_ruby_utils_ColorFilterManager.instance = null;
	}
	,__class__: com_isartdigital_ruby_utils_ColorFilterManager
};
var com_isartdigital_ruby_utils_Focus = function() {
	PIXI.DisplayObject.call(this);
	this.graphic = new PIXI.Graphics();
	this.oldPosition = this.position;
};
$hxClasses["com.isartdigital.ruby.utils.Focus"] = com_isartdigital_ruby_utils_Focus;
com_isartdigital_ruby_utils_Focus.__name__ = ["com","isartdigital","ruby","utils","Focus"];
com_isartdigital_ruby_utils_Focus.getInstance = function() {
	if(com_isartdigital_ruby_utils_Focus.instance == null) {
		com_isartdigital_ruby_utils_Focus.instance = new com_isartdigital_ruby_utils_Focus();
	}
	return com_isartdigital_ruby_utils_Focus.instance;
};
com_isartdigital_ruby_utils_Focus.__super__ = PIXI.DisplayObject;
com_isartdigital_ruby_utils_Focus.prototype = $extend(PIXI.DisplayObject.prototype,{
	draw: function() {
		this.graphic.clear();
		this.graphic.beginFill(16777215);
		this.graphic.drawCircle(this.x,this.y,10);
		this.graphic.endFill();
	}
	,getRegionOn: function() {
		var lPoint = com_isartdigital_utils_game_iso_IsoManager.localToModel(this.position);
		lPoint.x /= 26;
		lPoint.y /= 26;
		lPoint.x = Math.floor(lPoint.x);
		lPoint.y = Math.floor(lPoint.y);
		return lPoint;
	}
	,isOnActiveRegion: function() {
		var lPoint = this.getRegionOn();
		if(com_isartdigital_ruby_game_world_World.getInstance().getRegion(js_Boot.__cast(lPoint.x , Int),js_Boot.__cast(lPoint.y , Int)) != null) {
			return com_isartdigital_ruby_game_world_World.getInstance().getRegion(js_Boot.__cast(lPoint.x , Int),js_Boot.__cast(lPoint.y , Int)).isActive;
		} else {
			return false;
		}
	}
	,toMove: function(pToAdd) {
		this.oldPosition = this.position.clone();
		this.position.x += pToAdd.x;
		this.position.y += pToAdd.y;
		var lCooCurrentRegion = this.getRegionOn();
		this.position = this.oldPosition.clone();
		if(com_isartdigital_ruby_game_world_World.getInstance().getRegion(js_Boot.__cast(lCooCurrentRegion.x , Int),js_Boot.__cast(lCooCurrentRegion.y , Int)) == null) {
			return;
		}
		this.move(pToAdd);
	}
	,move: function(pToAdd) {
		this.position.x += pToAdd.x;
		this.position.y += pToAdd.y;
	}
	,destroy: function() {
		com_isartdigital_ruby_utils_Focus.instance = null;
	}
	,__class__: com_isartdigital_ruby_utils_Focus
});
var com_isartdigital_ruby_utils_ParticleManager = function() {
	this.emitterList = [];
};
$hxClasses["com.isartdigital.ruby.utils.ParticleManager"] = com_isartdigital_ruby_utils_ParticleManager;
com_isartdigital_ruby_utils_ParticleManager.__name__ = ["com","isartdigital","ruby","utils","ParticleManager"];
com_isartdigital_ruby_utils_ParticleManager.getInstance = function() {
	if(com_isartdigital_ruby_utils_ParticleManager.instance == null) {
		com_isartdigital_ruby_utils_ParticleManager.instance = new com_isartdigital_ruby_utils_ParticleManager();
	}
	return com_isartdigital_ruby_utils_ParticleManager.instance;
};
com_isartdigital_ruby_utils_ParticleManager.prototype = {
	createParticle: function(pJsonConfig,pTextures,pDuration) {
		if(pDuration == null) {
			pDuration = 10000;
		}
		var _gthis = this;
		if(com_isartdigital_utils_system_DeviceCapabilities.get_system() != "Desktop") {
			return new PIXI.Container();
		}
		var lNewContainer = new PIXI.Container();
		var lTextureArray = [];
		var _g = 0;
		while(_g < pTextures.length) {
			var lElement = pTextures[_g];
			++_g;
			lTextureArray.push(PIXI.Texture.fromImage("assets/particles/assets/" + lElement + ".png",false));
		}
		var lEmitter = new cloudkid.Emitter(lNewContainer,lTextureArray,com_isartdigital_utils_loader_GameLoader.getContent("particles/json/" + pJsonConfig + ".json"));
		lNewContainer.width = 500;
		lNewContainer.height = 500;
		this.emitterList.push(lEmitter);
		var timer = new haxe_Timer(pDuration);
		timer.run = function() {
			_gthis.killParticle(lNewContainer,lEmitter);
			timer.stop();
		};
		return lNewContainer;
	}
	,update: function() {
		var _g = 0;
		var _g1 = this.emitterList;
		while(_g < _g1.length) {
			var lEmitter = _g1[_g];
			++_g;
			lEmitter.update(0.01);
		}
	}
	,killParticle: function(pContainer,pEmitter) {
		pEmitter.destroy();
		pContainer.parent.removeChild(pContainer);
		this.emitterList.splice(this.emitterList.indexOf(pEmitter),1);
	}
	,destroy: function() {
		com_isartdigital_ruby_utils_ParticleManager.instance = null;
	}
	,__class__: com_isartdigital_ruby_utils_ParticleManager
};
var com_isartdigital_ruby_utils_RessourceType = { __ename__ : true, __constructs__ : ["SoftCurrency","HardCurrency","ItemHC0","ItemHC1","ItemHC2","ItemBluePrint","ItemBluePrintPart","ItemDarkMatter0","ItemDarkMatter1","ItemDarkMatter2","ItemGeneTwo0","ItemGeneTwo1","ItemGeneTwo2","ItemGeneOne0","ItemGeneOne1","ItemGeneOne2","ItemGeneFive0","ItemGeneFive1","ItemGeneFive2","ItemGeneFour0","ItemGeneFour1","ItemGeneFour2","ItemGeneThree0","ItemGeneThree1","ItemGeneThree2"] };
com_isartdigital_ruby_utils_RessourceType.SoftCurrency = ["SoftCurrency",0];
com_isartdigital_ruby_utils_RessourceType.SoftCurrency.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.HardCurrency = ["HardCurrency",1];
com_isartdigital_ruby_utils_RessourceType.HardCurrency.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemHC0 = ["ItemHC0",2];
com_isartdigital_ruby_utils_RessourceType.ItemHC0.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemHC1 = ["ItemHC1",3];
com_isartdigital_ruby_utils_RessourceType.ItemHC1.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemHC2 = ["ItemHC2",4];
com_isartdigital_ruby_utils_RessourceType.ItemHC2.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemBluePrint = ["ItemBluePrint",5];
com_isartdigital_ruby_utils_RessourceType.ItemBluePrint.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemBluePrintPart = ["ItemBluePrintPart",6];
com_isartdigital_ruby_utils_RessourceType.ItemBluePrintPart.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemDarkMatter0 = ["ItemDarkMatter0",7];
com_isartdigital_ruby_utils_RessourceType.ItemDarkMatter0.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemDarkMatter1 = ["ItemDarkMatter1",8];
com_isartdigital_ruby_utils_RessourceType.ItemDarkMatter1.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemDarkMatter2 = ["ItemDarkMatter2",9];
com_isartdigital_ruby_utils_RessourceType.ItemDarkMatter2.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemGeneTwo0 = ["ItemGeneTwo0",10];
com_isartdigital_ruby_utils_RessourceType.ItemGeneTwo0.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemGeneTwo1 = ["ItemGeneTwo1",11];
com_isartdigital_ruby_utils_RessourceType.ItemGeneTwo1.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemGeneTwo2 = ["ItemGeneTwo2",12];
com_isartdigital_ruby_utils_RessourceType.ItemGeneTwo2.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemGeneOne0 = ["ItemGeneOne0",13];
com_isartdigital_ruby_utils_RessourceType.ItemGeneOne0.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemGeneOne1 = ["ItemGeneOne1",14];
com_isartdigital_ruby_utils_RessourceType.ItemGeneOne1.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemGeneOne2 = ["ItemGeneOne2",15];
com_isartdigital_ruby_utils_RessourceType.ItemGeneOne2.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemGeneFive0 = ["ItemGeneFive0",16];
com_isartdigital_ruby_utils_RessourceType.ItemGeneFive0.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemGeneFive1 = ["ItemGeneFive1",17];
com_isartdigital_ruby_utils_RessourceType.ItemGeneFive1.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemGeneFive2 = ["ItemGeneFive2",18];
com_isartdigital_ruby_utils_RessourceType.ItemGeneFive2.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemGeneFour0 = ["ItemGeneFour0",19];
com_isartdigital_ruby_utils_RessourceType.ItemGeneFour0.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemGeneFour1 = ["ItemGeneFour1",20];
com_isartdigital_ruby_utils_RessourceType.ItemGeneFour1.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemGeneFour2 = ["ItemGeneFour2",21];
com_isartdigital_ruby_utils_RessourceType.ItemGeneFour2.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemGeneThree0 = ["ItemGeneThree0",22];
com_isartdigital_ruby_utils_RessourceType.ItemGeneThree0.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemGeneThree1 = ["ItemGeneThree1",23];
com_isartdigital_ruby_utils_RessourceType.ItemGeneThree1.__enum__ = com_isartdigital_ruby_utils_RessourceType;
com_isartdigital_ruby_utils_RessourceType.ItemGeneThree2 = ["ItemGeneThree2",24];
com_isartdigital_ruby_utils_RessourceType.ItemGeneThree2.__enum__ = com_isartdigital_ruby_utils_RessourceType;
var com_isartdigital_ruby_utils_RessourcesEffectManager = function() {
	this.isAnimEnd = false;
};
$hxClasses["com.isartdigital.ruby.utils.RessourcesEffectManager"] = com_isartdigital_ruby_utils_RessourcesEffectManager;
com_isartdigital_ruby_utils_RessourcesEffectManager.__name__ = ["com","isartdigital","ruby","utils","RessourcesEffectManager"];
com_isartdigital_ruby_utils_RessourcesEffectManager.getInstance = function() {
	if(com_isartdigital_ruby_utils_RessourcesEffectManager.instance == null) {
		com_isartdigital_ruby_utils_RessourcesEffectManager.instance = new com_isartdigital_ruby_utils_RessourcesEffectManager();
	}
	return com_isartdigital_ruby_utils_RessourcesEffectManager.instance;
};
com_isartdigital_ruby_utils_RessourcesEffectManager.prototype = {
	SetEffect: function(pParams) {
		this.params = pParams;
		this.container = pParams.whereToAddchild;
		this.originalPos = pParams.originalPosition;
		this.destinationPosition = pParams.destinationPosition;
		this.OnStartEffect();
		var _g1 = 0;
		var _g = pParams.numObjectsToInstanciate;
		while(_g1 < _g) {
			++_g1;
			this.bubble = com_isartdigital_utils_game_pooling_PoolManager.getFromPool("Bubble");
			this.bubble.init(null);
			this.bubble.position.x = pParams.originalPosition.x + Math.random() * 30 - 15;
			this.bubble.position.y = pParams.originalPosition.y + Math.random() * 30 - 15;
			(js_Boot.__cast(this.bubble , com_isartdigital_ruby_utils_RessourceEffect)).setModeInit(pParams.animationType,pParams.destinationPosition,pParams.ressource,new PIXI.Point(this.bubble.position.x - pParams.originalPosition.x,this.bubble.position.y - pParams.originalPosition.y));
			pParams.whereToAddchild.addChild(this.bubble);
			var lParticle = com_isartdigital_ruby_utils_ParticleManager.getInstance().createParticle("bubble",["smoke01"],5000);
			lParticle.position = this.bubble.position;
			this.container.addChild(lParticle);
		}
	}
	,OnStartEffect: function() {
		var lParticle = com_isartdigital_ruby_utils_ParticleManager.getInstance().createParticle("smoke",["smoke01","bubble"],5000);
		lParticle.position = this.originalPos;
		this.container.addChild(lParticle);
	}
	,OnEffectEnd: function() {
		var lParticle2 = com_isartdigital_ruby_utils_ParticleManager.getInstance().createParticle("explosionStars",["smoke03","stars1","stars3","stars3"],5000);
		lParticle2.position = this.destinationPosition;
		this.container.addChild(lParticle2);
	}
	,getAnimEnd: function() {
		return this.isAnimEnd;
	}
	,destroy: function() {
		com_isartdigital_ruby_utils_RessourcesEffectManager.instance = null;
	}
	,__class__: com_isartdigital_ruby_utils_RessourcesEffectManager
};
var com_isartdigital_ruby_utils_SmartShaker = function() {
	this.listParams = [];
	this.listElementToShake = [];
	this.shaker = new PIXI.Point(0,0);
};
$hxClasses["com.isartdigital.ruby.utils.SmartShaker"] = com_isartdigital_ruby_utils_SmartShaker;
com_isartdigital_ruby_utils_SmartShaker.__name__ = ["com","isartdigital","ruby","utils","SmartShaker"];
com_isartdigital_ruby_utils_SmartShaker.getInstance = function() {
	if(com_isartdigital_ruby_utils_SmartShaker.instance == null) {
		com_isartdigital_ruby_utils_SmartShaker.instance = new com_isartdigital_ruby_utils_SmartShaker();
	}
	return com_isartdigital_ruby_utils_SmartShaker.instance;
};
com_isartdigital_ruby_utils_SmartShaker.prototype = {
	SetShaker: function(pElem2Shake,pParams) {
		var _g1 = 0;
		var _g = this.listElementToShake.length;
		while(_g1 < _g) if(pElem2Shake == this.listElementToShake[_g1++]) {
			return;
		}
		this.listElementToShake.push(pElem2Shake);
		this.listParams.push(pParams);
		if(pParams.sound != null) {
			com_isartdigital_utils_sounds_SoundManager.getSound(pParams.sound).play();
		}
	}
	,doAction: function() {
		if(this.listElementToShake.length == 0) {
			return;
		}
		var _g1 = 0;
		var _g = this.listElementToShake.length;
		while(_g1 < _g) {
			var element = _g1++;
			this.listParams[element].duration--;
			if(this.listParams[element].duration <= 0) {
				this.listElementToShake[element].position.set(this.listParams[element].originalPosition.x,this.listParams[element].originalPosition.y);
				HxOverrides.remove(this.listElementToShake,this.listElementToShake[element]);
				HxOverrides.remove(this.listParams,this.listParams[element]);
				return;
			}
			this.shaker.x = this.listParams[element].xQuantity * ((0.8 + Math.random() * 0.19999999999999996) * Math.cos(this.listParams[element].duration * 2 * Math.PI / this.listParams[element].smoothness) * this.listParams[element].amplitude);
			this.shaker.y = this.listParams[element].yQuantity * ((0.8 + Math.random() * 0.19999999999999996) * Math.sin(this.listParams[element].duration * 2 * Math.PI / this.listParams[element].smoothness) * this.listParams[element].amplitude);
			this.listParams[element].amplitude *= this.listParams[element].fadeOut;
			this.listElementToShake[element].x += this.shaker.x;
			this.listElementToShake[element].y += this.shaker.y;
		}
	}
	,destroy: function() {
		com_isartdigital_ruby_utils_SmartShaker.instance = null;
	}
	,__class__: com_isartdigital_ruby_utils_SmartShaker
};
var com_isartdigital_ruby_utils_TimeManager = function() {
};
$hxClasses["com.isartdigital.ruby.utils.TimeManager"] = com_isartdigital_ruby_utils_TimeManager;
com_isartdigital_ruby_utils_TimeManager.__name__ = ["com","isartdigital","ruby","utils","TimeManager"];
com_isartdigital_ruby_utils_TimeManager.getInstance = function() {
	if(com_isartdigital_ruby_utils_TimeManager.instance == null) {
		com_isartdigital_ruby_utils_TimeManager.instance = new com_isartdigital_ruby_utils_TimeManager();
	}
	return com_isartdigital_ruby_utils_TimeManager.instance;
};
com_isartdigital_ruby_utils_TimeManager.prototype = {
	set_timeServer: function(pDate) {
		return this.timeServer = pDate;
	}
	,init: function(pElement) {
		this.dateNow = new Date();
		var t = this.convertInStamp(pElement.timeToBuild.seconds,pElement.timeToBuild.minutes,pElement.timeToBuild.hours,pElement.timeToBuild.days);
		var t1 = this.dateNow.getTime() + t;
		pElement.dateEndBuilding = new Date(t1);
	}
	,getEndOfBuildDate: function(pElement) {
		return pElement.dateEndBuilding;
	}
	,convertInStamp: function(seconds,minutes,hours,days) {
		if(days == null) {
			days = 0;
		}
		if(hours == null) {
			hours = 0;
		}
		if(minutes == null) {
			minutes = 0;
		}
		var lMin = minutes;
		var lHour = hours;
		var lDay = days;
		lMin *= 60;
		lHour *= 3600;
		lDay *= 86400;
		return (seconds + lMin + lHour + lDay) * 1000.0;
	}
	,getTimeInSecondsToFinishBuilding: function(pDateEnd) {
		return (new Date().getTime() - pDateEnd.getTime()) / 1000;
	}
	,getTimeToFinishBuildingStringFormat: function(pDateEnd) {
		var time = pDateEnd.getTime() - new Date().getTime();
		time /= 1000;
		var days = 0;
		var hours = 0;
		var minutes = 0;
		var seconds = 0;
		days = Math.floor(time / 86400);
		hours = Math.floor(time % 86400 / 3600);
		minutes = Math.floor(time % 3600 / 60);
		seconds = Math.floor(time % 60);
		if(days != 0) {
			return days + "d:" + hours + "h:" + minutes + "m:" + seconds + "s";
		}
		if(days == 0 && hours != 0) {
			return hours + "h:" + minutes + "m:" + seconds + "s";
		}
		if(days == 0 && hours == 0 && minutes != 0) {
			return minutes + "m:" + seconds + "s";
		} else {
			return Std.string(seconds + "s");
		}
	}
	,getPercentage: function(pDateStart,pDateEnd) {
		return Math.round((new Date().getTime() - pDateStart.getTime()) / (pDateEnd.getTime() - pDateStart.getTime()) * 100);
	}
	,destroy: function() {
		com_isartdigital_ruby_utils_TimeManager.instance = null;
	}
	,__class__: com_isartdigital_ruby_utils_TimeManager
	,__properties__: {set_timeServer:"set_timeServer"}
};
var com_isartdigital_services_deltaDNA_DeltaDNA = function() { };
$hxClasses["com.isartdigital.services.deltaDNA.DeltaDNA"] = com_isartdigital_services_deltaDNA_DeltaDNA;
com_isartdigital_services_deltaDNA_DeltaDNA.__name__ = ["com","isartdigital","services","deltaDNA","DeltaDNA"];
com_isartdigital_services_deltaDNA_DeltaDNA._onData = function(pData) {
	haxe_Log.trace("DeltaDNA success: " + pData,{ fileName : "DeltaDNA.hx", lineNumber : 61, className : "com.isartdigital.services.deltaDNA.DeltaDNA", methodName : "_onData"});
};
com_isartdigital_services_deltaDNA_DeltaDNA._onError = function(pError) {
	haxe_Log.trace("DeltaDNA error: " + pError,{ fileName : "DeltaDNA.hx", lineNumber : 65, className : "com.isartdigital.services.deltaDNA.DeltaDNA", methodName : "_onError"});
};
com_isartdigital_services_deltaDNA_DeltaDNA._onGetUserID = function(pData) {
	haxe_Log.trace(JSON.parse(pData).userID,{ fileName : "DeltaDNA.hx", lineNumber : 69, className : "com.isartdigital.services.deltaDNA.DeltaDNA", methodName : "_onGetUserID"});
};
com_isartdigital_services_deltaDNA_DeltaDNA.request = function(pRequest) {
	pRequest.onError = com_isartdigital_services_deltaDNA_DeltaDNA.onError;
	pRequest.request(true);
};
com_isartdigital_services_deltaDNA_DeltaDNA.init = function(pDevKey,pLiveKey,pCollectURL,pEngageURL,pUserID,pSessionID) {
	com_isartdigital_services_deltaDNA_DeltaDNA.collectURL = pCollectURL;
	com_isartdigital_services_deltaDNA_DeltaDNA.engageURL = pEngageURL;
	com_isartdigital_services_deltaDNA_DeltaDNA.devKey = pDevKey;
	com_isartdigital_services_deltaDNA_DeltaDNA.liveKey = pLiveKey;
	com_isartdigital_services_deltaDNA_DeltaDNA.userID = pUserID;
	com_isartdigital_services_deltaDNA_DeltaDNA.sessionID = pSessionID;
	var key = com_isartdigital_utils_system_DeviceCapabilities.get_system();
	var _this = com_isartdigital_services_deltaDNA_DeltaDNA.devices;
	com_isartdigital_services_deltaDNA_DeltaDNA.platform = __map_reserved[key] != null?_this.getReserved(key):_this.h[key];
};
com_isartdigital_services_deltaDNA_DeltaDNA.getUserID = function() {
	var lRequest = new haxe_Http(com_isartdigital_services_deltaDNA_DeltaDNA.collectURL + "/uuid");
	lRequest.onData = com_isartdigital_services_deltaDNA_DeltaDNA.onGetUserID == null?com_isartdigital_services_deltaDNA_DeltaDNA._onGetUserID:com_isartdigital_services_deltaDNA_DeltaDNA.onGetUserID;
	lRequest.onError = com_isartdigital_services_deltaDNA_DeltaDNA.onError == null?com_isartdigital_services_deltaDNA_DeltaDNA._onError:com_isartdigital_services_deltaDNA_DeltaDNA.onError;
	com_isartdigital_services_deltaDNA_DeltaDNA.request(lRequest);
};
com_isartdigital_services_deltaDNA_DeltaDNA.addEvent = function(pEventName,pParams) {
	if(pParams == null) {
		pParams = { };
	}
	pParams.platform = com_isartdigital_services_deltaDNA_DeltaDNA.platform;
	com_isartdigital_services_deltaDNA_DeltaDNA.list.push({ eventName : pEventName, userID : com_isartdigital_services_deltaDNA_DeltaDNA.userID, sessionID : com_isartdigital_services_deltaDNA_DeltaDNA.sessionID, eventParams : pParams});
};
com_isartdigital_services_deltaDNA_DeltaDNA.send = function(pLive) {
	if(pLive == null) {
		pLive = false;
	}
	var lJson;
	var lSuffix = "";
	if(com_isartdigital_services_deltaDNA_DeltaDNA.list.length == 1) {
		lJson = com_isartdigital_services_deltaDNA_DeltaDNA.list[0];
	} else if(com_isartdigital_services_deltaDNA_DeltaDNA.list.length > 1) {
		lJson = { eventList : com_isartdigital_services_deltaDNA_DeltaDNA.list};
		lSuffix = "/bulk";
	} else {
		haxe_Log.trace("DeltaDNA: Pas d'Event à envoyer",{ fileName : "DeltaDNA.hx", lineNumber : 134, className : "com.isartdigital.services.deltaDNA.DeltaDNA", methodName : "send"});
		return;
	}
	var lRequest = new haxe_Http(com_isartdigital_services_deltaDNA_DeltaDNA.collectURL + "/" + (pLive?com_isartdigital_services_deltaDNA_DeltaDNA.liveKey:com_isartdigital_services_deltaDNA_DeltaDNA.devKey) + lSuffix);
	lRequest.addHeader("Content-Type","application/json");
	lRequest.setPostData(JSON.stringify(lJson));
	lRequest.onData = com_isartdigital_services_deltaDNA_DeltaDNA.onData == null?com_isartdigital_services_deltaDNA_DeltaDNA._onData:com_isartdigital_services_deltaDNA_DeltaDNA.onData;
	lRequest.onError = com_isartdigital_services_deltaDNA_DeltaDNA.onError == null?com_isartdigital_services_deltaDNA_DeltaDNA._onError:com_isartdigital_services_deltaDNA_DeltaDNA.onError;
	com_isartdigital_services_deltaDNA_DeltaDNA.request(lRequest);
	com_isartdigital_services_deltaDNA_DeltaDNA.list = [];
};
com_isartdigital_services_deltaDNA_DeltaDNA.engage = function(pDecisionPoint,pLive,pParams) {
	if(pLive == null) {
		pLive = false;
	}
	if(pParams == null) {
		pParams = { };
	}
	var lEngage = { decisionPoint : pDecisionPoint, userID : com_isartdigital_services_deltaDNA_DeltaDNA.userID, sessionID : com_isartdigital_services_deltaDNA_DeltaDNA.sessionID, platform : com_isartdigital_services_deltaDNA_DeltaDNA.platform, parameters : pParams};
	var lRequest = new haxe_Http(com_isartdigital_services_deltaDNA_DeltaDNA.engageURL + "/" + (pLive?com_isartdigital_services_deltaDNA_DeltaDNA.liveKey:com_isartdigital_services_deltaDNA_DeltaDNA.devKey));
	lRequest.addHeader("Content-Type","application/json");
	lRequest.setPostData(JSON.stringify(lEngage));
	lRequest.onData = com_isartdigital_services_deltaDNA_DeltaDNA.onData == null?com_isartdigital_services_deltaDNA_DeltaDNA._onData:com_isartdigital_services_deltaDNA_DeltaDNA.onData;
	lRequest.onError = com_isartdigital_services_deltaDNA_DeltaDNA.onError == null?com_isartdigital_services_deltaDNA_DeltaDNA._onError:com_isartdigital_services_deltaDNA_DeltaDNA.onError;
	com_isartdigital_services_deltaDNA_DeltaDNA.request(lRequest);
};
var com_isartdigital_services_facebook_Facebook = function() { };
$hxClasses["com.isartdigital.services.facebook.Facebook"] = com_isartdigital_services_facebook_Facebook;
com_isartdigital_services_facebook_Facebook.__name__ = ["com","isartdigital","services","facebook","Facebook"];
com_isartdigital_services_facebook_Facebook.load = function(pAppId,pPermissions,pParams) {
	if(com_isartdigital_services_facebook_Facebook.fb != null) {
		return;
	}
	if(pParams != null) {
		com_isartdigital_services_facebook_Facebook.params = pParams;
	}
	com_isartdigital_services_facebook_Facebook.params.appId = pAppId;
	if(pPermissions != null) {
		com_isartdigital_services_facebook_Facebook.permissions = pPermissions;
	}
	if(com_isartdigital_utils_system_DeviceCapabilities.get_isCocoonJS()) {
		haxe_Timer.delay(com_isartdigital_services_facebook_Facebook.onCocoonJsLoaded,1000);
	} else {
		window.fbAsyncInit = com_isartdigital_services_facebook_Facebook.initBrowser;
		var lDoc = window.document;
		var lScript = "script";
		var lID = "facebook-jssdk";
		var lJs;
		var lFjs = lDoc.getElementsByTagName(lScript)[0];
		if(lDoc.getElementById(com_isartdigital_services_facebook_Facebook.params.appId) != null) {
			return;
		}
		lJs = js_Boot.__cast(lDoc.createElement(lScript) , HTMLScriptElement);
		lJs.id = lID;
		lJs.src = "//connect.facebook.net/en_US/sdk.js";
		lFjs.parentNode.insertBefore(lJs,lFjs);
	}
};
com_isartdigital_services_facebook_Facebook.onCocoonJsLoaded = function() {
	if(window.Cocoon && (window.Cocoon.Social && window.Cocoon.Social.Facebook)) {
		com_isartdigital_services_facebook_Facebook.fb = window.Cocoon.Social.Facebook;
		com_isartdigital_services_facebook_Facebook.fb.init(com_isartdigital_services_facebook_Facebook.params,com_isartdigital_services_facebook_Facebook.initCocoonJs);
	}
};
com_isartdigital_services_facebook_Facebook.initBrowser = function() {
	com_isartdigital_services_facebook_Facebook.fb = FB;
	com_isartdigital_services_facebook_Facebook.fb.init(com_isartdigital_services_facebook_Facebook.params);
	com_isartdigital_services_facebook_Facebook.fb.getLoginStatus(com_isartdigital_services_facebook_Facebook.onLoginStatus);
};
com_isartdigital_services_facebook_Facebook.initCocoonJs = function(pError) {
	if(pError != null) {
		haxe_Log.trace("Init CocoonJs: " + Std.string(pError),{ fileName : "Facebook.hx", lineNumber : 132, className : "com.isartdigital.services.facebook.Facebook", methodName : "initCocoonJs"});
	} else if(pError == false) {
		if(com_isartdigital_services_facebook_Facebook.onCancel != null) {
			com_isartdigital_services_facebook_Facebook.onCancel({ status : "Facebook app not installed"});
		}
	} else {
		com_isartdigital_services_facebook_Facebook.fb.on("loginStatusChanged",com_isartdigital_services_facebook_Facebook.onLoginStatus);
		com_isartdigital_services_facebook_Facebook.fb.getLoginStatus(com_isartdigital_services_facebook_Facebook.onLoginStatus);
	}
};
com_isartdigital_services_facebook_Facebook.onLoginStatus = function(pResponse) {
	if(pResponse.status == "connected") {
		com_isartdigital_services_facebook_Facebook.token = pResponse.authResponse.accessToken;
		com_isartdigital_services_facebook_Facebook.uid = pResponse.authResponse.userID;
		if(com_isartdigital_services_facebook_Facebook.onLogin != null) {
			com_isartdigital_services_facebook_Facebook.onLogin();
		} else {
			haxe_Log.trace("Facebook Log in",{ fileName : "Facebook.hx", lineNumber : 154, className : "com.isartdigital.services.facebook.Facebook", methodName : "onLoginStatus"});
		}
	} else if(com_isartdigital_services_facebook_Facebook.isFirstAttempt) {
		haxe_Log.trace("Facebook retry Log in",{ fileName : "Facebook.hx", lineNumber : 156, className : "com.isartdigital.services.facebook.Facebook", methodName : "onLoginStatus"});
		com_isartdigital_services_facebook_Facebook.isFirstAttempt = false;
		com_isartdigital_services_facebook_Facebook.login();
	} else if(pResponse.status == "unknown") {
		if(com_isartdigital_services_facebook_Facebook.onCancel != null) {
			com_isartdigital_services_facebook_Facebook.onCancel(pResponse);
		} else {
			haxe_Log.trace("Facebook canceled Log in",{ fileName : "Facebook.hx", lineNumber : 161, className : "com.isartdigital.services.facebook.Facebook", methodName : "onLoginStatus"});
		}
	} else if(com_isartdigital_services_facebook_Facebook.onCancel != null) {
		com_isartdigital_services_facebook_Facebook.onCancel(pResponse);
	} else {
		haxe_Log.trace("Facebook canceled action",{ fileName : "Facebook.hx", lineNumber : 164, className : "com.isartdigital.services.facebook.Facebook", methodName : "onLoginStatus"});
	}
};
com_isartdigital_services_facebook_Facebook.login = function() {
	if(com_isartdigital_services_facebook_Facebook.fb == null) {
		com_isartdigital_services_facebook_Facebook.notReady();
	} else if(com_isartdigital_utils_system_DeviceCapabilities.get_isCocoonJS()) {
		com_isartdigital_services_facebook_Facebook.fb.login(com_isartdigital_services_facebook_Facebook.permissions);
	} else {
		com_isartdigital_services_facebook_Facebook.fb.login(com_isartdigital_services_facebook_Facebook.onLoginStatus,com_isartdigital_services_facebook_Facebook.permissions);
	}
};
com_isartdigital_services_facebook_Facebook.logout = function() {
	if(com_isartdigital_services_facebook_Facebook.fb == null) {
		com_isartdigital_services_facebook_Facebook.notReady();
	} else {
		com_isartdigital_services_facebook_Facebook.fb.logout(com_isartdigital_services_facebook_Facebook._onLogout);
	}
};
com_isartdigital_services_facebook_Facebook._onLogout = function(pResponse) {
	if(com_isartdigital_services_facebook_Facebook.onLogout != null) {
		com_isartdigital_services_facebook_Facebook.onLogout(pResponse);
	} else {
		haxe_Log.trace("Facebook Log out",{ fileName : "Facebook.hx", lineNumber : 185, className : "com.isartdigital.services.facebook.Facebook", methodName : "_onLogout"});
	}
};
com_isartdigital_services_facebook_Facebook.getAuthResponse = function() {
	if(com_isartdigital_services_facebook_Facebook.fb == null) {
		com_isartdigital_services_facebook_Facebook.notReady();
		return null;
	}
	return com_isartdigital_services_facebook_Facebook.fb.getAuthResponse();
};
com_isartdigital_services_facebook_Facebook.notReady = function() {
	if(com_isartdigital_services_facebook_Facebook.onNotReady != null) {
		com_isartdigital_services_facebook_Facebook.onNotReady();
	}
	if(com_isartdigital_utils_system_DeviceCapabilities.get_isCocoonJS()) {
		haxe_Log.trace("Cocoon Facebook Plugin not loaded",{ fileName : "Facebook.hx", lineNumber : 202, className : "com.isartdigital.services.facebook.Facebook", methodName : "notReady"});
	} else {
		haxe_Log.trace("Facebook SDK not loaded",{ fileName : "Facebook.hx", lineNumber : 203, className : "com.isartdigital.services.facebook.Facebook", methodName : "notReady"});
	}
};
com_isartdigital_services_facebook_Facebook.api = function(pPath,pMethod,pParams,pCallBack) {
	if(com_isartdigital_services_facebook_Facebook.fb == null) {
		com_isartdigital_services_facebook_Facebook.notReady();
	} else {
		if(com_isartdigital_utils_system_DeviceCapabilities.get_isCocoonJS()) {
			if(pParams == null) {
				pCallBack = pMethod;
				pParams = { };
				pMethod = "get";
			} else if(pCallBack == null) {
				pCallBack = pParams;
				pMethod = "get";
			}
			pParams.access_token = com_isartdigital_services_facebook_Facebook.token;
		}
		com_isartdigital_services_facebook_Facebook.fb.api(pPath,pMethod,pParams,pCallBack);
	}
};
com_isartdigital_services_facebook_Facebook.ui = function(pParams,pCallBack) {
	if(com_isartdigital_services_facebook_Facebook.fb == null) {
		com_isartdigital_services_facebook_Facebook.notReady();
	} else {
		if(com_isartdigital_utils_system_DeviceCapabilities.get_isCocoonJS()) {
			pParams.app_id = com_isartdigital_services_facebook_Facebook.params.appId;
		}
		com_isartdigital_services_facebook_Facebook.fb.ui(pParams,pCallBack);
	}
};
var com_isartdigital_utils_events_EventType = function() { };
$hxClasses["com.isartdigital.utils.events.EventType"] = com_isartdigital_utils_events_EventType;
com_isartdigital_utils_events_EventType.__name__ = ["com","isartdigital","utils","events","EventType"];
var com_isartdigital_services_facebook_events_FacebookEventType = function() { };
$hxClasses["com.isartdigital.services.facebook.events.FacebookEventType"] = com_isartdigital_services_facebook_events_FacebookEventType;
com_isartdigital_services_facebook_events_FacebookEventType.__name__ = ["com","isartdigital","services","facebook","events","FacebookEventType"];
com_isartdigital_services_facebook_events_FacebookEventType.__super__ = com_isartdigital_utils_events_EventType;
com_isartdigital_services_facebook_events_FacebookEventType.prototype = $extend(com_isartdigital_utils_events_EventType.prototype,{
	__class__: com_isartdigital_services_facebook_events_FacebookEventType
});
var com_isartdigital_services_monetization_Ads = function() { };
$hxClasses["com.isartdigital.services.monetization.Ads"] = com_isartdigital_services_monetization_Ads;
com_isartdigital_services_monetization_Ads.__name__ = ["com","isartdigital","services","monetization","Ads"];
com_isartdigital_services_monetization_Ads.getImage = function(pCallback) {
	return com_isartdigital_services_monetization_Ads.askForImage(pCallback);
};
com_isartdigital_services_monetization_Ads.askForImage = function(pCallback,pVideo) {
	if(pVideo == null) {
		pVideo = "";
	}
	if(com_isartdigital_services_monetization_Ads.current != null || com_isartdigital_utils_Config.get_data().ads != null && !com_isartdigital_utils_Config.get_data().ads) {
		return false;
	}
	var lRequest = com_isartdigital_services_monetization_Ads.initService(pCallback);
	lRequest.addParameter("ad","image");
	if(pVideo != "") {
		lRequest.addParameter("movie",pVideo);
	}
	lRequest.request();
	return true;
};
com_isartdigital_services_monetization_Ads.getMovie = function(pCallback) {
	if(com_isartdigital_services_monetization_Ads.current != null || com_isartdigital_utils_Config.get_data().ads != null && !com_isartdigital_utils_Config.get_data().ads) {
		return false;
	}
	if(com_isartdigital_utils_system_DeviceCapabilities.get_isCanvasPlus()) {
		return com_isartdigital_services_monetization_Ads.getImage(pCallback);
	}
	var lRequest = com_isartdigital_services_monetization_Ads.initService(pCallback);
	lRequest.addParameter("ad","movie");
	lRequest.request();
	return true;
};
com_isartdigital_services_monetization_Ads.initService = function(pCallback) {
	var lRequest = new com_isartdigital_services_monetization_HttpService(pCallback);
	com_isartdigital_services_monetization_Ads.callback = pCallback;
	lRequest.addParameter("type",com_isartdigital_utils_system_DeviceCapabilities.textureType);
	lRequest.addParameter("lang",com_isartdigital_utils_Config.get_language());
	lRequest.onData = com_isartdigital_services_monetization_Ads.onData;
	return lRequest;
};
com_isartdigital_services_monetization_Ads.onData = function(pData) {
	var lData = JSON.parse(pData);
	if(lData.type == "movie") {
		com_isartdigital_services_monetization_Ads.current = new com_isartdigital_services_monetization__$Ads_AdMovie(lData.id,lData.url,lData.target);
	} else {
		com_isartdigital_services_monetization_Ads.current = new com_isartdigital_services_monetization__$Ads_AdImage(lData.id,lData.url,lData.target);
	}
};
com_isartdigital_services_monetization_Ads.onQuit = function(pClose) {
	var lId = com_isartdigital_services_monetization_Ads.current.id;
	com_isartdigital_services_monetization_Ads.current.close();
	com_isartdigital_services_monetization_Ads.current = null;
	if(pClose == "end") {
		com_isartdigital_services_monetization_Ads.askForImage(com_isartdigital_services_monetization_Ads.callback,lId);
	} else {
		if(pClose == "close" || pClose == "click") {
			var lRequest = new com_isartdigital_services_monetization_HttpService();
			lRequest.addParameter("close",pClose == "click"?"click":"image");
			lRequest.request();
		}
		com_isartdigital_services_monetization_Ads.callback({ close : pClose});
		com_isartdigital_services_monetization_Ads.callback = null;
	}
};
var com_isartdigital_services_monetization__$Ads_Ad = function(pId,pUrl,pTarget) {
	com_isartdigital_utils_ui_Popin.call(this);
	this.set_modalImage("assets/black_bg.png");
	this.id = pId;
	this.url = pUrl;
	this.target = pTarget;
	this.btnQuit = new PIXI.Container();
	this.addChild(this.btnQuit);
	this.positionables.unshift({ item : this.btnQuit, align : Math.random() < 0.5?"topRight":"topLeft", offsetX : 80, offsetY : 80});
	var lCircle = new PIXI.Graphics();
	lCircle.lineStyle(4,0);
	lCircle.beginFill(16777215);
	lCircle.drawCircle(0,0,40);
	lCircle.endFill();
	this.btnQuit.addChild(lCircle);
	this.txtQuit = new PIXI.Text("",{ font : "62px Arial", fill : "#000000", align : "center"});
	this.txtQuit.anchor.set(0.5,0.5);
	this.btnQuit.addChild(this.txtQuit);
	this.btnQuit.interactive = true;
	this.btnQuit.visible = false;
	this.timerError = new haxe_Timer(15000);
	this.timerError.run = $bind(this,this.onError);
	this.x = com_isartdigital_utils_game_GameStage.getInstance().get_safeZone().width / 2;
	this.y = com_isartdigital_utils_game_GameStage.getInstance().get_safeZone().height / 2;
	com_isartdigital_utils_game_GameStage.getInstance().addChild(this);
	this.open();
};
$hxClasses["com.isartdigital.services.monetization._Ads.Ad"] = com_isartdigital_services_monetization__$Ads_Ad;
com_isartdigital_services_monetization__$Ads_Ad.__name__ = ["com","isartdigital","services","monetization","_Ads","Ad"];
com_isartdigital_services_monetization__$Ads_Ad.__super__ = com_isartdigital_utils_ui_Popin;
com_isartdigital_services_monetization__$Ads_Ad.prototype = $extend(com_isartdigital_utils_ui_Popin.prototype,{
	onError: function() {
		if(!this.btnQuit.visible) {
			this.btnQuit.visible = true;
			this.duration = 0;
			this.onTimer();
		}
		this.timerError.stop();
	}
	,onTimer: function() {
		if(this.duration <= 0) {
			if(this.timer != null) {
				this.timer.stop();
			}
			this.allowQuit();
		} else {
			this.txtQuit.text = Std.string(this.duration);
		}
		this.duration--;
	}
	,allowQuit: function() {
		this.btnQuit.removeChild(this.txtQuit);
		var lCross = new PIXI.Graphics();
		lCross.lineStyle(8,0);
		lCross.moveTo(-20,-20);
		lCross.lineTo(20,20);
		lCross.moveTo(-20,20);
		lCross.lineTo(20,-20);
		this.btnQuit.addChild(lCross);
		this.btnQuit.buttonMode = true;
		this.btnQuit.once("click",$bind(this,this.onQuit));
		this.btnQuit.once("tap",$bind(this,this.onQuit));
	}
	,createContent: function() {
	}
	,onComplete: function(pEvent) {
		this.createContent();
		this.content.anchor.set(0.5,0.5);
		this.content.scale.set(1 / com_isartdigital_utils_system_DeviceCapabilities.textureRatio,1 / com_isartdigital_utils_system_DeviceCapabilities.textureRatio);
		this.addChildAt(this.content,0);
		this.timer = new haxe_Timer(1000);
		this.duration = Math.random() < 0.5?0:5;
		this.timer.run = $bind(this,this.onTimer);
		this.onTimer();
		this.btnQuit.visible = true;
	}
	,quit: function(pType) {
		com_isartdigital_utils_game_GameStage.getInstance().removeChild(this);
		com_isartdigital_services_monetization_Ads.onQuit(pType);
	}
	,onQuit: function(pEvent) {
	}
	,close: function() {
		if(this.timer != null) {
			this.timer.stop();
		}
		if(this.timerError != null) {
			this.timerError.stop();
		}
		com_isartdigital_utils_ui_Popin.prototype.close.call(this);
	}
	,__class__: com_isartdigital_services_monetization__$Ads_Ad
});
var com_isartdigital_services_monetization__$Ads_AdImage = function(pId,pUrl,pTarget) {
	com_isartdigital_services_monetization__$Ads_Ad.call(this,pId,pUrl,pTarget);
	var lLoader = new PIXI.loaders.Loader();
	lLoader.add(this.url);
	lLoader.once("complete",$bind(this,this.onComplete));
	lLoader.load();
};
$hxClasses["com.isartdigital.services.monetization._Ads.AdImage"] = com_isartdigital_services_monetization__$Ads_AdImage;
com_isartdigital_services_monetization__$Ads_AdImage.__name__ = ["com","isartdigital","services","monetization","_Ads","AdImage"];
com_isartdigital_services_monetization__$Ads_AdImage.__super__ = com_isartdigital_services_monetization__$Ads_Ad;
com_isartdigital_services_monetization__$Ads_AdImage.prototype = $extend(com_isartdigital_services_monetization__$Ads_Ad.prototype,{
	onComplete: function(pEvent) {
		com_isartdigital_services_monetization__$Ads_Ad.prototype.onComplete.call(this,pEvent);
		this.content.interactive = true;
		this.content.buttonMode = true;
		this.content.once("click",$bind(this,this.onOpen));
		this.content.once("tap",$bind(this,this.onOpen));
	}
	,createContent: function() {
		this.content = new PIXI.Sprite(PIXI.Texture.fromImage(this.url));
	}
	,onOpen: function(pEvent) {
		window.open(this.target + "?" + Type.getClassName(js_Boot.getClass(this)).split(".").pop());
		this.quit("click");
	}
	,onQuit: function(pEvent) {
		this.quit("close");
	}
	,__class__: com_isartdigital_services_monetization__$Ads_AdImage
});
var com_isartdigital_services_monetization__$Ads_AdMovie = function(pId,pUrl,pTarget) {
	com_isartdigital_services_monetization__$Ads_Ad.call(this,pId,pUrl,pTarget);
	this.onComplete();
};
$hxClasses["com.isartdigital.services.monetization._Ads.AdMovie"] = com_isartdigital_services_monetization__$Ads_AdMovie;
com_isartdigital_services_monetization__$Ads_AdMovie.__name__ = ["com","isartdigital","services","monetization","_Ads","AdMovie"];
com_isartdigital_services_monetization__$Ads_AdMovie.__super__ = com_isartdigital_services_monetization__$Ads_Ad;
com_isartdigital_services_monetization__$Ads_AdMovie.prototype = $extend(com_isartdigital_services_monetization__$Ads_Ad.prototype,{
	onComplete: function(pEvent) {
		com_isartdigital_services_monetization__$Ads_Ad.prototype.onComplete.call(this,pEvent);
		if(com_isartdigital_utils_system_DeviceCapabilities.textureType == "ld") {
			this.content.scale.x *= 0.8;
			this.content.scale.y *= 0.8;
		}
	}
	,createContent: function() {
		var texture = PIXI.Texture.fromVideoUrl(this.url);
		var source = texture.baseTexture.source;
		source.crossOrigin = "anonymous";
		this.content = new PIXI.Sprite(texture);
		(js_Boot.__cast(this.content.texture.baseTexture.source , HTMLVideoElement)).onended = $bind(this,this.onEnded);
	}
	,onQuit: function(pEvent) {
		this.quit("cancel");
	}
	,onEnded: function() {
		this.quit("end");
	}
	,close: function() {
		if(this.content != null) {
			(js_Boot.__cast(this.content.texture.baseTexture.source , HTMLVideoElement)).onended = null;
			(js_Boot.__cast(this.content.texture.baseTexture.source , HTMLVideoElement)).pause();
		}
		com_isartdigital_services_monetization__$Ads_Ad.prototype.close.call(this);
	}
	,__class__: com_isartdigital_services_monetization__$Ads_AdMovie
});
var com_isartdigital_services_monetization_Bank = function() { };
$hxClasses["com.isartdigital.services.monetization.Bank"] = com_isartdigital_services_monetization_Bank;
com_isartdigital_services_monetization_Bank.__name__ = ["com","isartdigital","services","monetization","Bank"];
com_isartdigital_services_monetization_Bank.deposit = function(pAmount,pCallback) {
	com_isartdigital_services_monetization_Bank.initService("deposit",pAmount,pCallback);
};
com_isartdigital_services_monetization_Bank.refund = function(pAmount,pCallback) {
	com_isartdigital_services_monetization_Bank.initService("refund",pAmount,pCallback);
};
com_isartdigital_services_monetization_Bank.account = function(pCallback) {
	var lRequest = new com_isartdigital_services_monetization_HttpService(pCallback);
	lRequest.addParameter("account","");
	lRequest.request(true);
};
com_isartdigital_services_monetization_Bank.initService = function(pService,pAmount,pCallback) {
	var lRequest = new com_isartdigital_services_monetization_HttpService(pCallback);
	if(pAmount <= 0) {
		lRequest.onData(JSON.stringify({ error : "zero or negative value forbidden", code : 21}));
		return;
	}
	lRequest.addParameter(pService,Std.string(pAmount));
	lRequest.request(true);
};
var haxe_Http = function(url) {
	this.url = url;
	this.headers = new List();
	this.params = new List();
	this.async = true;
	this.withCredentials = false;
};
$hxClasses["haxe.Http"] = haxe_Http;
haxe_Http.__name__ = ["haxe","Http"];
haxe_Http.prototype = {
	addHeader: function(header,value) {
		this.headers.push({ header : header, value : value});
		return this;
	}
	,setParameter: function(param,value) {
		this.params = Lambda.filter(this.params,function(p) {
			return p.param != param;
		});
		this.params.push({ param : param, value : value});
		return this;
	}
	,addParameter: function(param,value) {
		this.params.push({ param : param, value : value});
		return this;
	}
	,setPostData: function(data) {
		this.postData = data;
		return this;
	}
	,request: function(post) {
		var me = this;
		me.responseData = null;
		var r = this.req = js_Browser.createXMLHttpRequest();
		var onreadystatechange = function(_) {
			if(r.readyState != 4) {
				return;
			}
			var s;
			try {
				s = r.status;
			} catch( e ) {
				s = null;
			}
			if(s != null && "undefined" !== typeof window) {
				var protocol = window.location.protocol.toLowerCase();
				var rlocalProtocol = new EReg("^(?:about|app|app-storage|.+-extension|file|res|widget):$","");
				var isLocal = rlocalProtocol.match(protocol);
				if(isLocal) {
					if(r.responseText != null) {
						s = 200;
					} else {
						s = 404;
					}
				}
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null) {
				me.onStatus(s);
			}
			if(s != null && s >= 200 && s < 400) {
				me.req = null;
				me.onData(me.responseData = r.responseText);
			} else if(s == null) {
				me.req = null;
				me.onError("Failed to connect or resolve host");
			} else {
				switch(s) {
				case 12007:
					me.req = null;
					me.onError("Unknown host");
					break;
				case 12029:
					me.req = null;
					me.onError("Failed to connect to host");
					break;
				default:
					me.req = null;
					me.responseData = r.responseText;
					me.onError("Http Error #" + r.status);
				}
			}
		};
		if(this.async) {
			r.onreadystatechange = onreadystatechange;
		}
		var uri = this.postData;
		if(uri != null) {
			post = true;
		} else {
			var _g_head = this.params.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var p = val;
				if(uri == null) {
					uri = "";
				} else {
					uri += "&";
				}
				uri += encodeURIComponent(p.param) + "=" + encodeURIComponent(p.value);
			}
		}
		try {
			if(post) {
				r.open("POST",this.url,this.async);
			} else if(uri != null) {
				var question = this.url.split("?").length <= 1;
				r.open("GET",this.url + (question?"?":"&") + uri,this.async);
				uri = null;
			} else {
				r.open("GET",this.url,this.async);
			}
		} catch( e1 ) {
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			me.req = null;
			this.onError(e1.toString());
			return;
		}
		r.withCredentials = this.withCredentials;
		if(!Lambda.exists(this.headers,function(h) {
			return h.header == "Content-Type";
		}) && post && this.postData == null) {
			r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		}
		var _g_head1 = this.headers.h;
		while(_g_head1 != null) {
			var val1 = _g_head1.item;
			_g_head1 = _g_head1.next;
			var h1 = val1;
			r.setRequestHeader(h1.header,h1.value);
		}
		r.send(uri);
		if(!this.async) {
			onreadystatechange(null);
		}
	}
	,onData: function(data) {
	}
	,onError: function(msg) {
	}
	,onStatus: function(status) {
	}
	,__class__: haxe_Http
};
var com_isartdigital_services_monetization_HttpService = function(pCallback) {
	this.callback = pCallback;
	haxe_Http.call(this,(com_isartdigital_utils_system_DeviceCapabilities.get_isCocoonJS()?"http":"https") + "://fbgame.isartdigital.com/2018_builder/pedago/broadcast/");
	if(this.callback != null) {
		this.onData = $bind(this,this._onData);
		this.onError = $bind(this,this._onError);
	}
	if(com_isartdigital_utils_Config.get_debug()) {
		this.addParameter("debug","");
	}
};
$hxClasses["com.isartdigital.services.monetization.HttpService"] = com_isartdigital_services_monetization_HttpService;
com_isartdigital_services_monetization_HttpService.__name__ = ["com","isartdigital","services","monetization","HttpService"];
com_isartdigital_services_monetization_HttpService.__super__ = haxe_Http;
com_isartdigital_services_monetization_HttpService.prototype = $extend(haxe_Http.prototype,{
	_onData: function(pData) {
		this.callback(JSON.parse(pData));
		this.callback = null;
	}
	,_onError: function(pError) {
		haxe_Log.trace(pError,{ fileName : "HttpService.hx", lineNumber : 36, className : "com.isartdigital.services.monetization.HttpService", methodName : "_onError"});
		this.callback = null;
	}
	,__class__: com_isartdigital_services_monetization_HttpService
});
var com_isartdigital_services_monetization_Wallet = function() { };
$hxClasses["com.isartdigital.services.monetization.Wallet"] = com_isartdigital_services_monetization_Wallet;
com_isartdigital_services_monetization_Wallet.__name__ = ["com","isartdigital","services","monetization","Wallet"];
com_isartdigital_services_monetization_Wallet.getMoney = function(pMail,pCallback) {
	com_isartdigital_services_monetization_Wallet.initService(pMail,pCallback).request(true);
};
com_isartdigital_services_monetization_Wallet.buy = function(pMail,pAmount,pCallback) {
	var lRequest = com_isartdigital_services_monetization_Wallet.initService(pMail,pCallback);
	if(pAmount <= 0) {
		lRequest.onData(JSON.stringify({ error : "zero or negative value forbidden", code : 21}));
		return;
	}
	lRequest.addParameter("buy",pAmount == null?"null":"" + pAmount);
	lRequest.request(true);
};
com_isartdigital_services_monetization_Wallet.initService = function(pMail,pCallback) {
	var lRequest = new com_isartdigital_services_monetization_HttpService(pCallback);
	lRequest.addParameter("wallet",pMail);
	return lRequest;
};
var com_isartdigital_utils_Debug = function() {
};
$hxClasses["com.isartdigital.utils.Debug"] = com_isartdigital_utils_Debug;
com_isartdigital_utils_Debug.__name__ = ["com","isartdigital","utils","Debug"];
com_isartdigital_utils_Debug.getInstance = function() {
	if(com_isartdigital_utils_Debug.instance == null) {
		com_isartdigital_utils_Debug.instance = new com_isartdigital_utils_Debug();
	}
	return com_isartdigital_utils_Debug.instance;
};
com_isartdigital_utils_Debug.error = function(pArg) {
	window.console.error(pArg);
};
com_isartdigital_utils_Debug.warn = function(pArg) {
	window.console.warn(pArg);
};
com_isartdigital_utils_Debug.table = function(pArg) {
	window.console.table(pArg);
};
com_isartdigital_utils_Debug.info = function(pArg) {
	window.console.info(pArg);
};
com_isartdigital_utils_Debug.prototype = {
	init: function() {
		if(com_isartdigital_utils_Config.get_fps()) {
			this.fps = new Perf("TL");
		}
		if(com_isartdigital_utils_Config.get_qrcode() && !com_isartdigital_utils_system_DeviceCapabilities.get_isCocoonJS()) {
			var lQr = new Image();
			lQr.style.position = "absolute";
			lQr.style.right = "0px";
			lQr.style.bottom = "0px";
			var lSize = 0.35 * com_isartdigital_utils_system_DeviceCapabilities.getSizeFactor() | 0;
			lQr.src = "https://chart.googleapis.com/chart?chs=" + lSize + "x" + lSize + "&cht=qr&chl=" + window.location.href + "&choe=UTF-8";
			window.document.body.appendChild(lQr);
		}
	}
	,destroy: function() {
	}
	,__class__: com_isartdigital_utils_Debug
};
var com_isartdigital_utils_events_LoadEventType = function() { };
$hxClasses["com.isartdigital.utils.events.LoadEventType"] = com_isartdigital_utils_events_LoadEventType;
com_isartdigital_utils_events_LoadEventType.__name__ = ["com","isartdigital","utils","events","LoadEventType"];
com_isartdigital_utils_events_LoadEventType.__super__ = com_isartdigital_utils_events_EventType;
com_isartdigital_utils_events_LoadEventType.prototype = $extend(com_isartdigital_utils_events_EventType.prototype,{
	__class__: com_isartdigital_utils_events_LoadEventType
});
var com_isartdigital_utils_events_MouseEventType = function() { };
$hxClasses["com.isartdigital.utils.events.MouseEventType"] = com_isartdigital_utils_events_MouseEventType;
com_isartdigital_utils_events_MouseEventType.__name__ = ["com","isartdigital","utils","events","MouseEventType"];
com_isartdigital_utils_events_MouseEventType.__super__ = com_isartdigital_utils_events_EventType;
com_isartdigital_utils_events_MouseEventType.prototype = $extend(com_isartdigital_utils_events_EventType.prototype,{
	__class__: com_isartdigital_utils_events_MouseEventType
});
var com_isartdigital_utils_events_TouchEventType = function() { };
$hxClasses["com.isartdigital.utils.events.TouchEventType"] = com_isartdigital_utils_events_TouchEventType;
com_isartdigital_utils_events_TouchEventType.__name__ = ["com","isartdigital","utils","events","TouchEventType"];
com_isartdigital_utils_events_TouchEventType.__super__ = com_isartdigital_utils_events_EventType;
com_isartdigital_utils_events_TouchEventType.prototype = $extend(com_isartdigital_utils_events_EventType.prototype,{
	__class__: com_isartdigital_utils_events_TouchEventType
});
var com_isartdigital_utils_game_BoxType = { __ename__ : true, __constructs__ : ["NONE","SIMPLE","MULTIPLE","SELF"] };
com_isartdigital_utils_game_BoxType.NONE = ["NONE",0];
com_isartdigital_utils_game_BoxType.NONE.__enum__ = com_isartdigital_utils_game_BoxType;
com_isartdigital_utils_game_BoxType.SIMPLE = ["SIMPLE",1];
com_isartdigital_utils_game_BoxType.SIMPLE.__enum__ = com_isartdigital_utils_game_BoxType;
com_isartdigital_utils_game_BoxType.MULTIPLE = ["MULTIPLE",2];
com_isartdigital_utils_game_BoxType.MULTIPLE.__enum__ = com_isartdigital_utils_game_BoxType;
com_isartdigital_utils_game_BoxType.SELF = ["SELF",3];
com_isartdigital_utils_game_BoxType.SELF.__enum__ = com_isartdigital_utils_game_BoxType;
var com_isartdigital_utils_game_Camera = function() {
	this.canStop = true;
	this.hasJustStopped = false;
	this.previousFrameY = 0;
	this.previousFrameX = 0;
	this.shaking = false;
	this.cameraShaker = new PIXI.Point(0,0);
	this.delayV = 30;
	this.countV = 0;
	this.delayH = 30;
	this.countH = 0;
	this.inertiaMin = new PIXI.Point(2,8);
	this.inertiaMax = new PIXI.Point(40,20);
};
$hxClasses["com.isartdigital.utils.game.Camera"] = com_isartdigital_utils_game_Camera;
com_isartdigital_utils_game_Camera.__name__ = ["com","isartdigital","utils","game","Camera"];
com_isartdigital_utils_game_Camera.getInstance = function() {
	if(com_isartdigital_utils_game_Camera.instance == null) {
		com_isartdigital_utils_game_Camera.instance = new com_isartdigital_utils_game_Camera();
	}
	return com_isartdigital_utils_game_Camera.instance;
};
com_isartdigital_utils_game_Camera.prototype = {
	setTarget: function(pTarget) {
		this.target = pTarget;
	}
	,getTarget: function() {
		return new PIXI.Point(this.target.x,this.target.y);
	}
	,setFocus: function(pFocus) {
		this.focus = pFocus;
	}
	,changePosition: function(pDelay) {
		if(pDelay == null) {
			pDelay = true;
		}
		if(this.target == null || this.focus == null) {
			return;
		}
		this.countH++;
		this.countV++;
		var lCenter = com_isartdigital_utils_system_DeviceCapabilities.getScreenRect(this.target.parent);
		var lFocus = this.focus.position;
		var lDeltaX = lCenter.x + lCenter.width / 2 - lFocus.x - this.target.x;
		var lDeltaY = lCenter.y + lCenter.height / 2 - lFocus.y - this.target.y;
		this.target.x += lDeltaX;
		this.target.y += lDeltaY;
		var lCurrentframeX = js_Boot.__cast(Math.round(this.target.x) , Int);
		var lCurrentframeY = js_Boot.__cast(Math.round(this.target.y) , Int);
		if(!this.canStop && this.hasJustStopped) {
			this.hasJustStopped = false;
		}
		if(lCurrentframeX == this.previousFrameX && lCurrentframeY == this.previousFrameY && this.canStop) {
			this.hasJustStopped = true;
			this.canStop = false;
		}
		this.previousFrameX = lCurrentframeX;
		this.previousFrameY = lCurrentframeY;
		if(this.shaking) {
			this.updateShake();
			this.target.x += this.cameraShaker.x;
			this.target.y += this.cameraShaker.y;
		}
	}
	,shakeScreen: function(pSmoothness,pAmplitude,pDuration,pXQuantity,pYQuantity,pFadeOut) {
		if(pFadeOut == null) {
			pFadeOut = 0.95;
		}
		if(pYQuantity == null) {
			pYQuantity = 1;
		}
		if(pXQuantity == null) {
			pXQuantity = 1;
		}
		if(pDuration == null) {
			pDuration = 30;
		}
		if(pAmplitude == null) {
			pAmplitude = 20;
		}
		if(pSmoothness == null) {
			pSmoothness = 10;
		}
		if(this.shaking && this.shakeAmplitude >= pAmplitude) {
			return;
		}
		this.shaking = true;
		this.shakeSmoothness = pSmoothness;
		this.shakeTimer = pDuration;
		this.shakeAmplitude = pAmplitude;
		this.shakeFadeOut = pFadeOut;
		this.shakeXQuantity = pXQuantity;
		this.shakeYQuantity = pYQuantity;
	}
	,updateShake: function() {
		this.shakeTimer--;
		if(this.shakeTimer <= 0) {
			this.shaking = false;
			return;
		}
		this.cameraShaker.x = this.shakeXQuantity * ((0.8 + Math.random() * 0.19999999999999996) * Math.cos(this.shakeTimer * 2 * Math.PI / this.shakeSmoothness) * this.shakeAmplitude);
		this.cameraShaker.y = this.shakeYQuantity * ((0.8 + Math.random() * 0.19999999999999996) * Math.sin(this.shakeTimer * 2 * Math.PI / this.shakeSmoothness) * this.shakeAmplitude);
		this.shakeAmplitude *= this.shakeFadeOut;
	}
	,getInertiaX: function() {
		if(_$UInt_UInt_$Impl_$.gt(this.countH,this.delayH)) {
			return this.inertiaMin.x;
		}
		return this.inertiaMax.x + _$UInt_UInt_$Impl_$.toFloat(this.countH) * (this.inertiaMin.x - this.inertiaMax.x) / _$UInt_UInt_$Impl_$.toFloat(this.delayH);
	}
	,getInertiaY: function() {
		if(_$UInt_UInt_$Impl_$.gt(this.countV,this.delayV)) {
			return this.inertiaMin.y;
		}
		return this.inertiaMax.y + _$UInt_UInt_$Impl_$.toFloat(this.countV) * (this.inertiaMin.y - this.inertiaMax.y) / _$UInt_UInt_$Impl_$.toFloat(this.delayV);
	}
	,setPosition: function() {
		com_isartdigital_utils_game_GameStage.getInstance().render();
		this.changePosition(false);
	}
	,move: function() {
		this.changePosition();
	}
	,resetX: function() {
		this.countH = 0;
	}
	,resetY: function() {
		this.countV = 0;
	}
	,getFocusCoord: function() {
		return this.target.toLocal(this.focus.position,this.focus.parent);
	}
	,destroy: function() {
		com_isartdigital_utils_game_Camera.instance = null;
	}
	,__class__: com_isartdigital_utils_game_Camera
};
var com_isartdigital_utils_game_CollisionManager = function() {
};
$hxClasses["com.isartdigital.utils.game.CollisionManager"] = com_isartdigital_utils_game_CollisionManager;
com_isartdigital_utils_game_CollisionManager.__name__ = ["com","isartdigital","utils","game","CollisionManager"];
com_isartdigital_utils_game_CollisionManager.hitTestObject = function(pObjectA,pObjectB) {
	return com_isartdigital_utils_game_CollisionManager.getIntersection(pObjectA.getBounds(),pObjectB.getBounds());
};
com_isartdigital_utils_game_CollisionManager.hitTestPoint = function(pItem,pGlobalPoint) {
	var lPoint = pItem.toLocal(pGlobalPoint);
	var x = lPoint.x;
	var y = lPoint.y;
	if(pItem.hitArea != null && pItem.hitArea.contains != null) {
		return pItem.hitArea.contains(x,y);
	} else if(js_Boot.__instanceof(pItem,PIXI.Sprite)) {
		var lSprite = js_Boot.__cast(pItem , PIXI.Sprite);
		var lWidth = lSprite.texture.frame.width;
		var lHeight = lSprite.texture.frame.height;
		var lX1 = -lWidth * lSprite.anchor.x;
		var lY1;
		if(x > lX1 && x < lX1 + lWidth) {
			lY1 = -lHeight * lSprite.anchor.y;
			if(y > lY1 && y < lY1 + lHeight) {
				return true;
			}
		}
	} else if(js_Boot.__instanceof(pItem,PIXI.Graphics)) {
		var lGraphicsData = pItem.graphicsData;
		var _g1 = 0;
		var _g = lGraphicsData.length;
		while(_g1 < _g) {
			var i = _g1++;
			var lData = lGraphicsData[i];
			if(!lData.fill) {
				continue;
			}
			if(lData.shape != null && lData.shape.contains(x,y)) {
				return true;
			}
		}
	} else if(js_Boot.__instanceof(pItem,PIXI.Container)) {
		var lContainer = js_Boot.__cast(pItem , PIXI.Container);
		var lLength = lContainer.children.length;
		var _g11 = 0;
		var _g2 = lLength;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if(com_isartdigital_utils_game_CollisionManager.hitTestPoint(lContainer.children[i1],pGlobalPoint)) {
				return true;
			}
		}
	}
	return false;
};
com_isartdigital_utils_game_CollisionManager.hasCollision = function(pHitBoxA,pHitBoxB,pPointsA,pPointsB) {
	if(pHitBoxA == null || pHitBoxB == null) {
		return false;
	}
	if(!com_isartdigital_utils_game_CollisionManager.hitTestObject(pHitBoxA,pHitBoxB)) {
		return false;
	}
	if(pPointsA == null && pPointsB == null) {
		return true;
	}
	if(pPointsA != null) {
		return com_isartdigital_utils_game_CollisionManager.testPoints(pPointsA,pHitBoxB);
	}
	if(pPointsB != null) {
		return com_isartdigital_utils_game_CollisionManager.testPoints(pPointsB,pHitBoxA);
	}
	return false;
};
com_isartdigital_utils_game_CollisionManager.getIntersection = function(pRectA,pRectB) {
	return !(pRectB.x > pRectA.x + pRectA.width || pRectB.x + pRectB.width < pRectA.x || pRectB.y > pRectA.y + pRectA.height || pRectB.y + pRectB.height < pRectA.y);
};
com_isartdigital_utils_game_CollisionManager.testPoints = function(pHitPoints,pHitBox) {
	var lLength = pHitPoints.length;
	var _g1 = 0;
	while(_g1 < lLength) if(com_isartdigital_utils_game_CollisionManager.hitTestPoint(pHitBox,pHitPoints[_g1++])) {
		return true;
	}
	return false;
};
com_isartdigital_utils_game_CollisionManager.prototype = {
	__class__: com_isartdigital_utils_game_CollisionManager
};
var com_isartdigital_utils_game_GameStage = function() {
	this._safeZone = new PIXI.Rectangle(0,0,2048,1366);
	this._scaleMode = com_isartdigital_utils_game_GameStageScale.SHOW_ALL;
	this._alignMode = com_isartdigital_utils_game_GameStageAlign.CENTER;
	PIXI.Container.call(this);
	this.contextualContainer = new PIXI.Container();
	this.contextualContainer.name = "contextualContainer";
	this.addChild(this.contextualContainer);
	this.infoBulleContainer = new PIXI.Container();
	this.infoBulleContainer.name = "infoBulleContainer";
	this.contextualContainer.addChild(this.infoBulleContainer);
	this.alienContainer = new PIXI.Container();
	this.alienContainer.name = "alienContainer";
	this.infoBulleContainer.addChild(this.alienContainer);
	this.gameContainer = new PIXI.Container();
	this.gameContainer.name = "gameContainer";
	this.alienContainer.addChild(this.gameContainer);
	this.screensContainer = new PIXI.Container();
	this.screensContainer.name = "screenContainer";
	this.addChild(this.screensContainer);
	this.hudContainer = new PIXI.Container();
	this.hudContainer.name = "hudContainer";
	this.addChild(this.hudContainer);
	this.popinsContainer = new PIXI.Container();
	this.popinsContainer.name = "popinContainer";
	this.addChild(this.popinsContainer);
	this.ftueContainer = new PIXI.Container();
	this.ftueContainer.name = "ftueContainer";
	this.addChild(this.ftueContainer);
	this.particlesContainer = new PIXI.Container();
	this.particlesContainer.name = "particlesContainer";
	this.addChild(this.particlesContainer);
	this.ressourcesContainer = new PIXI.Container();
	this.ressourcesContainer.name = "ressourcesContainer";
	this.addChild(this.ressourcesContainer);
	this.bubblesContainer = new PIXI.Container();
	this.bubblesContainer.name = "bubblesContainer";
	this.addChild(this.bubblesContainer);
};
$hxClasses["com.isartdigital.utils.game.GameStage"] = com_isartdigital_utils_game_GameStage;
com_isartdigital_utils_game_GameStage.__name__ = ["com","isartdigital","utils","game","GameStage"];
com_isartdigital_utils_game_GameStage.getInstance = function() {
	if(com_isartdigital_utils_game_GameStage.instance == null) {
		com_isartdigital_utils_game_GameStage.instance = new com_isartdigital_utils_game_GameStage();
	}
	return com_isartdigital_utils_game_GameStage.instance;
};
com_isartdigital_utils_game_GameStage.__super__ = PIXI.Container;
com_isartdigital_utils_game_GameStage.prototype = $extend(PIXI.Container.prototype,{
	init: function(pRender,pSafeZoneWidth,pSafeZoneHeight,pCenterGameContainer,pCenterInfoBulleContainer,pCenterScreensContainer,pCenterPopinContainer,pCenterHudContainer,pCenterFtueContainer,pCenterContextualContainer,pCenterParticlesContainer,pCenterRessourcesContainer,pCenterBubblesContainer,pAlienContainer) {
		if(pAlienContainer == null) {
			pAlienContainer = false;
		}
		if(pCenterBubblesContainer == null) {
			pCenterBubblesContainer = false;
		}
		if(pCenterRessourcesContainer == null) {
			pCenterRessourcesContainer = false;
		}
		if(pCenterParticlesContainer == null) {
			pCenterParticlesContainer = false;
		}
		if(pCenterContextualContainer == null) {
			pCenterContextualContainer = false;
		}
		if(pCenterFtueContainer == null) {
			pCenterFtueContainer = false;
		}
		if(pCenterHudContainer == null) {
			pCenterHudContainer = false;
		}
		if(pCenterPopinContainer == null) {
			pCenterPopinContainer = true;
		}
		if(pCenterScreensContainer == null) {
			pCenterScreensContainer = true;
		}
		if(pCenterInfoBulleContainer == null) {
			pCenterInfoBulleContainer = false;
		}
		if(pCenterGameContainer == null) {
			pCenterGameContainer = false;
		}
		if(pSafeZoneHeight == null) {
			pSafeZoneHeight = 2048;
		}
		if(pSafeZoneWidth == null) {
			pSafeZoneWidth = 2048;
		}
		this._safeZone = new PIXI.Rectangle(0,0,_$UInt_UInt_$Impl_$.toFloat(pSafeZoneWidth),_$UInt_UInt_$Impl_$.toFloat(pSafeZoneHeight));
		if(pCenterGameContainer) {
			this.gameContainer.x = this.get_safeZone().width / 2;
			this.gameContainer.y = this.get_safeZone().height / 2;
		}
		if(pCenterInfoBulleContainer) {
			this.infoBulleContainer.x = this.get_safeZone().width / 2;
			this.infoBulleContainer.y = this.get_safeZone().height / 2;
		}
		if(pCenterScreensContainer) {
			this.screensContainer.x = this.get_safeZone().width / 2;
			this.screensContainer.y = this.get_safeZone().height / 2;
		}
		if(pCenterPopinContainer) {
			this.popinsContainer.x = this.get_safeZone().width / 2;
			this.popinsContainer.y = this.get_safeZone().height / 2;
		}
		if(pCenterHudContainer) {
			this.hudContainer.x = this.get_safeZone().width / 2;
			this.hudContainer.y = this.get_safeZone().height / 2;
		}
		if(pCenterFtueContainer) {
			this.ftueContainer.x = this.get_safeZone().width / 2;
			this.ftueContainer.y = this.get_safeZone().height / 2;
		}
		this._render = pRender;
		if(pCenterContextualContainer) {
			this.contextualContainer.x = this.get_safeZone().width / 2;
			this.contextualContainer.y = this.get_safeZone().height / 2;
		}
		this._render = pRender;
		if(pCenterParticlesContainer) {
			this.particlesContainer.x = this.get_safeZone().width / 2;
			this.particlesContainer.y = this.get_safeZone().height / 2;
		}
		this._render = pRender;
		if(pCenterRessourcesContainer) {
			this.ressourcesContainer.x = this.get_safeZone().width / 2;
			this.ressourcesContainer.y = this.get_safeZone().height / 2;
		}
		this._render = pRender;
		if(pCenterBubblesContainer) {
			this.bubblesContainer.x = this.get_safeZone().width / 2;
			this.bubblesContainer.y = this.get_safeZone().height / 2;
		}
		this._render = pRender;
		if(pAlienContainer) {
			this.alienContainer.x = this.get_safeZone().width / 2;
			this.alienContainer.y = this.get_safeZone().height / 2;
		}
		this._render = pRender;
	}
	,resize: function() {
		var lWidth = com_isartdigital_utils_system_DeviceCapabilities.get_width();
		var lHeight = com_isartdigital_utils_system_DeviceCapabilities.get_height();
		var lRatio = Math.round(10000 * Math.min(_$UInt_UInt_$Impl_$.toFloat(lWidth) / this.get_safeZone().width,_$UInt_UInt_$Impl_$.toFloat(lHeight) / this.get_safeZone().height)) / 10000;
		if(this.get_scaleMode() == com_isartdigital_utils_game_GameStageScale.SHOW_ALL) {
			this.scale.set(lRatio,lRatio);
		} else {
			this.scale.set(com_isartdigital_utils_system_DeviceCapabilities.textureRatio,com_isartdigital_utils_system_DeviceCapabilities.textureRatio);
		}
		if(this.get_alignMode() == com_isartdigital_utils_game_GameStageAlign.LEFT || this.get_alignMode() == com_isartdigital_utils_game_GameStageAlign.TOP_LEFT || this.get_alignMode() == com_isartdigital_utils_game_GameStageAlign.BOTTOM_LEFT) {
			this.x = 0;
		} else if(this.get_alignMode() == com_isartdigital_utils_game_GameStageAlign.RIGHT || this.get_alignMode() == com_isartdigital_utils_game_GameStageAlign.TOP_RIGHT || this.get_alignMode() == com_isartdigital_utils_game_GameStageAlign.BOTTOM_RIGHT) {
			this.x = _$UInt_UInt_$Impl_$.toFloat(lWidth) - this.get_safeZone().width * this.scale.x;
		} else {
			this.x = (_$UInt_UInt_$Impl_$.toFloat(lWidth) - this.get_safeZone().width * this.scale.x) / 2;
		}
		if(this.get_alignMode() == com_isartdigital_utils_game_GameStageAlign.TOP || this.get_alignMode() == com_isartdigital_utils_game_GameStageAlign.TOP_LEFT || this.get_alignMode() == com_isartdigital_utils_game_GameStageAlign.TOP_RIGHT) {
			this.y = 0;
		} else if(this.get_alignMode() == com_isartdigital_utils_game_GameStageAlign.BOTTOM || this.get_alignMode() == com_isartdigital_utils_game_GameStageAlign.BOTTOM_LEFT || this.get_alignMode() == com_isartdigital_utils_game_GameStageAlign.BOTTOM_RIGHT) {
			this.y = _$UInt_UInt_$Impl_$.toFloat(lHeight) - this.get_safeZone().height * this.scale.y;
		} else {
			this.y = (_$UInt_UInt_$Impl_$.toFloat(lHeight) - this.get_safeZone().height * this.scale.y) / 2;
		}
		this.render();
		this.emit("resize",{ width : lWidth, height : lHeight});
		if(com_isartdigital_utils_system_DeviceCapabilities.get_system() == "Desktop") {
			com_isartdigital_ruby_game_controller_MouseController.getInstance().init();
		}
	}
	,render: function() {
		if(this._render != null) {
			this._render();
		}
	}
	,get_alignMode: function() {
		return this._alignMode;
	}
	,set_alignMode: function(pAlign) {
		this._alignMode = pAlign;
		this.resize();
		return this._alignMode;
	}
	,get_scaleMode: function() {
		return this._scaleMode;
	}
	,set_scaleMode: function(pScale) {
		this._scaleMode = pScale;
		this.resize();
		return this._scaleMode;
	}
	,get_safeZone: function() {
		return this._safeZone;
	}
	,getGameContainer: function() {
		return this.gameContainer;
	}
	,getInfoBulleContainer: function() {
		return this.infoBulleContainer;
	}
	,getScreensContainer: function() {
		return this.screensContainer;
	}
	,getHudContainer: function() {
		return this.hudContainer;
	}
	,getPopinsContainer: function() {
		return this.popinsContainer;
	}
	,getFtueContainer: function() {
		return this.ftueContainer;
	}
	,getContextualContainer: function() {
		return this.contextualContainer;
	}
	,getParticlesContainer: function() {
		return this.particlesContainer;
	}
	,getRessourcesContainer: function() {
		return this.ressourcesContainer;
	}
	,getAlienContainer: function() {
		return this.alienContainer;
	}
	,getBubblesContainer: function() {
		return this.bubblesContainer;
	}
	,destroy: function() {
		com_isartdigital_utils_game_GameStage.instance = null;
		PIXI.Container.prototype.destroy.call(this,true);
	}
	,__class__: com_isartdigital_utils_game_GameStage
	,__properties__: {get_safeZone:"get_safeZone",set_scaleMode:"set_scaleMode",get_scaleMode:"get_scaleMode",set_alignMode:"set_alignMode",get_alignMode:"get_alignMode"}
});
var com_isartdigital_utils_game_GameStageAlign = { __ename__ : true, __constructs__ : ["TOP","TOP_LEFT","TOP_RIGHT","CENTER","LEFT","RIGHT","BOTTOM","BOTTOM_LEFT","BOTTOM_RIGHT"] };
com_isartdigital_utils_game_GameStageAlign.TOP = ["TOP",0];
com_isartdigital_utils_game_GameStageAlign.TOP.__enum__ = com_isartdigital_utils_game_GameStageAlign;
com_isartdigital_utils_game_GameStageAlign.TOP_LEFT = ["TOP_LEFT",1];
com_isartdigital_utils_game_GameStageAlign.TOP_LEFT.__enum__ = com_isartdigital_utils_game_GameStageAlign;
com_isartdigital_utils_game_GameStageAlign.TOP_RIGHT = ["TOP_RIGHT",2];
com_isartdigital_utils_game_GameStageAlign.TOP_RIGHT.__enum__ = com_isartdigital_utils_game_GameStageAlign;
com_isartdigital_utils_game_GameStageAlign.CENTER = ["CENTER",3];
com_isartdigital_utils_game_GameStageAlign.CENTER.__enum__ = com_isartdigital_utils_game_GameStageAlign;
com_isartdigital_utils_game_GameStageAlign.LEFT = ["LEFT",4];
com_isartdigital_utils_game_GameStageAlign.LEFT.__enum__ = com_isartdigital_utils_game_GameStageAlign;
com_isartdigital_utils_game_GameStageAlign.RIGHT = ["RIGHT",5];
com_isartdigital_utils_game_GameStageAlign.RIGHT.__enum__ = com_isartdigital_utils_game_GameStageAlign;
com_isartdigital_utils_game_GameStageAlign.BOTTOM = ["BOTTOM",6];
com_isartdigital_utils_game_GameStageAlign.BOTTOM.__enum__ = com_isartdigital_utils_game_GameStageAlign;
com_isartdigital_utils_game_GameStageAlign.BOTTOM_LEFT = ["BOTTOM_LEFT",7];
com_isartdigital_utils_game_GameStageAlign.BOTTOM_LEFT.__enum__ = com_isartdigital_utils_game_GameStageAlign;
com_isartdigital_utils_game_GameStageAlign.BOTTOM_RIGHT = ["BOTTOM_RIGHT",8];
com_isartdigital_utils_game_GameStageAlign.BOTTOM_RIGHT.__enum__ = com_isartdigital_utils_game_GameStageAlign;
var com_isartdigital_utils_game_GameStageScale = { __ename__ : true, __constructs__ : ["NO_SCALE","SHOW_ALL"] };
com_isartdigital_utils_game_GameStageScale.NO_SCALE = ["NO_SCALE",0];
com_isartdigital_utils_game_GameStageScale.NO_SCALE.__enum__ = com_isartdigital_utils_game_GameStageScale;
com_isartdigital_utils_game_GameStageScale.SHOW_ALL = ["SHOW_ALL",1];
com_isartdigital_utils_game_GameStageScale.SHOW_ALL.__enum__ = com_isartdigital_utils_game_GameStageScale;
var com_isartdigital_utils_game_clipping_Cell = function() {
	this.list = [];
};
$hxClasses["com.isartdigital.utils.game.clipping.Cell"] = com_isartdigital_utils_game_clipping_Cell;
com_isartdigital_utils_game_clipping_Cell.__name__ = ["com","isartdigital","utils","game","clipping","Cell"];
com_isartdigital_utils_game_clipping_Cell.prototype = {
	add: function(pInstance) {
		if(this.list.indexOf(pInstance) == -1) {
			this.list.push(pInstance);
		}
	}
	,__class__: com_isartdigital_utils_game_clipping_Cell
};
var com_isartdigital_utils_game_clipping_CellManager = function() {
};
$hxClasses["com.isartdigital.utils.game.clipping.CellManager"] = com_isartdigital_utils_game_clipping_CellManager;
com_isartdigital_utils_game_clipping_CellManager.__name__ = ["com","isartdigital","utils","game","clipping","CellManager"];
com_isartdigital_utils_game_clipping_CellManager.getInstance = function() {
	if(com_isartdigital_utils_game_clipping_CellManager.instance == null) {
		com_isartdigital_utils_game_clipping_CellManager.instance = new com_isartdigital_utils_game_clipping_CellManager();
	}
	return com_isartdigital_utils_game_clipping_CellManager.instance;
};
com_isartdigital_utils_game_clipping_CellManager.prototype = {
	initGrid: function(pLevelContainer) {
		com_isartdigital_utils_game_clipping_CellManager.level = new haxe_ds_IntMap();
		var lMap;
		var lCell;
		this.xMin = Math.floor(pLevelContainer.x);
		this.yMin = Math.floor(pLevelContainer.y);
		this.xMax = Math.ceil((this.xMin + pLevelContainer.width) / 400);
		this.yMax = Math.ceil((this.yMin + pLevelContainer.height) / 400);
		var _g1 = this.xMin;
		var _g = this.xMax;
		while(_g1 < _g) {
			var i = _g1++;
			lMap = new haxe_ds_IntMap();
			var _g3 = this.yMin;
			var _g2 = this.yMax;
			while(_g3 < _g2) {
				var j = _g3++;
				lCell = new com_isartdigital_utils_game_clipping_Cell();
				lMap.h[j] = lCell;
			}
			com_isartdigital_utils_game_clipping_CellManager.level.h[i] = lMap;
		}
	}
	,setCell: function(pElem) {
		var lArray = this.getCells(pElem.globalX,pElem.globalY,pElem.width,pElem.height);
		var lPoint;
		var lCell;
		var _g1 = 0;
		var _g = lArray.length;
		while(_g1 < _g) {
			lPoint = lArray[_g1++];
			if(this.isCellExist(lPoint) == null) {
				this.increaseGrid(js_Boot.__cast(lPoint.x , Int),js_Boot.__cast(lPoint.y , Int));
			}
			lCell = com_isartdigital_utils_game_clipping_CellManager.level.h[js_Boot.__cast(lPoint.x , Int)].get(js_Boot.__cast(lPoint.y , Int));
			lCell.add(pElem.instanceID);
		}
	}
	,getCells: function(pX,pY,pWidth,pHeight) {
		var lArray = [];
		var lXmin = Math.floor(pX / 400);
		var lYmin = Math.floor(pY / 400);
		var lPoint = new PIXI.Point(lXmin,lYmin);
		var lNumberCellX = this.checkNextCell(lXmin,400,lXmin + pWidth);
		var lNumberCellY = this.checkNextCell(lYmin,400,lYmin + pHeight);
		var _g1 = 0;
		var _g = lNumberCellX + 1;
		while(_g1 < _g) {
			var i = _g1++;
			var _g3 = 0;
			var _g2 = lNumberCellY + 1;
			while(_g3 < _g2) {
				lPoint = new PIXI.Point(lXmin + i,lYmin + _g3++);
				lArray.push(lPoint);
			}
		}
		return lArray;
	}
	,isCellExist: function(pPoint) {
		if(com_isartdigital_utils_game_clipping_CellManager.level.h[js_Boot.__cast(pPoint.x , Int)] == null) {
			return null;
		}
		return com_isartdigital_utils_game_clipping_CellManager.level.h[js_Boot.__cast(pPoint.x , Int)].get(js_Boot.__cast(pPoint.y , Int));
	}
	,increaseGrid: function(pX,pY) {
		if(com_isartdigital_utils_game_clipping_CellManager.level.h[pX] == null) {
			var lMap = new haxe_ds_IntMap();
			com_isartdigital_utils_game_clipping_CellManager.level.h[pX] = lMap;
		}
		if(com_isartdigital_utils_game_clipping_CellManager.level.h[pX].get(pY) == null) {
			var lCell = new com_isartdigital_utils_game_clipping_Cell();
			com_isartdigital_utils_game_clipping_CellManager.level.h[pX].set(pY,lCell);
		}
		this.changeGridSize(pX,pY);
	}
	,changeGridSize: function(pX,pY) {
		if(pX < this.xMin) {
			this.xMin = pX;
		} else if(pX > this.xMax) {
			this.xMax = pX;
		}
		if(pY < this.yMin) {
			this.yMin = pY;
		} else if(pY > this.yMax) {
			this.yMax = pY;
		}
	}
	,checkNextCell: function(pX,pStepsSize,pDistance) {
		var lNumberCell = 0;
		if(pX + pStepsSize <= pDistance) {
			lNumberCell = this.checkNextCell(pX + pStepsSize,pStepsSize,pDistance) + 1;
		}
		return lNumberCell;
	}
	,destroy: function() {
		com_isartdigital_utils_game_clipping_CellManager.instance = null;
	}
	,__class__: com_isartdigital_utils_game_clipping_CellManager
};
var com_isartdigital_utils_game_clipping_ClippingManager = function() {
	this.saveInstances = new haxe_ds_StringMap();
};
$hxClasses["com.isartdigital.utils.game.clipping.ClippingManager"] = com_isartdigital_utils_game_clipping_ClippingManager;
com_isartdigital_utils_game_clipping_ClippingManager.__name__ = ["com","isartdigital","utils","game","clipping","ClippingManager"];
com_isartdigital_utils_game_clipping_ClippingManager.getInstance = function() {
	if(com_isartdigital_utils_game_clipping_ClippingManager.instance == null) {
		com_isartdigital_utils_game_clipping_ClippingManager.instance = new com_isartdigital_utils_game_clipping_ClippingManager();
	}
	return com_isartdigital_utils_game_clipping_ClippingManager.instance;
};
com_isartdigital_utils_game_clipping_ClippingManager.clearSave = function() {
};
com_isartdigital_utils_game_clipping_ClippingManager.prototype = {
	init: function(pScreen) {
		this.screen = pScreen;
		com_isartdigital_utils_game_clipping_CellManager.getInstance().initGrid(this.screen);
		this.setLevel(this.getData());
		this.initClippingArea(this.screen);
	}
	,initClippingArea: function(pScreen) {
		this.toAdd = new haxe_ds_StringMap();
		var i = com_isartdigital_utils_game_pooling_PoolObject.activeObjectList.length - 1;
		while(i >= 0) {
			com_isartdigital_utils_game_pooling_PoolObject.activeObjectList[i].dispose();
			--i;
		}
		var lHeight = pScreen.height;
		var lWidth = pScreen.width;
		this.oldColLeft = Math.floor(pScreen.x / 400) - 4;
		this.oldColRight = Math.ceil((pScreen.x + lWidth) / 400) + 4;
		this.oldRowTop = Math.floor(pScreen.y / 400) - 4;
		this.oldRowBot = Math.ceil((pScreen.y + lHeight) / 400) + 4;
		this.setToAddInGrid(this.oldColLeft,this.oldColRight,this.oldRowTop,this.oldRowBot);
		this.displayToAdd();
	}
	,setLevel: function(pArray) {
		if(pArray.length <= 0) {
			return;
		}
		var _g1 = 0;
		var _g = pArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			com_isartdigital_utils_game_clipping_CellManager.getInstance().setCell(pArray[i]);
		}
	}
	,getData: function() {
		var lArray = [];
		var _this = com_isartdigital_utils_game_pooling_PoolObject.elementList;
		var tmp = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(tmp.hasNext()) lArray.push(tmp.next());
		return lArray;
	}
	,clipping: function(pScreen) {
		var lHeight = pScreen.height;
		var lWidth = pScreen.width;
		var colLeft = Math.floor(pScreen.x / 400) - 4;
		var colRight = Math.ceil((pScreen.x + lWidth) / 400) + 4;
		var rowTop = Math.floor(pScreen.y / 400) - 4;
		var rowBot = Math.ceil((pScreen.y + lHeight) / 400) + 4;
		if(colLeft < this.oldColLeft || colRight > this.oldColRight || rowTop < this.oldRowTop || rowBot > this.oldRowBot) {
			this.toAdd = new haxe_ds_StringMap();
			if(colLeft < this.oldColLeft) {
				this.setToAddInGrid(colLeft,this.oldColLeft,rowTop,rowBot,-1);
			}
			if(colRight > this.oldColRight) {
				this.setToAddInGrid(this.oldColRight,colRight,rowTop,rowBot,1);
			}
			if(rowTop < this.oldRowTop) {
				this.setToAddInGrid(colLeft,colRight,rowTop,this.oldRowTop,0,-1);
			}
			if(rowBot > this.oldRowBot) {
				this.setToAddInGrid(colLeft,colRight,this.oldRowBot,rowBot,0,1);
			}
			this.oldColLeft = colLeft;
			this.oldColRight = colRight;
			this.oldRowBot = rowBot;
			this.oldRowTop = rowTop;
			this.displayToAdd();
			this.sortTilesInRegions();
		}
		if(colLeft > this.oldColLeft || colRight < this.oldColRight || rowTop > this.oldRowTop || rowBot < this.oldRowBot) {
			this.toRemove = new haxe_ds_StringMap();
			if(colLeft > this.oldColLeft) {
				this.setToAddInGrid(this.oldColLeft,colLeft,rowTop,rowBot,-1,0,true);
			}
			if(colRight < this.oldColRight) {
				this.setToAddInGrid(colRight,this.oldColRight,rowTop,rowBot,1,0,true);
			}
			if(rowTop > this.oldRowTop) {
				this.setToAddInGrid(colLeft,colRight,this.oldRowTop,rowTop,0,-1,true);
			}
			if(rowBot < this.oldRowBot) {
				this.setToAddInGrid(colLeft,colRight,rowBot,this.oldRowBot,0,1,true);
			}
			this.oldColLeft = colLeft;
			this.oldColRight = colRight;
			this.oldRowBot = rowBot;
			this.oldRowTop = rowTop;
			this.removeToDisplay();
		}
	}
	,sortTilesInRegions: function() {
		var tmp = com_isartdigital_ruby_game_world_World.getInstance().worldMap.iterator();
		while(tmp.hasNext()) {
			var tmp1 = tmp.next().iterator();
			while(tmp1.hasNext()) {
				var lRegion = tmp1.next();
				if(lRegion.isActive) {
					lRegion.layers[1].container.children = com_isartdigital_utils_game_iso_IsoManager.sortTiles(lRegion.layers[1].container.children);
				}
			}
		}
	}
	,setToAddInGrid: function(pColLeft,pColRight,pRowTop,pRowBot,pDirectionI,pDirectionJ,pRemove) {
		if(pRemove == null) {
			pRemove = false;
		}
		if(pDirectionJ == null) {
			pDirectionJ = 0;
		}
		if(pDirectionI == null) {
			pDirectionI = 0;
		}
		var _g1 = pColLeft;
		var _g = pColRight;
		while(_g1 < _g) {
			var i = _g1++;
			if(com_isartdigital_utils_game_clipping_CellManager.level.h[i] != null) {
				var _g3 = pRowTop;
				var _g2 = pRowBot;
				while(_g3 < _g2) {
					var j = _g3++;
					if(com_isartdigital_utils_game_clipping_CellManager.level.h[i].get(j) != null) {
						if(i <= com_isartdigital_utils_game_clipping_CellManager.getInstance().xMax && i >= com_isartdigital_utils_game_clipping_CellManager.getInstance().xMin && j <= com_isartdigital_utils_game_clipping_CellManager.getInstance().yMax && j >= com_isartdigital_utils_game_clipping_CellManager.getInstance().yMin && com_isartdigital_utils_game_clipping_CellManager.level.h[i].get(j).list.length > 0) {
							var _g4 = 0;
							var _g5 = com_isartdigital_utils_game_clipping_CellManager.level.h[i].get(j).list;
							while(_g4 < _g5.length) {
								var instance = _g5[_g4];
								++_g4;
								if(pRemove) {
									var _this = this.toRemove;
									if(__map_reserved[instance] != null) {
										_this.setReserved(instance,true);
									} else {
										_this.h[instance] = true;
									}
									if(com_isartdigital_utils_game_clipping_CellManager.level.h[i - pDirectionI] != null) {
										if(com_isartdigital_utils_game_clipping_CellManager.level.h[i - pDirectionI].get(j - pDirectionJ) != null) {
											if(com_isartdigital_utils_game_clipping_CellManager.level.h[i - pDirectionI].get(j - pDirectionJ).list.indexOf(instance) != -1) {
												var _this1 = this.toRemove;
												if(__map_reserved[instance] != null) {
													_this1.setReserved(instance,false);
												} else {
													_this1.h[instance] = false;
												}
											} else {
												var _this2 = this.toRemove;
												if(__map_reserved[instance] != null) {
													_this2.setReserved(instance,true);
												} else {
													_this2.h[instance] = true;
												}
											}
										}
									}
								} else {
									var _this3 = this.toAdd;
									if(__map_reserved[instance] != null) {
										_this3.setReserved(instance,true);
									} else {
										_this3.h[instance] = true;
									}
									if(pDirectionI != 0 || pDirectionJ != 0) {
										if(com_isartdigital_utils_game_clipping_CellManager.level.h[i - pDirectionI] != null) {
											if(com_isartdigital_utils_game_clipping_CellManager.level.h[i - pDirectionI].get(j - pDirectionJ) != null) {
												if(com_isartdigital_utils_game_clipping_CellManager.level.h[i - pDirectionI].get(j - pDirectionJ).list.indexOf(instance) != -1) {
													var _this4 = this.toAdd;
													if(__map_reserved[instance] != null) {
														_this4.setReserved(instance,false);
													} else {
														_this4.h[instance] = false;
													}
												} else {
													var _this5 = this.toAdd;
													if(__map_reserved[instance] != null) {
														_this5.setReserved(instance,true);
													} else {
														_this5.h[instance] = true;
													}
												}
											}
										}
									}
									var _g6 = 0;
									var _g7 = com_isartdigital_utils_game_pooling_PoolObject.activeObjectList;
									while(_g6 < _g7.length) {
										var object = _g7[_g6];
										++_g6;
										if(instance == object.instanceID) {
											var _this6 = this.toAdd;
											if(__map_reserved[instance] != null) {
												_this6.setReserved(instance,false);
											} else {
												_this6.h[instance] = false;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	,displayToAdd: function() {
		var tmp = this.toAdd.keys();
		while(tmp.hasNext()) {
			var instance = tmp.next();
			var _this = this.toAdd;
			if(__map_reserved[instance] != null?_this.getReserved(instance):_this.h[instance]) {
				com_isartdigital_utils_game_clipping_DisplayManager.getInstance().displayElement(instance);
			}
		}
		this.toAdd = new haxe_ds_StringMap();
	}
	,removeToDisplay: function() {
		var tmp = this.toRemove.keys();
		while(tmp.hasNext()) {
			var instance = tmp.next();
			var _this = this.toRemove;
			if(__map_reserved[instance] != null?_this.getReserved(instance):_this.h[instance]) {
				com_isartdigital_utils_game_clipping_DisplayManager.getInstance().removeElement(instance);
			}
		}
		this.toRemove = new haxe_ds_StringMap();
	}
	,destroy: function() {
		com_isartdigital_utils_game_clipping_ClippingManager.instance = null;
	}
	,__class__: com_isartdigital_utils_game_clipping_ClippingManager
};
var com_isartdigital_utils_game_clipping_DisplayManager = function() {
};
$hxClasses["com.isartdigital.utils.game.clipping.DisplayManager"] = com_isartdigital_utils_game_clipping_DisplayManager;
com_isartdigital_utils_game_clipping_DisplayManager.__name__ = ["com","isartdigital","utils","game","clipping","DisplayManager"];
com_isartdigital_utils_game_clipping_DisplayManager.getInstance = function() {
	if(com_isartdigital_utils_game_clipping_DisplayManager.instance == null) {
		com_isartdigital_utils_game_clipping_DisplayManager.instance = new com_isartdigital_utils_game_clipping_DisplayManager();
	}
	return com_isartdigital_utils_game_clipping_DisplayManager.instance;
};
com_isartdigital_utils_game_clipping_DisplayManager.prototype = {
	displayElement: function(pInstance) {
		var _this = com_isartdigital_utils_game_pooling_PoolObject.elementList;
		var lElem = __map_reserved[pInstance] != null?_this.getReserved(pInstance):_this.h[pInstance];
		var lObject = com_isartdigital_utils_game_pooling_PoolManager.getFromPool(lElem.type);
		com_isartdigital_ruby_game_world_World.getInstance().getRegion(lElem.regionX,lElem.regionY).layers[1].container.addChild(lObject);
		lObject.init(lElem);
		lObject.start();
		lObject.position = com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(new PIXI.Point(lElem.x,lElem.y));
	}
	,removeElement: function(pInstance) {
		var _g = 0;
		var _g1 = com_isartdigital_utils_game_pooling_PoolObject.activeObjectList;
		while(_g < _g1.length) {
			var object = _g1[_g];
			++_g;
			if(object.instanceID == pInstance) {
				object.dispose();
			}
		}
	}
	,destroy: function() {
		com_isartdigital_utils_game_clipping_DisplayManager.instance = null;
	}
	,__class__: com_isartdigital_utils_game_clipping_DisplayManager
};
var com_isartdigital_utils_game_factory_AnimFactory = function() {
};
$hxClasses["com.isartdigital.utils.game.factory.AnimFactory"] = com_isartdigital_utils_game_factory_AnimFactory;
com_isartdigital_utils_game_factory_AnimFactory.__name__ = ["com","isartdigital","utils","game","factory","AnimFactory"];
com_isartdigital_utils_game_factory_AnimFactory.prototype = {
	getAnim: function() {
		return this.anim;
	}
	,create: function(pID) {
		return null;
	}
	,update: function(pId) {
	}
	,setFrame: function(pAutoPlay,pStart) {
		if(pStart == null) {
			pStart = 0;
		}
		if(pAutoPlay == null) {
			pAutoPlay = true;
		}
	}
	,__class__: com_isartdigital_utils_game_factory_AnimFactory
};
var com_isartdigital_utils_game_factory_FlumpMovieAnimFactory = function() {
	com_isartdigital_utils_game_factory_AnimFactory.call(this);
};
$hxClasses["com.isartdigital.utils.game.factory.FlumpMovieAnimFactory"] = com_isartdigital_utils_game_factory_FlumpMovieAnimFactory;
com_isartdigital_utils_game_factory_FlumpMovieAnimFactory.__name__ = ["com","isartdigital","utils","game","factory","FlumpMovieAnimFactory"];
com_isartdigital_utils_game_factory_FlumpMovieAnimFactory.__super__ = com_isartdigital_utils_game_factory_AnimFactory;
com_isartdigital_utils_game_factory_FlumpMovieAnimFactory.prototype = $extend(com_isartdigital_utils_game_factory_AnimFactory.prototype,{
	getAnim: function() {
		if(this.anim != null) {
			this.anim.parent.removeChild(this.anim);
			this.anim.destroy();
			this.anim = null;
		}
		return com_isartdigital_utils_game_factory_AnimFactory.prototype.getAnim.call(this);
	}
	,create: function(pID) {
		this.anim = new pixi_flump_Movie(pID);
		return this.anim;
	}
	,setFrame: function(pAutoPlay,pStart) {
		if(pStart == null) {
			pStart = 0;
		}
		if(pAutoPlay == null) {
			pAutoPlay = true;
		}
		var lAnim = js_Boot.__cast(this.anim , pixi_flump_Movie);
		if(lAnim.get_totalFrames() > 1) {
			if(pAutoPlay) {
				lAnim.gotoAndPlay(pStart);
			} else {
				lAnim.gotoAndStop(pStart);
			}
		} else if(!pAutoPlay) {
			lAnim.stop();
		}
	}
	,__class__: com_isartdigital_utils_game_factory_FlumpMovieAnimFactory
});
var com_isartdigital_utils_game_factory_FlumpSpriteAnimFactory = function() {
	com_isartdigital_utils_game_factory_AnimFactory.call(this);
};
$hxClasses["com.isartdigital.utils.game.factory.FlumpSpriteAnimFactory"] = com_isartdigital_utils_game_factory_FlumpSpriteAnimFactory;
com_isartdigital_utils_game_factory_FlumpSpriteAnimFactory.__name__ = ["com","isartdigital","utils","game","factory","FlumpSpriteAnimFactory"];
com_isartdigital_utils_game_factory_FlumpSpriteAnimFactory.__super__ = com_isartdigital_utils_game_factory_AnimFactory;
com_isartdigital_utils_game_factory_FlumpSpriteAnimFactory.prototype = $extend(com_isartdigital_utils_game_factory_AnimFactory.prototype,{
	getAnim: function() {
		if(this.anim != null) {
			this.anim.parent.removeChild(this.anim);
			this.anim.destroy();
			this.anim = null;
		}
		return com_isartdigital_utils_game_factory_AnimFactory.prototype.getAnim.call(this);
	}
	,create: function(pID) {
		this.anim = new pixi_flump_Sprite(pID);
		return this.anim;
	}
	,setFrame: function(pAutoPlay,pStart) {
		if(pStart == null) {
			pStart = 0;
		}
		if(pAutoPlay == null) {
			pAutoPlay = true;
		}
	}
	,__class__: com_isartdigital_utils_game_factory_FlumpSpriteAnimFactory
});
var com_isartdigital_utils_game_factory_MovieClipAnimFactory = function() {
	com_isartdigital_utils_game_factory_AnimFactory.call(this);
};
$hxClasses["com.isartdigital.utils.game.factory.MovieClipAnimFactory"] = com_isartdigital_utils_game_factory_MovieClipAnimFactory;
com_isartdigital_utils_game_factory_MovieClipAnimFactory.__name__ = ["com","isartdigital","utils","game","factory","MovieClipAnimFactory"];
com_isartdigital_utils_game_factory_MovieClipAnimFactory.__properties__ = {set_textureDigits:"set_textureDigits"}
com_isartdigital_utils_game_factory_MovieClipAnimFactory.set_textureDigits = function(pDigits) {
	com_isartdigital_utils_game_factory_MovieClipAnimFactory.digits = "";
	var _g1 = 0;
	var _g = pDigits;
	while(_g1 < _g) {
		++_g1;
		com_isartdigital_utils_game_factory_MovieClipAnimFactory.digits += "0";
	}
	return com_isartdigital_utils_game_factory_MovieClipAnimFactory.textureDigits = pDigits;
};
com_isartdigital_utils_game_factory_MovieClipAnimFactory.addTextures = function(pJson) {
	var lFrames = Reflect.field(pJson,"frames");
	if(com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesDefinition == null) {
		com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesDefinition = new haxe_ds_StringMap();
	}
	if(com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesAnchor == null) {
		com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesAnchor = new haxe_ds_StringMap();
	}
	if(com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesCache == null) {
		com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesCache = new haxe_ds_StringMap();
	}
	if(com_isartdigital_utils_game_factory_MovieClipAnimFactory.digits == null) {
		com_isartdigital_utils_game_factory_MovieClipAnimFactory.set_textureDigits(com_isartdigital_utils_game_factory_MovieClipAnimFactory.textureDigits);
	}
	var lID;
	var lNum;
	var _g = 0;
	var _g1 = Reflect.fields(lFrames);
	while(_g < _g1.length) {
		var lName = _g1[_g];
		++_g;
		lID = lName.split(".")[0];
		lNum = Std.parseInt(HxOverrides.substr(lID,-1 * com_isartdigital_utils_game_factory_MovieClipAnimFactory.textureDigits,null));
		if(lNum != null) {
			lID = HxOverrides.substr(lID,0,lID.length - com_isartdigital_utils_game_factory_MovieClipAnimFactory.textureDigits);
		}
		var _this = com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesDefinition;
		if((__map_reserved[lID] != null?_this.getReserved(lID):_this.h[lID]) == null) {
			var v = lNum == null?1:lNum;
			var _this1 = com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesDefinition;
			if(__map_reserved[lID] != null) {
				_this1.setReserved(lID,v);
			} else {
				_this1.h[lID] = v;
			}
		} else {
			var _this2 = com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesDefinition;
			if(lNum > (__map_reserved[lID] != null?_this2.getReserved(lID):_this2.h[lID])) {
				var _this3 = com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesDefinition;
				if(__map_reserved[lID] != null) {
					_this3.setReserved(lID,lNum);
				} else {
					_this3.h[lID] = lNum;
				}
			}
		}
		var _this4 = com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesAnchor;
		if((__map_reserved[lID] != null?_this4.getReserved(lID):_this4.h[lID]) == null) {
			var v1 = Reflect.field(lFrames,lName).pivot;
			var _this5 = com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesAnchor;
			if(__map_reserved[lID] != null) {
				_this5.setReserved(lID,v1);
			} else {
				_this5.h[lID] = v1;
			}
		}
	}
};
com_isartdigital_utils_game_factory_MovieClipAnimFactory.clearTextures = function(pJson) {
	var lFrames = Reflect.field(pJson,"frames");
	if(com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesDefinition == null) {
		return;
	}
	var lNum;
	var _g = 0;
	var _g1 = Reflect.fields(lFrames);
	while(_g < _g1.length) {
		var lID = _g1[_g];
		++_g;
		lID = lID.split(".")[0];
		lNum = Std.parseInt(HxOverrides.substr(lID,-1 * com_isartdigital_utils_game_factory_MovieClipAnimFactory.textureDigits,null));
		if(lNum != null) {
			lID = HxOverrides.substr(lID,0,lID.length - com_isartdigital_utils_game_factory_MovieClipAnimFactory.textureDigits);
		}
		var _this = com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesDefinition;
		if(__map_reserved[lID] != null) {
			_this.setReserved(lID,null);
		} else {
			_this.h[lID] = null;
		}
		var _this1 = com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesAnchor;
		if(__map_reserved[lID] != null) {
			_this1.setReserved(lID,null);
		} else {
			_this1.h[lID] = null;
		}
		var _this2 = com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesCache;
		if(__map_reserved[lID] != null) {
			_this2.setReserved(lID,null);
		} else {
			_this2.h[lID] = null;
		}
	}
};
com_isartdigital_utils_game_factory_MovieClipAnimFactory.__super__ = com_isartdigital_utils_game_factory_AnimFactory;
com_isartdigital_utils_game_factory_MovieClipAnimFactory.prototype = $extend(com_isartdigital_utils_game_factory_AnimFactory.prototype,{
	create: function(pID) {
		this.anim = new PIXI.extras.MovieClip(this.getTextures(pID));
		var _this = com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesAnchor;
		(js_Boot.__cast(this.anim , PIXI.extras.MovieClip)).anchor = __map_reserved[pID] != null?_this.getReserved(pID):_this.h[pID];
		return this.anim;
	}
	,update: function(pID) {
		var lAnim = js_Boot.__cast(this.anim , PIXI.extras.MovieClip);
		lAnim.textures = this.getTextures(pID);
		var _this = com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesAnchor;
		lAnim.anchor = __map_reserved[pID] != null?_this.getReserved(pID):_this.h[pID];
	}
	,setFrame: function(pAutoPlay,pStart) {
		if(pStart == null) {
			pStart = 0;
		}
		if(pAutoPlay == null) {
			pAutoPlay = true;
		}
		var lAnim = js_Boot.__cast(this.anim , PIXI.extras.MovieClip);
		lAnim.gotoAndStop(pStart);
		if(pAutoPlay) {
			lAnim.play();
		}
	}
	,getTextures: function(pID) {
		var _this = com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesCache;
		if((__map_reserved[pID] != null?_this.getReserved(pID):_this.h[pID]) == null) {
			var _this1 = com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesDefinition;
			var lFrames = __map_reserved[pID] != null?_this1.getReserved(pID):_this1.h[pID];
			if(lFrames == 1) {
				var v = [PIXI.Texture.fromFrame(pID + ".png")];
				var _this2 = com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesCache;
				if(__map_reserved[pID] != null) {
					_this2.setReserved(pID,v);
				} else {
					_this2.h[pID] = v;
				}
			} else {
				var v1 = [];
				var _this3 = com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesCache;
				if(__map_reserved[pID] != null) {
					_this3.setReserved(pID,v1);
				} else {
					_this3.h[pID] = v1;
				}
				var _g1 = 1;
				var _g = lFrames + 1;
				while(_g1 < _g) {
					var i = _g1++;
					var _this4 = com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesCache;
					(__map_reserved[pID] != null?_this4.getReserved(pID):_this4.h[pID]).push(PIXI.Texture.fromFrame(pID + HxOverrides.substr(com_isartdigital_utils_game_factory_MovieClipAnimFactory.digits + i,-1 * com_isartdigital_utils_game_factory_MovieClipAnimFactory.textureDigits,null) + ".png"));
				}
			}
		}
		var _this5 = com_isartdigital_utils_game_factory_MovieClipAnimFactory.texturesCache;
		return __map_reserved[pID] != null?_this5.getReserved(pID):_this5.h[pID];
	}
	,__class__: com_isartdigital_utils_game_factory_MovieClipAnimFactory
});
var com_isartdigital_utils_game_filtersManagement_TwistFilterManager = function() {
};
$hxClasses["com.isartdigital.utils.game.filtersManagement.TwistFilterManager"] = com_isartdigital_utils_game_filtersManagement_TwistFilterManager;
com_isartdigital_utils_game_filtersManagement_TwistFilterManager.__name__ = ["com","isartdigital","utils","game","filtersManagement","TwistFilterManager"];
com_isartdigital_utils_game_filtersManagement_TwistFilterManager.getInstance = function() {
	if(com_isartdigital_utils_game_filtersManagement_TwistFilterManager.instance == null) {
		com_isartdigital_utils_game_filtersManagement_TwistFilterManager.instance = new com_isartdigital_utils_game_filtersManagement_TwistFilterManager();
	}
	return com_isartdigital_utils_game_filtersManagement_TwistFilterManager.instance;
};
com_isartdigital_utils_game_filtersManagement_TwistFilterManager.prototype = {
	init: function(pGameContainer,pTimer) {
		this.gameContainer = pGameContainer;
		this.timer = pTimer;
		this.elapseTime = 0;
		this.twists = [];
		this.direction = new PIXI.Point(0.5,0.5);
		this.start = new PIXI.Point(-1,-1);
		this.offsetLimit = 1.5;
		this.speed = 0.01;
		this.maxTwist = 10;
	}
	,addTwist: function() {
		if(this.gameContainer == null || this.twists.length > this.maxTwist) {
			return;
		}
		var lTwist = new PIXI.filters.TwistFilter();
		lTwist.angle = 0.03;
		lTwist.radius = 0.5;
		lTwist.padding = 0;
		lTwist.offset.x = this.start.x;
		lTwist.offset.y = this.start.y;
		this.twists.push(lTwist);
		this.gameContainer.filters = this.twists;
	}
	,doAction: function() {
		this.moveTwist();
		this.addTwistOnTick();
	}
	,moveTwist: function() {
		if(this.gameContainer.filters == null) {
			return;
		}
		var _g1 = 0;
		var _g = this.gameContainer.filters.length;
		while(_g1 < _g) {
			var i = _g1++;
			var lTwist = js_Boot.__cast(this.gameContainer.filters[i] , PIXI.filters.TwistFilter);
			lTwist.offset.x += this.direction.x * this.speed;
			lTwist.offset.y += this.direction.y * this.speed;
			if(lTwist.offset.x > this.offsetLimit || lTwist.offset.y > this.offsetLimit) {
				HxOverrides.remove(this.twists,this.gameContainer.filters[i]);
			}
		}
	}
	,addTwistOnTick: function() {
		this.elapseTime += 0.1;
		if(this.elapseTime >= this.timer) {
			this.addTwist();
			this.elapseTime = 0;
		}
	}
	,destroy: function() {
		com_isartdigital_utils_game_filtersManagement_TwistFilterManager.instance = null;
	}
	,__class__: com_isartdigital_utils_game_filtersManagement_TwistFilterManager
};
var com_isartdigital_utils_game_iso_IsoManager = function() { };
$hxClasses["com.isartdigital.utils.game.iso.IsoManager"] = com_isartdigital_utils_game_iso_IsoManager;
com_isartdigital_utils_game_iso_IsoManager.__name__ = ["com","isartdigital","utils","game","iso","IsoManager"];
com_isartdigital_utils_game_iso_IsoManager.init = function(pTileWidth,pTileHeight) {
	com_isartdigital_utils_game_iso_IsoManager.halfWidth = _$UInt_UInt_$Impl_$.toFloat(pTileWidth) / _$UInt_UInt_$Impl_$.toFloat(2);
	com_isartdigital_utils_game_iso_IsoManager.halfHeight = _$UInt_UInt_$Impl_$.toFloat(pTileHeight) / _$UInt_UInt_$Impl_$.toFloat(2);
};
com_isartdigital_utils_game_iso_IsoManager.modelToIsoView = function(pPoint) {
	return new PIXI.Point((pPoint.x - pPoint.y) * com_isartdigital_utils_game_iso_IsoManager.halfWidth,(pPoint.x + pPoint.y) * com_isartdigital_utils_game_iso_IsoManager.halfHeight);
};
com_isartdigital_utils_game_iso_IsoManager.isoViewToModel = function(pPoint) {
	return new PIXI.Point((pPoint.y / com_isartdigital_utils_game_iso_IsoManager.halfHeight + pPoint.x / com_isartdigital_utils_game_iso_IsoManager.halfWidth) / 2,(pPoint.y / com_isartdigital_utils_game_iso_IsoManager.halfHeight - pPoint.x / com_isartdigital_utils_game_iso_IsoManager.halfWidth) / 2);
};
com_isartdigital_utils_game_iso_IsoManager.getGlobalPositionOfBuilding = function(pBuilding) {
	var lPoint = new PIXI.Point(pBuilding.elem.regionX * 26 + pBuilding.elem.x,pBuilding.elem.regionY * 26 + pBuilding.elem.y);
	lPoint = com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(lPoint);
	return lPoint;
};
com_isartdigital_utils_game_iso_IsoManager.localToModel = function(pPoint) {
	var lTileWidth = com_isartdigital_utils_game_iso_IsoManager.halfWidth * 2;
	var lTileHeight = com_isartdigital_utils_game_iso_IsoManager.halfHeight * 2;
	return new PIXI.Point(Math.floor(pPoint.y / lTileHeight + pPoint.x / lTileWidth),Math.floor(-pPoint.x / lTileWidth + pPoint.y / lTileHeight));
};
com_isartdigital_utils_game_iso_IsoManager.localToIso = function(pPoint) {
	return com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(com_isartdigital_utils_game_iso_IsoManager.localToModel(pPoint));
};
com_isartdigital_utils_game_iso_IsoManager.isInFrontOf = function(pA,pB) {
	if(js_Boot.__instanceof(pA,com_isartdigital_utils_game_StateGraphic) && pA.boxType == com_isartdigital_utils_game_BoxType.NONE || js_Boot.__instanceof(pB,com_isartdigital_utils_game_StateGraphic) && pB.boxType == com_isartdigital_utils_game_BoxType.NONE) {
		throw new js__$Boot_HaxeError("IsoManager.isFrontOf :: la propriété boxType des StateGraphic ne doit pas être définie à NONE");
	}
	if(!js_Boot.__instanceof(pA,com_isartdigital_utils_game_iso_IZSortable) || !js_Boot.__instanceof(pB,com_isartdigital_utils_game_iso_IZSortable)) {
		throw new js__$Boot_HaxeError("Les objets passés en paramètre doivent implémenter IZSortable");
	}
	var lBoxA = js_Boot.__instanceof(pA,com_isartdigital_utils_game_StateGraphic)?(js_Boot.__cast(pA , com_isartdigital_utils_game_StateGraphic)).get_hitBox():pA;
	var lBoxB = js_Boot.__instanceof(pB,com_isartdigital_utils_game_StateGraphic)?(js_Boot.__cast(pB , com_isartdigital_utils_game_StateGraphic)).get_hitBox():pB;
	if(!com_isartdigital_utils_game_CollisionManager.hitTestObject(lBoxA,lBoxB)) {
		return null;
	}
	var lA = js_Boot.__cast(pA , com_isartdigital_utils_game_iso_IZSortable);
	var lB = js_Boot.__cast(pB , com_isartdigital_utils_game_iso_IZSortable);
	if(lA.rowMax < lB.rowMin) {
		return pB;
	} else if(lB.rowMax < lA.rowMin) {
		return pA;
	}
	if(lA.colMax < lB.colMin) {
		return pB;
	} else if(lB.colMax < lA.colMin) {
		return pA;
	}
	return null;
};
com_isartdigital_utils_game_iso_IsoManager.sortTiles = function(pTiles) {
	var lNumTiles = pTiles.length;
	var lTile;
	var _g1 = 0;
	while(_g1 < lNumTiles) {
		lTile = js_Boot.__cast(pTiles[_g1++] , com_isartdigital_utils_game_iso_IZSortable);
		lTile.behind = [];
		lTile.inFront = [];
	}
	var lA;
	var lB;
	var lFrontTile;
	var _g11 = 0;
	while(_g11 < lNumTiles) {
		var i = _g11++;
		lA = js_Boot.__cast(pTiles[i] , com_isartdigital_utils_game_iso_IZSortable);
		var _g3 = i + 1;
		while(_g3 < lNumTiles) {
			var j = _g3++;
			lB = js_Boot.__cast(pTiles[j] , com_isartdigital_utils_game_iso_IZSortable);
			lFrontTile = com_isartdigital_utils_game_iso_IsoManager.isInFrontOf(pTiles[i],pTiles[j]);
			if(lFrontTile != null) {
				if(lA == js_Boot.__cast(lFrontTile , com_isartdigital_utils_game_iso_IZSortable)) {
					lA.behind.push(lB);
					lB.inFront.push(lA);
				} else {
					lB.behind.push(lA);
					lA.inFront.push(lB);
				}
			}
		}
	}
	var lToDraw = [];
	var _g12 = 0;
	while(_g12 < lNumTiles) {
		lTile = js_Boot.__cast(pTiles[_g12++] , com_isartdigital_utils_game_iso_IZSortable);
		if(lTile.behind.length == 0) {
			lToDraw.push(lTile);
		}
	}
	var lTilesDrawn = [];
	var lFrontTile1;
	while(lToDraw.length > 0) {
		lTile = lToDraw.pop();
		lTilesDrawn.push(js_Boot.__cast(lTile , PIXI.DisplayObject));
		var _g13 = 0;
		var _g = lTile.inFront.length;
		while(_g13 < _g) {
			lFrontTile1 = lTile.inFront[_g13++];
			HxOverrides.remove(lFrontTile1.behind,lTile);
			if(lFrontTile1.behind.length == 0) {
				lToDraw.push(lFrontTile1);
			}
		}
	}
	return lTilesDrawn;
};
var com_isartdigital_utils_game_pooling_PoolManager = function() {
};
$hxClasses["com.isartdigital.utils.game.pooling.PoolManager"] = com_isartdigital_utils_game_pooling_PoolManager;
com_isartdigital_utils_game_pooling_PoolManager.__name__ = ["com","isartdigital","utils","game","pooling","PoolManager"];
com_isartdigital_utils_game_pooling_PoolManager.init = function(pPool) {
	var _g = 0;
	var _g1 = Reflect.fields(pPool);
	while(_g < _g1.length) {
		var lClassName = _g1[_g];
		++_g;
		var value = [];
		var _this = com_isartdigital_utils_game_pooling_PoolManager.pool;
		if(__map_reserved[lClassName] != null) {
			_this.setReserved(lClassName,value);
		} else {
			_this.h[lClassName] = value;
		}
		var numberOfInstance = Reflect.field(pPool,lClassName);
		var _g3 = 0;
		while(_g3 < numberOfInstance) {
			++_g3;
			com_isartdigital_utils_game_pooling_PoolManager.addToPool(lClassName,com_isartdigital_utils_game_pooling_PoolManager.getInstance(lClassName));
		}
	}
};
com_isartdigital_utils_game_pooling_PoolManager.addToPool = function(pType,pInstance) {
	if(pType == null || pInstance == null) {
		return;
	}
	var _this = com_isartdigital_utils_game_pooling_PoolManager.pool;
	if(!(__map_reserved[pType] != null?_this.existsReserved(pType):_this.h.hasOwnProperty(pType))) {
		var value = [];
		var _this1 = com_isartdigital_utils_game_pooling_PoolManager.pool;
		if(__map_reserved[pType] != null) {
			_this1.setReserved(pType,value);
		} else {
			_this1.h[pType] = value;
		}
	}
	var _this2 = com_isartdigital_utils_game_pooling_PoolManager.pool;
	(__map_reserved[pType] != null?_this2.getReserved(pType):_this2.h[pType]).push(pInstance);
};
com_isartdigital_utils_game_pooling_PoolManager.getFromPool = function(pType) {
	if(pType == null) {
		return null;
	}
	var tmp;
	var _this = com_isartdigital_utils_game_pooling_PoolManager.pool;
	if(!(!(__map_reserved[pType] != null?_this.existsReserved(pType):_this.h.hasOwnProperty(pType)))) {
		var _this1 = com_isartdigital_utils_game_pooling_PoolManager.pool;
		tmp = (__map_reserved[pType] != null?_this1.getReserved(pType):_this1.h[pType]).length == 0;
	} else {
		tmp = true;
	}
	if(tmp) {
		com_isartdigital_utils_game_pooling_PoolManager.addToPool(pType,com_isartdigital_utils_game_pooling_PoolManager.getInstance(pType));
	}
	var _this2 = com_isartdigital_utils_game_pooling_PoolManager.pool;
	return (__map_reserved[pType] != null?_this2.getReserved(pType):_this2.h[pType]).pop();
};
com_isartdigital_utils_game_pooling_PoolManager.getInstance = function(pType) {
	if(pType == "UrbanPowerStation") {
		return new com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanPowerStation();
	} else if(pType == "UrbanAntenna") {
		return new com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanAntenna();
	} else if(pType == "UrbanHeadQuarter") {
		return new com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanHeadQuarter();
	} else if(pType == "UrbanCommunication") {
		return new com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanCommunication();
	} else if(pType == "UrbanTranslation") {
		return new com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanTranslation();
	} else if(pType == "DrillingCenter") {
		return new com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingCenter();
	} else if(pType == "DrillingAutoOutPost") {
		return new com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingAutoOutPost();
	} else if(pType == "DrillingOutPost") {
		return new com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingOutPost();
	} else if(pType == "AlienIncubator") {
		return new com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienIncubator();
	} else if(pType == "AlienPaddockTiny") {
		return new com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockTiny();
	} else if(pType == "AlienPaddockSmall") {
		return new com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockSmall();
	} else if(pType == "AlienPaddockMedium") {
		return new com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockMedium();
	} else if(pType == "AlienPaddockBig") {
		return new com_isartdigital_ruby_game_sprites_elements_alienbuilding_paddocks_AlienPaddockBig();
	} else if(pType == "AlienResearchCenter") {
		return new com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienResearchCenter();
	} else if(pType == "AlienTrainingCenter") {
		return new com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienTrainingCenter();
	} else if(pType == "AlienCryoCenter") {
		return new com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienCryoCenter();
	} else if(pType == "CosmeticBuilding") {
		return new com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_CosmeticBuilding();
	} else if(pType == "BuildingCosmeticCapsule1") {
		return new com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule1();
	} else if(pType == "BuildingCosmeticCapsule2") {
		return new com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule2();
	} else if(pType == "BuildingCosmeticCapsule3") {
		return new com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticCapsule3();
	} else if(pType == "BuildingCosmeticPlant1") {
		return new com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant1();
	} else if(pType == "BuildingCosmeticPlant2") {
		return new com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant2();
	} else if(pType == "BuildingCosmeticPlant3") {
		return new com_isartdigital_ruby_game_sprites_elements_cosmeticbuilding_cosmetictype_BuildingCosmeticPlant3();
	} else if(pType == "Destructible") {
		return new com_isartdigital_ruby_game_sprites_elements_destructible_Destructible();
	} else if(pType == "Bubble") {
		return new com_isartdigital_ruby_game_sprites_ressources_Bubble();
	} else if(pType == "RessourceSoftCurrency") {
		return new com_isartdigital_ruby_game_sprites_ressources_RessourceSoftCurrency();
	} else if(pType == "RessourceHardCurrency") {
		return new com_isartdigital_ruby_game_sprites_ressources_RessourceHardCurrency();
	} else if(pType == "Alien1") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_AlienSpawn("Alien1");
	} else if(pType == "Alien2") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_AlienSpawn("Alien2");
	} else if(pType == "Alien3") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_AlienSpawn("Alien3");
	} else if(pType == "WallTop") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_Walls("WallTop");
	} else if(pType == "WallBot") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_Walls("WallBot");
	} else if(pType == "WallLeft") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_Walls("WallLeft");
	} else if(pType == "WallRight") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_Walls("WallRight");
	} else if(pType == "ClueRessource") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_Clue("ClueRessource");
	} else if(pType == "ClueBluePrint") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_Clue("ClueBluePrint");
	} else if(pType == "ClueEmpty") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_Clue("ClueEmpty");
	} else if(pType == "ClueEmptyOrange") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_Clue("ClueEmptyOrange");
	} else if(pType == "ClueEmptyBlue") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_Clue("ClueEmptyBlue");
	} else if(pType == "ClueEmptyOrange") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_Clue("ClueEmptyOrange");
	} else if(pType == "HardBrick") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_HardBrick("HardBrick");
	} else if(pType == "Lava") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_Lava("Lava");
	} else if(pType == "ItemGeneFive") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_SpecialFeatureItem("ItemGeneFive");
	} else if(pType == "ItemGeneFour") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_SpecialFeatureItem("ItemGeneFour");
	} else if(pType == "ItemGeneThree") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_SpecialFeatureItem("ItemGeneThree");
	} else if(pType == "ItemGeneTwo") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_SpecialFeatureItem("ItemGeneTwo");
	} else if(pType == "ItemGeneOne") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_SpecialFeatureItem("ItemGeneOne");
	} else if(pType == "ItemDarkMatter") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_SpecialFeatureItem("ItemDarkMatter");
	} else if(pType == "ItemBluePrint") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_SpecialFeatureItem("ItemBluePrint");
	} else if(pType == "ItemHC") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_SpecialFeatureItem("ItemHC");
	} else if(pType == "ItemSC") {
		return new com_isartdigital_ruby_game_specialFeature_tiles_classes_SpecialFeatureItem("ItemSC");
	} else if(pType == "Driller1") {
		return new com_isartdigital_ruby_game_specialFeature_aliens_Driller("Driller1");
	} else if(pType == "Driller2") {
		return new com_isartdigital_ruby_game_specialFeature_aliens_Driller("Driller2");
	} else if(pType == "Driller3") {
		return new com_isartdigital_ruby_game_specialFeature_aliens_Driller("Driller3");
	} else if(pType == "Bomber1") {
		return new com_isartdigital_ruby_game_specialFeature_aliens_Bomber("Bomber1");
	} else if(pType == "Bomber2") {
		return new com_isartdigital_ruby_game_specialFeature_aliens_Bomber("Bomber2");
	} else if(pType == "Bomber3") {
		return new com_isartdigital_ruby_game_specialFeature_aliens_Bomber("Bomber3");
	} else if(pType == "Healer1") {
		return new com_isartdigital_ruby_game_specialFeature_aliens_Healer("Healer1");
	} else if(pType == "Healer2") {
		return new com_isartdigital_ruby_game_specialFeature_aliens_Healer("Healer2");
	} else if(pType == "Healer3") {
		return new com_isartdigital_ruby_game_specialFeature_aliens_Healer("Healer3");
	} else if(pType == "Tank1") {
		return new com_isartdigital_ruby_game_specialFeature_aliens_Tank("Tank1");
	} else if(pType == "Tank2") {
		return new com_isartdigital_ruby_game_specialFeature_aliens_Tank("Tank2");
	} else if(pType == "Tank3") {
		return new com_isartdigital_ruby_game_specialFeature_aliens_Tank("Tank3");
	} else {
		return null;
	}
};
com_isartdigital_utils_game_pooling_PoolManager.clear = function(pType) {
	if(pType != null) {
		com_isartdigital_utils_game_pooling_PoolManager.pool.remove(pType);
		return;
	}
	var it = com_isartdigital_utils_game_pooling_PoolManager.pool.keys();
	while(it.hasNext()) com_isartdigital_utils_game_pooling_PoolManager.pool.remove(it.next());
};
com_isartdigital_utils_game_pooling_PoolManager.prototype = {
	__class__: com_isartdigital_utils_game_pooling_PoolManager
};
var com_isartdigital_utils_save_DataBaseAction = function() {
	this.firstCo = false;
	this.activeData = false;
};
$hxClasses["com.isartdigital.utils.save.DataBaseAction"] = com_isartdigital_utils_save_DataBaseAction;
com_isartdigital_utils_save_DataBaseAction.__name__ = ["com","isartdigital","utils","save","DataBaseAction"];
com_isartdigital_utils_save_DataBaseAction.getInstance = function() {
	if(com_isartdigital_utils_save_DataBaseAction.instance == null) {
		com_isartdigital_utils_save_DataBaseAction.instance = new com_isartdigital_utils_save_DataBaseAction();
	}
	return com_isartdigital_utils_save_DataBaseAction.instance;
};
com_isartdigital_utils_save_DataBaseAction.prototype = {
	addBuildingAndChangeRessource: function(pIdPlayer,pTypeValue,pValue,pBuildingType,pBuildingId,pRegionX,pRegionY,pX,pY,pGlobalX,pGlobalY,pLayer,pMNCost) {
		if(pMNCost == null) {
			pMNCost = 0;
		}
		this.tempoBuilding = { buildingType : pBuildingType, regionX : pRegionX, regionY : pRegionY, x : pX, y : pY, globalX : pGlobalX, globalY : pGlobalY, layer : pLayer, buildingId : pBuildingId};
		this.changeCurrency(pIdPlayer,pTypeValue,pValue,true);
		if(pMNCost != 0) {
			this.changeCurrency(pIdPlayer,"ressource",pMNCost);
		}
	}
	,getData: function(pAction) {
		if(this.activeData) {
			var lCall = new haxe_Http("php/action.php?" + pAction);
			lCall.onData = $bind(this,this.onData);
			lCall.onError = $bind(this,this.onError);
			lCall.request(true);
		}
	}
	,setData: function(pAction,pContent) {
		if(this.activeData) {
			var lCall = new haxe_Http("php/action.php?action=" + pAction);
			lCall.setParameter("data",pContent);
			lCall.onData = $bind(this,this.onData);
			lCall.onError = $bind(this,this.onError);
			lCall.request(true);
		}
	}
	,connexionPlayer: function(pIdFb,pName) {
		if(this.activeData) {
			if(pIdFb != "") {
				var lCall = new haxe_Http("php/action.php?action=" + "connexion");
				lCall.setParameter("data",pIdFb);
				lCall.setParameter("name",pName);
				lCall.onData = $bind(this,this.onPlayerInfo);
				lCall.onError = $bind(this,this.onError);
				lCall.request(true);
			} else {
				haxe_Log.trace("pas d'id facebook",{ fileName : "DataBaseAction.hx", lineNumber : 157, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "connexionPlayer"});
				return;
			}
		} else {
			return;
		}
	}
	,onPlayerInfo: function(pData) {
		var lData = JSON.parse(pData);
		com_isartdigital_utils_save_DataManager.getInstance().savePlayerInfo(lData);
		haxe_Log.trace(lData.firstTime,{ fileName : "DataBaseAction.hx", lineNumber : 172, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "onPlayerInfo"});
		if(lData.firstTime) {
			haxe_Log.trace("ton pere c'est sa premiere fois",{ fileName : "DataBaseAction.hx", lineNumber : 175, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "onPlayerInfo"});
		}
		this.getServerTime();
		com_isartdigital_ruby_Main.getInstance().onSaveLoaded();
	}
	,addBuilding: function(pBuildingType,pBuildingId,pRegionX,pRegionY,pX,pY,pGlobalX,pGlobalY,pLayer) {
		if(this.activeData) {
			if(pBuildingType != null) {
				var lCall = new haxe_Http("php/action.php?action=" + "addBuilding");
				lCall.setParameter("type",pBuildingType);
				lCall.setParameter("playerID",Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id));
				lCall.setParameter("regionX",pRegionX == null?"null":"" + pRegionX);
				lCall.setParameter("regionY",pRegionY == null?"null":"" + pRegionY);
				lCall.setParameter("x",pX == null?"null":"" + pX);
				lCall.setParameter("y",pY == null?"null":"" + pY);
				lCall.setParameter("globalX",pGlobalX == null?"null":"" + pGlobalX);
				lCall.setParameter("globalY",pGlobalY == null?"null":"" + pGlobalY);
				lCall.setParameter("layer",pLayer == null?"null":"" + pLayer);
				lCall.setParameter("buildingID",pBuildingId);
				lCall.onData = $bind(this,this.onAddBuilding);
				lCall.onError = $bind(this,this.onError);
				lCall.request(true);
			} else {
				haxe_Log.trace("pas de type de building",{ fileName : "DataBaseAction.hx", lineNumber : 205, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "addBuilding"});
				return;
			}
		} else {
			return;
		}
	}
	,addAlien: function(pAlienID,pBuildingId,pType,pName,pNomPropre,pStamina,pTime) {
		if(this.activeData) {
			haxe_Log.trace("add alien",{ fileName : "DataBaseAction.hx", lineNumber : 216, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "addAlien"});
			if(pType != null) {
				var lCall = new haxe_Http("php/action.php?action=" + "addAlien");
				lCall.setParameter("playerID",Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id));
				lCall.setParameter("buildingID",pBuildingId);
				lCall.setParameter("alienID",pAlienID);
				lCall.setParameter("type",pType);
				lCall.setParameter("name",pName);
				lCall.setParameter("nomPropre",pNomPropre);
				lCall.setParameter("stamina",pStamina == null?"null":"" + pStamina);
				lCall.setParameter("time",pTime);
				lCall.onData = $bind(this,this.onAlienAdd);
				lCall.onError = $bind(this,this.onError);
				lCall.request(true);
			} else {
				haxe_Log.trace("pas de type de building",{ fileName : "DataBaseAction.hx", lineNumber : 234, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "addAlien"});
				return;
			}
		} else {
			return;
		}
	}
	,changeAlienIdBuilding: function(pAlienID,pBuildingId) {
		if(this.activeData) {
			if(pAlienID != null && pBuildingId != null) {
				var lCall = new haxe_Http("php/action.php?action=" + "changeAlienIdBuilding");
				lCall.setParameter("buildingID",pBuildingId);
				lCall.setParameter("alienID",pAlienID);
				lCall.onData = $bind(this,this.onData);
				lCall.onError = $bind(this,this.onError);
				lCall.request(true);
			} else {
				haxe_Log.trace("pas de parametres",{ fileName : "DataBaseAction.hx", lineNumber : 257, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "changeAlienIdBuilding"});
				return;
			}
		} else {
			return;
		}
	}
	,onAlienAdd: function(pData) {
	}
	,onAddBuilding: function(pData) {
		if(pData != "") {
			var lData = JSON.parse(pData);
			com_isartdigital_utils_save_DataManager.getInstance().saveBuildingJson(lData);
		}
	}
	,releaseBuildingPosition: function(pID,pRegionX,pRegionY,pX,pY) {
		if(this.activeData) {
			if(pID != null) {
				var lCall = new haxe_Http("php/action.php?action=" + "releaseBuildingPosition");
				lCall.setParameter("id",pID);
				lCall.setParameter("idPlayer",Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id));
				lCall.setParameter("regionX",pRegionX == null?"null":"" + pRegionX);
				lCall.setParameter("regionY",pRegionY == null?"null":"" + pRegionY);
				lCall.setParameter("x",pX == null?"null":"" + pX);
				lCall.setParameter("y",pY == null?"null":"" + pY);
				lCall.onData = $bind(this,this.onData);
				lCall.onError = $bind(this,this.onError);
				lCall.request(true);
			} else {
				haxe_Log.trace("Erreur position Building",{ fileName : "DataBaseAction.hx", lineNumber : 298, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "releaseBuildingPosition"});
				return;
			}
		} else {
			return;
		}
	}
	,destroyBuilding: function(pID) {
		if(this.activeData) {
			if(pID != null) {
				var lCall = new haxe_Http("php/action.php?action=" + "destroyBuilding");
				lCall.setParameter("id",pID);
				lCall.setParameter("idPlayer",Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id));
				lCall.onData = $bind(this,this.onData);
				lCall.onError = $bind(this,this.onError);
				lCall.request(true);
			} else {
				haxe_Log.trace("Erreur destroy Building",{ fileName : "DataBaseAction.hx", lineNumber : 320, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "destroyBuilding"});
				return;
			}
		} else {
			return;
		}
	}
	,changeExperience: function(pXp,pLevel) {
		if(this.activeData) {
			if(pXp != null && pLevel != null) {
				var lCall = new haxe_Http("php/action.php?action=" + "changeXpLevel");
				lCall.setParameter("playerID",Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id));
				lCall.setParameter("xp",pXp == null?"null":"" + pXp);
				lCall.setParameter("level",pLevel == null?"null":"" + pLevel);
				lCall.onData = $bind(this,this.onData);
				lCall.onError = $bind(this,this.onError);
				lCall.request(true);
			} else {
				haxe_Log.trace("Erreur changeExperience",{ fileName : "DataBaseAction.hx", lineNumber : 343, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "changeExperience"});
				return;
			}
		} else {
			return;
		}
	}
	,changeBuildingLevel: function(pID,pLevel) {
		if(this.activeData) {
			if(pID != null && pLevel != null) {
				var lCall = new haxe_Http("php/action.php?action=" + "changeBuildingLevel");
				lCall.setParameter("id",pID == null?"null":"" + pID);
				lCall.setParameter("playerID",Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id));
				lCall.setParameter("level",pLevel == null?"null":"" + pLevel);
				lCall.onData = $bind(this,this.onData);
				lCall.onError = $bind(this,this.onError);
				lCall.request(true);
			} else {
				haxe_Log.trace("Erreur changeBuildingLevel",{ fileName : "DataBaseAction.hx", lineNumber : 366, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "changeBuildingLevel"});
				return;
			}
		} else {
			return;
		}
	}
	,releaseBuildingMode: function(pID,pMode) {
		if(this.activeData) {
			if(pID != null) {
				var lCall = new haxe_Http("php/action.php?action=" + "releaseBuildingMode");
				lCall.setParameter("id",pID);
				lCall.setParameter("idPlayer",Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id));
				lCall.setParameter("mode",pMode);
				lCall.onData = $bind(this,this.onData);
				lCall.onError = $bind(this,this.onError);
				lCall.request(true);
			} else {
				haxe_Log.trace("Erreur mode Building",{ fileName : "DataBaseAction.hx", lineNumber : 389, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "releaseBuildingMode"});
				return;
			}
		} else {
			return;
		}
	}
	,addDestructible: function(pDestructibleType,pDestructibleId,pRegionX,pRegionY,pX,pY,pLayer) {
		if(this.activeData) {
			if(pDestructibleType != null) {
				var lCall = new haxe_Http("php/action.php?action=" + "addDestructible");
				lCall.setParameter("type",pDestructibleType);
				lCall.setParameter("playerID",Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id));
				lCall.setParameter("regionX",pRegionX == null?"null":"" + pRegionX);
				lCall.setParameter("regionY",pRegionY == null?"null":"" + pRegionY);
				lCall.setParameter("x",pX == null?"null":"" + pX);
				lCall.setParameter("y",pY == null?"null":"" + pY);
				lCall.setParameter("layer",pLayer == null?"null":"" + pLayer);
				lCall.setParameter("destructableID",pDestructibleId);
				lCall.onData = $bind(this,this.onAddDestructable);
				lCall.onError = $bind(this,this.onError);
				lCall.request(true);
			} else {
				haxe_Log.trace("pas de type de building",{ fileName : "DataBaseAction.hx", lineNumber : 417, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "addDestructible"});
				return;
			}
		} else {
			return;
		}
	}
	,onAddDestructable: function(pData) {
		haxe_Log.trace(pData,{ fileName : "DataBaseAction.hx", lineNumber : 426, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "onAddDestructable"});
		haxe_Log.trace("pas d'erreur sur le add destructable",{ fileName : "DataBaseAction.hx", lineNumber : 427, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "onAddDestructable"});
		if(pData != "") {
			var lData = JSON.parse(pData);
			com_isartdigital_utils_save_DataManager.getInstance().saveBuildingJson(lData);
		}
	}
	,destroyDestructible: function(pID) {
		if(this.activeData) {
			if(pID != null) {
				var lCall = new haxe_Http("php/action.php?action=" + "destroyDestructible");
				lCall.setParameter("id",pID);
				lCall.setParameter("idPlayer",Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id));
				lCall.onData = $bind(this,this.onData);
				lCall.onError = $bind(this,this.onError);
				lCall.request(true);
			} else {
				haxe_Log.trace("Erreur destroy Destructible",{ fileName : "DataBaseAction.hx", lineNumber : 450, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "destroyDestructible"});
				return;
			}
		} else {
			return;
		}
	}
	,releaseDestructibleMode: function(pName,pID,pMode) {
		if(this.activeData) {
			if(pID != null) {
				var lCall = new haxe_Http("php/action.php?action=" + "releaseDestructibleMode");
				lCall.setParameter("id",pID);
				lCall.setParameter("idPlayer",Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id));
				lCall.setParameter("mode",pMode);
				lCall.setParameter("name",pName);
				lCall.onData = $bind(this,this.onData);
				lCall.onError = $bind(this,this.onError);
				lCall.request(true);
			} else {
				haxe_Log.trace("Erreur mode Destructible",{ fileName : "DataBaseAction.hx", lineNumber : 474, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "releaseDestructibleMode"});
				return;
			}
		} else {
			return;
		}
	}
	,releaseAlienMode: function(pAlienId,pMode,pTimeEnd) {
		if(this.activeData) {
			if(pAlienId != null) {
				var lCall = new haxe_Http("php/action.php?action=" + "modeAlien");
				lCall.setParameter("alienId","modeAlien");
				lCall.setParameter("idPlayer",Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id));
				if(pTimeEnd != null) {
					lCall.setParameter("timeEnd",Std.string(pTimeEnd));
				}
				lCall.setParameter("mode",pMode);
				lCall.onData = $bind(this,this.onData);
				lCall.onError = $bind(this,this.onError);
				lCall.request(true);
			} else {
				haxe_Log.trace("Erreur mode Destructible",{ fileName : "DataBaseAction.hx", lineNumber : 498, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "releaseAlienMode"});
				return;
			}
		} else {
			return;
		}
	}
	,changeEndTimeBuilding: function(pId,pEndTime) {
		if(this.activeData) {
			if(pId != null) {
				var lCall = new haxe_Http("php/action.php?action=" + "changeEndTimeBuilding");
				lCall.setParameter("id",pId);
				lCall.setParameter("endTime",Std.string(pEndTime));
				lCall.onData = $bind(this,this.onData);
				lCall.onError = $bind(this,this.onError);
				lCall.request(true);
			} else {
				haxe_Log.trace("Erreur no Building id",{ fileName : "DataBaseAction.hx", lineNumber : 520, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "changeEndTimeBuilding"});
				return;
			}
		} else {
			return;
		}
	}
	,unlockRegion: function(regionX,regionY) {
		if(this.activeData) {
			var lCall = new haxe_Http("php/action.php?action=" + "addRegion");
			lCall.setParameter("idPlayer",Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id));
			lCall.setParameter("x",regionX == null?"null":"" + regionX);
			lCall.setParameter("y",regionY == null?"null":"" + regionY);
			lCall.onData = $bind(this,this.onUnlockRegion);
			lCall.onError = $bind(this,this.onError);
			lCall.request(true);
		} else {
			return;
		}
	}
	,onUnlockRegion: function(pData) {
		if(pData != "") {
			haxe_Log.trace("onData : " + Std.string(pData),{ fileName : "DataBaseAction.hx", lineNumber : 554, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "onUnlockRegion"});
			haxe_Log.trace(JSON.parse(pData),{ fileName : "DataBaseAction.hx", lineNumber : 555, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "onUnlockRegion"});
		}
		if(this.firstCo) {
			this.addBuilding("AlienPaddock","AlienPaddock" + new Date().getTime(),0,0,8,8,0,800,1);
		}
	}
	,onData: function(pData) {
		if(pData != "") {
			haxe_Log.trace("onData : " + Std.string(pData),{ fileName : "DataBaseAction.hx", lineNumber : 564, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "onData"});
			haxe_Log.trace(JSON.parse(pData),{ fileName : "DataBaseAction.hx", lineNumber : 565, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "onData"});
		}
	}
	,onError: function(pError) {
		haxe_Log.trace(pError,{ fileName : "DataBaseAction.hx", lineNumber : 571, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "onError"});
		if(pError != "") {
			haxe_Log.trace("onError : " + Std.string(pError),{ fileName : "DataBaseAction.hx", lineNumber : 574, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "onError"});
			haxe_Log.trace(JSON.parse(pError),{ fileName : "DataBaseAction.hx", lineNumber : 575, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "onError"});
		}
	}
	,changeCurrency: function(pIdPlayer,pTypeValue,pValue,isAddingBuilding) {
		if(isAddingBuilding == null) {
			isAddingBuilding = false;
		}
		if(this.activeData) {
			var lCall = new haxe_Http("php/action.php?action=" + "checkValue");
			lCall.setParameter("idPlayer",pIdPlayer == null?"null":"" + pIdPlayer);
			lCall.setParameter("value",pValue == null?"null":"" + pValue);
			lCall.setParameter("typeValue",pTypeValue);
			if(isAddingBuilding) {
				lCall.onData = $bind(this,this.onChangeCurrencyToAddBuilding);
			} else {
				lCall.onData = $bind(this,this.onData);
			}
			lCall.onError = $bind(this,this.onError);
			lCall.request(true);
		} else {
			return;
		}
	}
	,changeEnergy: function(pIdPlayer,pEnergy) {
		if(this.activeData) {
			var lCall = new haxe_Http("php/action.php?action=" + "changeEnergy");
			lCall.setParameter("idPlayer",pIdPlayer == null?"null":"" + pIdPlayer);
			lCall.setParameter("value",pEnergy == null?"null":"" + pEnergy);
			lCall.onData = $bind(this,this.onData);
			lCall.onError = $bind(this,this.onError);
			lCall.request(true);
		} else {
			return;
		}
	}
	,changeMaxEnergy: function(pIdPlayer,pMaxEnergy) {
		if(this.activeData) {
			var lCall = new haxe_Http("php/action.php?action=" + "changeMaxEnergy");
			lCall.setParameter("idPlayer",pIdPlayer == null?"null":"" + pIdPlayer);
			lCall.setParameter("value",pMaxEnergy == null?"null":"" + pMaxEnergy);
			lCall.onData = $bind(this,this.onData);
			lCall.onError = $bind(this,this.onError);
			lCall.request(true);
		} else {
			return;
		}
	}
	,onChangeCurrencyToAddBuilding: function(pData) {
		this.addBuilding(this.tempoBuilding.buildingType,this.tempoBuilding.buildingId,this.tempoBuilding.regionX,this.tempoBuilding.regionY,this.tempoBuilding.x,this.tempoBuilding.y,this.tempoBuilding.globalX,this.tempoBuilding.globalY,this.tempoBuilding.layer);
	}
	,changeFtueStep: function(pIdPlayer,pFTUEstep) {
		if(this.activeData) {
			var lCall = new haxe_Http("php/action.php?action=" + "ftueNewStep");
			lCall.setParameter("idPlayer",pIdPlayer == null?"null":"" + pIdPlayer);
			lCall.setParameter("value",pFTUEstep == null?"null":"" + pFTUEstep);
			lCall.onData = $bind(this,this.onData);
			lCall.onError = $bind(this,this.onError);
			lCall.request(true);
		} else {
			return;
		}
	}
	,getServerTime: function() {
		if(this.activeData) {
			var lCall = new haxe_Http("php/action.php?action=" + "time");
			lCall.onData = $bind(this,this.onTime);
			lCall.onError = $bind(this,this.onError);
			lCall.request(true);
		} else {
			return;
		}
	}
	,onTime: function(pData) {
		haxe_Log.trace(pData,{ fileName : "DataBaseAction.hx", lineNumber : 658, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "onTime"});
		var parsedData = JSON.parse(pData);
		haxe_Log.trace(parsedData,{ fileName : "DataBaseAction.hx", lineNumber : 660, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "onTime"});
		var time = HxOverrides.strDate(Reflect.field(parsedData,"NOW()"));
		com_isartdigital_ruby_utils_TimeManager.getInstance().set_timeServer(time);
	}
	,updateGene: function() {
		if(this.activeData) {
			var lCall = new haxe_Http("php/action.php?action=" + "updateGene");
			lCall.setParameter("playerID",Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id));
			lCall.setParameter("gene1",Std.string(_$UInt_UInt_$Impl_$.toFloat(com_isartdigital_ruby_game_player_Player.getInstance().gene1)));
			lCall.setParameter("gene2",Std.string(_$UInt_UInt_$Impl_$.toFloat(com_isartdigital_ruby_game_player_Player.getInstance().gene2)));
			lCall.setParameter("gene3",Std.string(_$UInt_UInt_$Impl_$.toFloat(com_isartdigital_ruby_game_player_Player.getInstance().gene3)));
			lCall.setParameter("gene4",Std.string(_$UInt_UInt_$Impl_$.toFloat(com_isartdigital_ruby_game_player_Player.getInstance().gene4)));
			lCall.setParameter("gene5",Std.string(_$UInt_UInt_$Impl_$.toFloat(com_isartdigital_ruby_game_player_Player.getInstance().gene5)));
			lCall.onData = $bind(this,this.onData);
			lCall.onError = $bind(this,this.onError);
			lCall.request(true);
		} else {
			return;
		}
	}
	,getAlienFriends: function(pList) {
		if(this.activeData) {
			var lCall = new haxe_Http("php/action.php?action=" + "getFriendAlien");
			lCall.setParameter("friendsList",JSON.stringify(pList));
			lCall.onData = $bind(this,this.friendsAliensInfo);
			lCall.onError = $bind(this,this.onError);
			lCall.request(true);
		} else {
			return;
		}
	}
	,friendsAliensInfo: function(pData) {
		if(pData == "") {
			return;
		}
		com_isartdigital_utils_save_DataManager.getInstance().loadFriendsAliensInfo(pData);
	}
	,getFriends: function(pList) {
		if(this.activeData) {
			var lCall = new haxe_Http("php/action.php?action=" + "getFriends");
			lCall.setParameter("friendsList",pList);
			lCall.onData = $bind(this,this.friendsInfo);
			lCall.onError = $bind(this,this.onError);
			lCall.request(true);
		} else {
			return;
		}
	}
	,friendsInfo: function(pData) {
		if(pData == "") {
			return;
		}
		com_isartdigital_utils_save_DataManager.getInstance().loadFriendsInfo(pData);
	}
	,getSchemaTimeToDecrypt: function(pSchemaID) {
		if(this.activeData) {
			haxe_Log.trace("MON ID DE SCHEMA " + pSchemaID,{ fileName : "DataBaseAction.hx", lineNumber : 727, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "getSchemaTimeToDecrypt"});
			var lCall = new haxe_Http("php/action.php?action=" + "getSchemaTimeToDecrypt");
			lCall.setParameter("schemaID",pSchemaID == null?"null":"" + pSchemaID);
			lCall.onData = $bind(this,this.onGetDecryptTime);
			lCall.onError = $bind(this,this.onError);
			lCall.request(true);
		} else {
			haxe_Log.trace("pas pu attraper le Décrypt Time",{ fileName : "DataBaseAction.hx", lineNumber : 736, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "getSchemaTimeToDecrypt"});
			return;
		}
	}
	,onGetDecryptTime: function(pData) {
		if(pData != "") {
			com_isartdigital_utils_save_DataManager.getInstance().getSchemaTimeToDecrypt(JSON.parse(pData).decryptTime);
		}
	}
	,addSchema: function(pSchemaId) {
		if(this.activeData) {
			var lCall = new haxe_Http("php/action.php?action=" + "addSchema");
			lCall.setParameter("playerID",Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id));
			lCall.setParameter("schemaID",pSchemaId == null?"null":"" + pSchemaId);
			lCall.onData = $bind(this,this.onAddSchema);
			lCall.onError = $bind(this,this.onError);
			lCall.request(true);
		} else {
			haxe_Log.trace("pas pu ajouter le schema",{ fileName : "DataBaseAction.hx", lineNumber : 762, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "addSchema"});
			return;
		}
	}
	,onAddSchema: function(pData) {
		if(pData != "") {
			haxe_Log.trace(pData,{ fileName : "DataBaseAction.hx", lineNumber : 769, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "onAddSchema"});
		}
	}
	,startUnlockSchema: function(pIdSchema,pStartDecrypt,pEndDecrypt) {
		if(this.activeData) {
			var lCall = new haxe_Http("php/action.php?action=" + "startUnlockSchema");
			lCall.setParameter("playerID",Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id));
			lCall.setParameter("schemaID",pIdSchema == null?"null":"" + pIdSchema);
			lCall.setParameter("start",Std.string(pStartDecrypt));
			lCall.setParameter("end",Std.string(pEndDecrypt));
			lCall.onData = $bind(this,this.onData);
			lCall.onError = $bind(this,this.onError);
			lCall.request(true);
		} else {
			haxe_Log.trace("pas pu decrypt le schema",{ fileName : "DataBaseAction.hx", lineNumber : 787, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "startUnlockSchema"});
			return;
		}
	}
	,unlockSchema: function(pSchemaId) {
		if(this.activeData) {
			var lCall = new haxe_Http("php/action.php?action=" + "unlockSchema");
			lCall.setParameter("playerID",Std.string(com_isartdigital_ruby_game_player_Player.getInstance().id));
			lCall.setParameter("schemaID",pSchemaId == null?"null":"" + pSchemaId);
			lCall.onData = $bind(this,this.onData);
			lCall.onError = $bind(this,this.onError);
			lCall.request(true);
		} else {
			haxe_Log.trace("pas pu decrypt le schema",{ fileName : "DataBaseAction.hx", lineNumber : 805, className : "com.isartdigital.utils.save.DataBaseAction", methodName : "unlockSchema"});
			return;
		}
	}
	,destroy: function() {
		com_isartdigital_utils_save_DataBaseAction.instance = null;
	}
	,__class__: com_isartdigital_utils_save_DataBaseAction
};
var com_isartdigital_utils_save_DataManager = function() {
	this.listDestructableTypes = new haxe_ds_StringMap();
	this.listBuildingTypes = new haxe_ds_StringMap();
	this.TOKEN_WORLD = "world";
	this.schemasList = [];
	this.alienFriendsList = [];
	this.friendsList = [];
	this.loadedData = new haxe_ds_StringMap();
	this.toSave = [];
};
$hxClasses["com.isartdigital.utils.save.DataManager"] = com_isartdigital_utils_save_DataManager;
com_isartdigital_utils_save_DataManager.__name__ = ["com","isartdigital","utils","save","DataManager"];
com_isartdigital_utils_save_DataManager.getInstance = function() {
	if(com_isartdigital_utils_save_DataManager.instance == null) {
		com_isartdigital_utils_save_DataManager.instance = new com_isartdigital_utils_save_DataManager();
	}
	return com_isartdigital_utils_save_DataManager.instance;
};
com_isartdigital_utils_save_DataManager.prototype = {
	destroy: function() {
		com_isartdigital_utils_save_DataManager.instance = null;
	}
	,savePlayerInfo: function(pData) {
		this.playerSave = pData;
	}
	,saveBuildingJson: function(pData) {
		this.buildingSave = pData;
	}
	,saveRegionsJson: function(pData) {
		this.regionSave = pData;
	}
	,save: function(pList) {
	}
	,loadData: function() {
		if(this.playerSave != null) {
			var lPlayerSave = { id : this.playerSave.playerInfo.id, fbID : this.playerSave.playerInfo.idFb, level : Std.parseInt(this.playerSave.playerInfo.level), xp : Std.parseInt(this.playerSave.playerInfo.xp), hardCurrency : Std.parseInt(this.playerSave.playerInfo.hardCurrency), softCurrency : Std.parseInt(this.playerSave.playerInfo.softCurrency), ressource : Std.parseInt(this.playerSave.playerInfo.ressource), currentEnergy : Std.parseInt(this.playerSave.playerInfo.currentEnergy), maxEnergy : Std.parseInt(this.playerSave.playerInfo.maxEnergy), ftueSteps : Std.parseInt(this.playerSave.playerInfo.FTUEsteps), gene1 : Std.parseInt(this.playerSave.playerInfo.gene1), gene2 : Std.parseInt(this.playerSave.playerInfo.gene2), gene3 : Std.parseInt(this.playerSave.playerInfo.gene3), gene4 : Std.parseInt(this.playerSave.playerInfo.gene4), gene5 : Std.parseInt(this.playerSave.playerInfo.gene5)};
			com_isartdigital_ruby_game_player_Player.getInstance().loadSave(lPlayerSave);
			var lRegions = Reflect.field(this.playerSave,"region");
			if(lRegions) {
				var _g = 0;
				var _g1 = Reflect.fields(lRegions);
				while(_g < _g1.length) {
					var region = _g1[_g];
					++_g;
					var lRegion = Reflect.field(lRegions,region);
					com_isartdigital_ruby_game_world_World.getInstance().unlockRegion(Std.parseInt(lRegion.x),Std.parseInt(lRegion.y));
				}
			}
			var lDestructableType = Reflect.field(this.playerSave,"destructableTypes");
			if(lDestructableType) {
				var destructableType;
				var _g2 = 0;
				var _g11 = Reflect.fields(lDestructableType);
				while(_g2 < _g11.length) {
					var type = _g11[_g2];
					++_g2;
					destructableType = Reflect.field(lDestructableType,type);
					var lElemType = { name : Reflect.field(destructableType,"destructableName"), softCurrencyCost : Std.parseInt(Reflect.field(destructableType,"softCurrencyCost")), skipHCCost : Std.parseInt(Reflect.field(destructableType,"skipCDcostHC")), destructionTime : Reflect.field(destructableType,"destructableTime"), width : Std.parseInt(Reflect.field(destructableType,"width")), height : Std.parseInt(Reflect.field(destructableType,"height"))};
					var _this = this.listDestructableTypes;
					var key = lElemType.name;
					if(__map_reserved[key] != null) {
						_this.setReserved(key,lElemType);
					} else {
						_this.h[key] = lElemType;
					}
				}
			}
			var lDestructables = Reflect.field(this.playerSave,"destructable");
			var _g3 = 0;
			var _g12 = Reflect.fields(lDestructables);
			while(_g3 < _g12.length) {
				var instance = _g12[_g3];
				++_g3;
				var destructible = Reflect.field(lDestructables,instance);
				var lDestructible = new com_isartdigital_ruby_game_sprites_elements_destructible_Destructible(destructible.type);
				var tmp = destructible.destructableId;
				var tmp1 = Std.parseInt(destructible.x);
				var tmp2 = Std.parseInt(destructible.y);
				var tmp3 = Std.parseInt(destructible.globalX);
				var tmp4 = Std.parseInt(destructible.globalY);
				var tmp5 = Std.parseInt(destructible.regionX);
				var tmp6 = Std.parseInt(destructible.regionY);
				var tmp7 = Std.parseInt(destructible.layer);
				var tmp8 = destructible.mode;
				var tmp9 = destructible.type;
				var key1 = destructible.type;
				var _this1 = this.listDestructableTypes;
				var lElement = { instanceID : tmp, type : "Destructible", width : 0, height : 0, x : tmp1, y : tmp2, globalX : tmp3, globalY : tmp4, regionX : tmp5, regionY : tmp6, layer : tmp7, mode : tmp8, assetName : tmp9, softCurrency : (__map_reserved[key1] != null?_this1.getReserved(key1):_this1.h[key1]).softCurrencyCost, dateEndBuilding : HxOverrides.strDate(destructible.endOfDestructionTime), dateStartBuilding : HxOverrides.strDate(destructible.destructionTime)};
				var lcurrentRegion = com_isartdigital_ruby_game_world_World.getInstance().getRegion(lElement.regionX,lElement.regionY);
				var _this2 = this.listDestructableTypes;
				var key2 = lElement.assetName;
				lDestructible.localWidth = (__map_reserved[key2] != null?_this2.getReserved(key2):_this2.h[key2]).width;
				var _this3 = this.listDestructableTypes;
				var key3 = lElement.assetName;
				lDestructible.localHeight = (__map_reserved[key3] != null?_this3.getReserved(key3):_this3.h[key3]).height;
				lDestructible.init(lElement);
				lDestructible.start();
				lcurrentRegion.layers[lElement.layer].add(lDestructible);
				lcurrentRegion.layers[lElement.layer].container.addChild(lDestructible);
				lDestructible.position = com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(new PIXI.Point(lElement.x,lElement.y));
				var _this4 = com_isartdigital_utils_game_pooling_PoolObject.elementList;
				var key4 = lElement.instanceID;
				if(__map_reserved[key4] != null) {
					_this4.setReserved(key4,lElement);
				} else {
					_this4.h[key4] = lElement;
				}
			}
			var lBuildingTypes = Reflect.field(this.playerSave,"buildingTypes");
			if(lBuildingTypes) {
				var buildingType;
				var _g4 = 0;
				var _g13 = Reflect.fields(lBuildingTypes);
				while(_g4 < _g13.length) {
					var type1 = _g13[_g4];
					++_g4;
					buildingType = Reflect.field(lBuildingTypes,type1);
					var lElemType1 = { SellingCost : Reflect.field(buildingType,"SellingCost") | 0, buildingName : Reflect.field(buildingType,"buildingName"), buildingTime : HxOverrides.strDate(Reflect.field(buildingType,"buildingTime")), category : Reflect.field(buildingType,"category"), description : Reflect.field(buildingType,"description"), energyCost : Reflect.field(buildingType,"energyCost") | 0, hardCurrencyCost : Reflect.field(buildingType,"hardCurrencyCost") | 0, id : Reflect.field(buildingType,"id") | 0, requiredPlayerLevel : Reflect.field(buildingType,"requiredPlayerLevel") | 0, ressourcesCost : Reflect.field(buildingType,"ressourcesCost") | 0, skipCDcostHC : Reflect.field(buildingType,"skipCDcostHC") | 0, softCurrencyCost : Reflect.field(buildingType,"softCurrencyCost") | 0, upgradeNumber : Reflect.field(buildingType,"upgradeNumber") | 0, levelUpgrade1 : Reflect.field(buildingType,"levelUpgrade1") | 0, levelUpgrade2 : Reflect.field(buildingType,"levelUpgrade2") | 0, levelUpgrade3 : Reflect.field(buildingType,"levelUpgrade3") | 0, upgradeCost1 : Reflect.field(buildingType,"upgradeCost1") | 0, upgradeCost2 : Reflect.field(buildingType,"upgradeCost2") | 0, upgradeCost3 : Reflect.field(buildingType,"upgradeCost3") | 0, upgradeTime1 : HxOverrides.strDate(Reflect.field(buildingType,"upgradeTime1")), upgradeTime2 : HxOverrides.strDate(Reflect.field(buildingType,"upgradeTime2")), upgradeTime3 : HxOverrides.strDate(Reflect.field(buildingType,"upgradeTime3"))};
					var _this5 = this.listBuildingTypes;
					var key5 = lElemType1.buildingName;
					if(__map_reserved[key5] != null) {
						_this5.setReserved(key5,lElemType1);
					} else {
						_this5.h[key5] = lElemType1;
					}
				}
			}
			var lTypes = Reflect.field(this.playerSave,"bufferTypes");
			com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienBuffer.loadTypes(lTypes);
			lTypes = Reflect.field(this.playerSave,"producerTypes");
			com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienProducer.loadTypes(lTypes);
			lTypes = Reflect.field(this.playerSave,"esthetiqueTypes");
			com_isartdigital_ruby_game_sprites_elements_aliens_AlienEsthetique.loadTypes(lTypes);
			lTypes = Reflect.field(this.playerSave,"speFeatTypes");
			com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens.loadTypes(lTypes);
			var alienList = Reflect.field(this.playerSave,"aliens");
			if(alienList) {
				var lAlien;
				var _g5 = 0;
				var _g14 = Reflect.fields(alienList);
				while(_g5 < _g14.length) {
					var alien = _g14[_g5];
					++_g5;
					lAlien = Reflect.field(alienList,alien);
					com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList.push({ idAlien : Reflect.field(lAlien,"idAlien"), idBuilding : Reflect.field(lAlien,"idBuilding"), mode : Reflect.field(lAlien,"mode"), name : Reflect.field(lAlien,"name"), type : Reflect.field(lAlien,"type"), nomPropre : Reflect.field(lAlien,"nomPropre"), stamina : Reflect.field(lAlien,"stamina") | 0, level : Reflect.field(lAlien,"level") | 0, startTime : Reflect.field(lAlien,"startTime"), endTime : Reflect.field(lAlien,"endTime"), carac : com_isartdigital_ruby_game_sprites_elements_aliens_Alien.getAlienType(Reflect.field(lAlien,"name"),this.getAlienArray(Reflect.field(lAlien,"type"))), idPlayer : com_isartdigital_ruby_game_player_Player.getInstance().id});
				}
			}
			var lBuildings = Reflect.field(this.playerSave,"buildings");
			if(lBuildings) {
				var _g6 = 0;
				var _g15 = Reflect.fields(lBuildings);
				while(_g6 < _g15.length) {
					var id = _g15[_g6];
					++_g6;
					var building = Reflect.field(lBuildings,id);
					var currentRegion;
					var lElement1 = { instanceID : building.buildingId, type : building.type, width : 0, height : 0, x : Std.parseInt(building.x), y : Std.parseInt(building.y), globalX : parseFloat(building.globalX), globalY : parseFloat(building.globalY), regionX : Std.parseInt(building.regionX), regionY : Std.parseInt(building.regionY), layer : Std.parseInt(building.layer), mode : building.mode, levelUpGrade : Std.parseInt(building.currentLevel), dateEndBuilding : HxOverrides.strDate(building.buildingEnd), dateStartBuilding : HxOverrides.strDate(building.buildingStart)};
					currentRegion = com_isartdigital_ruby_game_world_World.getInstance().getRegion(lElement1.regionX,lElement1.regionY);
					var lBuilding = js_Boot.__cast(com_isartdigital_utils_game_pooling_PoolManager.getFromPool(lElement1.type) , com_isartdigital_ruby_game_sprites_elements_Building);
					lBuilding.init(lElement1);
					lBuilding.start();
					currentRegion.layers[lElement1.layer].add(lBuilding);
					currentRegion.layers[lElement1.layer].container.addChild(lBuilding);
					lBuilding.position = com_isartdigital_utils_game_iso_IsoManager.modelToIsoView(new PIXI.Point(lElement1.x,lElement1.y));
					var _this6 = com_isartdigital_utils_game_pooling_PoolObject.elementList;
					var key6 = lElement1.instanceID;
					if(__map_reserved[key6] != null) {
						_this6.setReserved(key6,lElement1);
					} else {
						_this6.h[key6] = lElement1;
					}
				}
			}
			var lSchemaList = Reflect.field(this.playerSave,"schemaXenos");
			if(lSchemaList) {
				var _g7 = 0;
				var _g16 = Reflect.fields(lSchemaList);
				while(_g7 < _g16.length) {
					var id1 = _g16[_g7];
					++_g7;
					var schema = Reflect.field(lSchemaList,id1);
					var lSchema = { gene1 : Std.parseInt(schema.gene1), gene2 : Std.parseInt(schema.gene2), gene3 : Std.parseInt(schema.gene3), tableXenos : schema.tableXenos, type : schema.type, gene1quant : Std.parseInt(schema.gene1quant), gene2quant : Std.parseInt(schema.gene2quant), gene3quant : Std.parseInt(schema.gene3quant), xenoName : schema.xenoName, decryptTime : schema.decryptTime};
					var key7 = schema.id;
					var _this7 = com_isartdigital_ruby_ui_popin_incubator_Incubator.listSchema;
					if(__map_reserved[key7] != null) {
						_this7.setReserved(key7,lSchema);
					} else {
						_this7.h[key7] = lSchema;
					}
				}
			}
			this.loadSchemaPlayer(this.playerSave);
		}
		com_isartdigital_ruby_ui_popin_codex_CodexData.getInstance().listAllAlienTypesInCodex();
	}
	,loadFriendsInfo: function(pData) {
		this.friendsList = JSON.parse(pData).friends;
		if(this.friendsList.length != null) {
			var lArray = [];
			var _g = 0;
			var _g1 = this.friendsList;
			while(_g < _g1.length) {
				var friend = _g1[_g];
				++_g;
				if(friend.id != null) {
					lArray.push(friend.id);
				}
			}
			com_isartdigital_utils_save_DataBaseAction.getInstance().getAlienFriends(lArray);
		}
	}
	,loadFriendsAliensInfo: function(pData) {
		this.alienFriendsList = JSON.parse(pData).aliens;
	}
	,getAlienArray: function(pType) {
		if(pType == "AlienBuffer") {
			return com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienBuffer.bufferTypes;
		} else if(pType == "AlienProducer") {
			return com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienProducer.prodTypes;
		} else if(pType == "AlienEsthetique") {
			return com_isartdigital_ruby_game_sprites_elements_aliens_AlienEsthetique.esthetiqueTypes;
		} else if(pType == "AlienForeur") {
			return com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens.speFeatTypes;
		} else {
			return null;
		}
	}
	,sortTilesInRegions: function() {
		var tmp = com_isartdigital_ruby_game_world_World.getInstance().worldMap.iterator();
		while(tmp.hasNext()) {
			var tmp1 = tmp.next().iterator();
			while(tmp1.hasNext()) {
				var lRegion = tmp1.next();
				if(lRegion.isActive) {
					lRegion.layers[1].container.children = com_isartdigital_utils_game_iso_IsoManager.sortTiles(lRegion.layers[1].container.children);
				}
			}
		}
	}
	,loadSchemaPlayer: function(pSave) {
		this.schemasList = pSave.playerSchemas;
		com_isartdigital_ruby_game_player_Player.getInstance().setSchema(this.getPlayerSchemaCount());
	}
	,getPlayerSchemaCount: function(pLockedSchemaOnly) {
		if(pLockedSchemaOnly == null) {
			pLockedSchemaOnly = false;
		}
		var counter = 0;
		var _g = 0;
		var _g1 = this.schemasList;
		while(_g < _g1.length) {
			var shema = _g1[_g];
			++_g;
			if(pLockedSchemaOnly) {
				if(shema.isLocked == 1) {
					++counter;
				}
			} else {
				++counter;
			}
		}
		return counter;
	}
	,addSchema: function(pSchemaID) {
		com_isartdigital_ruby_game_player_Player.getInstance();
		com_isartdigital_utils_save_DataBaseAction.getInstance().addSchema(pSchemaID);
	}
	,getLockedSchemas: function() {
		var lArray = [];
		var _g = 0;
		var _g1 = this.schemasList;
		while(_g < _g1.length) {
			var schema = _g1[_g];
			++_g;
			if(schema.isLocked == 1) {
				lArray.push(schema);
			}
		}
		return lArray;
	}
	,getUnlockedSchemas: function() {
		var lArray = [];
		var _g = 0;
		var _g1 = this.schemasList;
		while(_g < _g1.length) {
			var schema = _g1[_g];
			++_g;
			if(schema.isLocked == 0) {
				lArray.push(schema);
			}
		}
		return lArray;
	}
	,translateSchema: function(pSchema) {
		com_isartdigital_utils_save_DataBaseAction.getInstance().getServerTime();
		com_isartdigital_utils_save_DataBaseAction.getInstance().getSchemaTimeToDecrypt(pSchema.idSchema);
	}
	,getSchemaTimeToDecrypt: function(pData) {
		return pData;
	}
	,__class__: com_isartdigital_utils_save_DataManager
};
var com_isartdigital_utils_save_ConstructionType = { __ename__ : true, __constructs__ : ["Villa","Tree","House","Factory","Turbine"] };
com_isartdigital_utils_save_ConstructionType.Villa = ["Villa",0];
com_isartdigital_utils_save_ConstructionType.Villa.__enum__ = com_isartdigital_utils_save_ConstructionType;
com_isartdigital_utils_save_ConstructionType.Tree = ["Tree",1];
com_isartdigital_utils_save_ConstructionType.Tree.__enum__ = com_isartdigital_utils_save_ConstructionType;
com_isartdigital_utils_save_ConstructionType.House = ["House",2];
com_isartdigital_utils_save_ConstructionType.House.__enum__ = com_isartdigital_utils_save_ConstructionType;
com_isartdigital_utils_save_ConstructionType.Factory = ["Factory",3];
com_isartdigital_utils_save_ConstructionType.Factory.__enum__ = com_isartdigital_utils_save_ConstructionType;
com_isartdigital_utils_save_ConstructionType.Turbine = ["Turbine",4];
com_isartdigital_utils_save_ConstructionType.Turbine.__enum__ = com_isartdigital_utils_save_ConstructionType;
var com_isartdigital_utils_save_State = { __ename__ : true, __constructs__ : ["Constructing","Collecting","Upgrading","Waiting"] };
com_isartdigital_utils_save_State.Constructing = ["Constructing",0];
com_isartdigital_utils_save_State.Constructing.__enum__ = com_isartdigital_utils_save_State;
com_isartdigital_utils_save_State.Collecting = ["Collecting",1];
com_isartdigital_utils_save_State.Collecting.__enum__ = com_isartdigital_utils_save_State;
com_isartdigital_utils_save_State.Upgrading = ["Upgrading",2];
com_isartdigital_utils_save_State.Upgrading.__enum__ = com_isartdigital_utils_save_State;
com_isartdigital_utils_save_State.Waiting = ["Waiting",3];
com_isartdigital_utils_save_State.Waiting.__enum__ = com_isartdigital_utils_save_State;
var com_isartdigital_utils_save_EvolveState = { __ename__ : true, __constructs__ : ["Level1","Level2","Level3"] };
com_isartdigital_utils_save_EvolveState.Level1 = ["Level1",0];
com_isartdigital_utils_save_EvolveState.Level1.__enum__ = com_isartdigital_utils_save_EvolveState;
com_isartdigital_utils_save_EvolveState.Level2 = ["Level2",1];
com_isartdigital_utils_save_EvolveState.Level2.__enum__ = com_isartdigital_utils_save_EvolveState;
com_isartdigital_utils_save_EvolveState.Level3 = ["Level3",2];
com_isartdigital_utils_save_EvolveState.Level3.__enum__ = com_isartdigital_utils_save_EvolveState;
var com_isartdigital_utils_sounds_SoundManager = function() {
};
$hxClasses["com.isartdigital.utils.sounds.SoundManager"] = com_isartdigital_utils_sounds_SoundManager;
com_isartdigital_utils_sounds_SoundManager.__name__ = ["com","isartdigital","utils","sounds","SoundManager"];
com_isartdigital_utils_sounds_SoundManager.addSound = function(pName,pSound) {
	if(com_isartdigital_utils_sounds_SoundManager.list == null) {
		com_isartdigital_utils_sounds_SoundManager.list = new haxe_ds_StringMap();
	}
	var _this = com_isartdigital_utils_sounds_SoundManager.list;
	if(__map_reserved[pName] != null) {
		_this.setReserved(pName,pSound);
	} else {
		_this.h[pName] = pSound;
	}
};
com_isartdigital_utils_sounds_SoundManager.getSound = function(pName) {
	var _this = com_isartdigital_utils_sounds_SoundManager.list;
	return __map_reserved[pName] != null?_this.getReserved(pName):_this.h[pName];
};
com_isartdigital_utils_sounds_SoundManager.prototype = {
	__class__: com_isartdigital_utils_sounds_SoundManager
};
var com_isartdigital_utils_system_DeviceCapabilities = function() { };
$hxClasses["com.isartdigital.utils.system.DeviceCapabilities"] = com_isartdigital_utils_system_DeviceCapabilities;
com_isartdigital_utils_system_DeviceCapabilities.__name__ = ["com","isartdigital","utils","system","DeviceCapabilities"];
com_isartdigital_utils_system_DeviceCapabilities.__properties__ = {get_isCanvasPlus:"get_isCanvasPlus",get_isCocoonJS:"get_isCocoonJS",get_system:"get_system",get_width:"get_width",get_height:"get_height"}
com_isartdigital_utils_system_DeviceCapabilities.get_height = function() {
	return window.innerHeight;
};
com_isartdigital_utils_system_DeviceCapabilities.get_width = function() {
	return window.innerWidth;
};
com_isartdigital_utils_system_DeviceCapabilities.get_system = function() {
	if(new EReg("IEMobile","i").match(window.navigator.userAgent)) {
		return "IEMobile";
	} else if(new EReg("iPhone|iPad|iPod","i").match(window.navigator.userAgent)) {
		return "iOS";
	} else if(new EReg("BlackBerry","i").match(window.navigator.userAgent)) {
		return "BlackBerry";
	} else if(new EReg("PlayBook","i").match(window.navigator.userAgent)) {
		return "BlackBerry PlayBook";
	} else if(new EReg("Android","i").match(window.navigator.userAgent)) {
		return "Android";
	} else {
		return "Desktop";
	}
};
com_isartdigital_utils_system_DeviceCapabilities.get_isCocoonJS = function() {
	if(!window.navigator.isCocoonJS) {
		return window.CocoonJS != null;
	} else {
		return true;
	}
};
com_isartdigital_utils_system_DeviceCapabilities.get_isCanvasPlus = function() {
	if(window.navigator.isCocoonJS) {
		return window.CocoonJS != null;
	} else {
		return false;
	}
};
com_isartdigital_utils_system_DeviceCapabilities.displayFullScreenButton = function() {
	if(com_isartdigital_utils_system_DeviceCapabilities.get_isCocoonJS()) {
		return;
	}
	if(!new EReg("(iPad|iPhone|iPod)","g").match(window.navigator.userAgent) && !new EReg("MSIE","i").match(window.navigator.userAgent)) {
		window.document.onfullscreenchange = com_isartdigital_utils_system_DeviceCapabilities.onChangeFullScreen;
		window.document.onwebkitfullscreenchange = com_isartdigital_utils_system_DeviceCapabilities.onChangeFullScreen;
		window.document.onmozfullscreenchange = com_isartdigital_utils_system_DeviceCapabilities.onChangeFullScreen;
		window.document.onmsfullscreenchange = com_isartdigital_utils_system_DeviceCapabilities.onChangeFullScreen;
		com_isartdigital_utils_system_DeviceCapabilities.fullScreenButton = new Image();
		com_isartdigital_utils_system_DeviceCapabilities.fullScreenButton.style.position = "absolute";
		com_isartdigital_utils_system_DeviceCapabilities.fullScreenButton.style.right = "0px";
		com_isartdigital_utils_system_DeviceCapabilities.fullScreenButton.style.top = "0px";
		com_isartdigital_utils_system_DeviceCapabilities.fullScreenButton.style.cursor = "url(assets/Curseur.png), auto";
		com_isartdigital_utils_system_DeviceCapabilities.fullScreenButton.width = com_isartdigital_utils_system_DeviceCapabilities.getSizeFactor() * 0.11 | 0;
		com_isartdigital_utils_system_DeviceCapabilities.fullScreenButton.height = com_isartdigital_utils_system_DeviceCapabilities.getSizeFactor() * 0.11 | 0;
		com_isartdigital_utils_system_DeviceCapabilities.fullScreenButton.onclick = com_isartdigital_utils_system_DeviceCapabilities.enterFullscreen;
		com_isartdigital_utils_system_DeviceCapabilities.fullScreenButton.src = com_isartdigital_utils_Config.get_assetsPath() + "fullscreen.png";
		window.document.body.appendChild(com_isartdigital_utils_system_DeviceCapabilities.fullScreenButton);
	}
};
com_isartdigital_utils_system_DeviceCapabilities.enterFullscreen = function(pEvent) {
	var lDocElm = window.document.documentElement;
	if($bind(lDocElm,lDocElm.requestFullscreen) != null) {
		lDocElm.requestFullscreen();
	} else if(lDocElm.mozRequestFullScreen != null) {
		lDocElm.mozRequestFullScreen();
	} else if(lDocElm.webkitRequestFullScreen != null) {
		lDocElm.webkitRequestFullScreen();
	} else if(lDocElm.msRequestFullscreen != null) {
		lDocElm.msRequestFullscreen();
	}
};
com_isartdigital_utils_system_DeviceCapabilities.exitFullscreen = function() {
	if(($_=window.document,$bind($_,$_.exitFullscreen)) != null) {
		window.document.exitFullscreen();
	} else if(window.document.mozCancelFullScreen != null) {
		window.document.mozCancelFullScreen();
	} else if(window.document.webkitCancelFullScreen != null) {
		window.document.webkitCancelFullScreen();
	} else if(window.document.msExitFullscreen) {
		window.document.msExitFullscreen();
	}
};
com_isartdigital_utils_system_DeviceCapabilities.onChangeFullScreen = function(pEvent) {
	if(window.document.fullScreen || (window.document.mozFullScreen || (window.document.webkitIsFullScreen || window.document.msFullscreenElement))) {
		com_isartdigital_utils_system_DeviceCapabilities.fullScreenButton.style.display = "none";
	} else {
		com_isartdigital_utils_system_DeviceCapabilities.fullScreenButton.style.display = "block";
	}
	pEvent.preventDefault();
};
com_isartdigital_utils_system_DeviceCapabilities.getSizeFactor = function() {
	var lSize = Math.floor(Math.min(_$UInt_UInt_$Impl_$.toFloat(com_isartdigital_utils_system_DeviceCapabilities.get_width()),_$UInt_UInt_$Impl_$.toFloat(com_isartdigital_utils_system_DeviceCapabilities.get_height())));
	if(com_isartdigital_utils_system_DeviceCapabilities.get_system() == "Desktop") {
		lSize /= 3;
	}
	return lSize;
};
com_isartdigital_utils_system_DeviceCapabilities.getScreenRect = function(pTarget) {
	var lTopLeft = new PIXI.Point(0,0);
	var lBottomRight = new PIXI.Point(_$UInt_UInt_$Impl_$.toFloat(com_isartdigital_utils_system_DeviceCapabilities.get_width()),_$UInt_UInt_$Impl_$.toFloat(com_isartdigital_utils_system_DeviceCapabilities.get_height()));
	lTopLeft = pTarget.toLocal(lTopLeft);
	lBottomRight = pTarget.toLocal(lBottomRight);
	return new PIXI.Rectangle(lTopLeft.x,lTopLeft.y,lBottomRight.x - lTopLeft.x,lBottomRight.y - lTopLeft.y);
};
com_isartdigital_utils_system_DeviceCapabilities.scaleViewport = function() {
	if(com_isartdigital_utils_system_DeviceCapabilities.get_system() == "IEMobile") {
		return;
	}
	com_isartdigital_utils_system_DeviceCapabilities.screenRatio = window.devicePixelRatio;
	if(!com_isartdigital_utils_system_DeviceCapabilities.get_isCocoonJS()) {
		window.document.write("<meta name=\"viewport\" content=\"initial-scale=" + Math.round(100 / com_isartdigital_utils_system_DeviceCapabilities.screenRatio) / 100 + ", user-scalable=no, minimal-ui\">");
	}
};
com_isartdigital_utils_system_DeviceCapabilities.init = function(pHd,pMd,pLd) {
	if(pLd == null) {
		pLd = 0.5;
	}
	if(pMd == null) {
		pMd = 0.75;
	}
	if(pHd == null) {
		pHd = 1;
	}
	var _this = com_isartdigital_utils_system_DeviceCapabilities.texturesRatios;
	if(__map_reserved.hd != null) {
		_this.setReserved("hd",pHd);
	} else {
		_this.h["hd"] = pHd;
	}
	var _this1 = com_isartdigital_utils_system_DeviceCapabilities.texturesRatios;
	if(__map_reserved.md != null) {
		_this1.setReserved("md",pMd);
	} else {
		_this1.h["md"] = pMd;
	}
	var _this2 = com_isartdigital_utils_system_DeviceCapabilities.texturesRatios;
	if(__map_reserved.ld != null) {
		_this2.setReserved("ld",pLd);
	} else {
		_this2.h["ld"] = pLd;
	}
	if(com_isartdigital_utils_Config.get_data().texture != null && com_isartdigital_utils_Config.get_data().texture != "") {
		com_isartdigital_utils_system_DeviceCapabilities.textureType = com_isartdigital_utils_Config.get_data().texture;
	} else {
		var lBW = Math.max(window.screen.width,window.screen.height);
		var lBH = Math.min(window.screen.width,window.screen.height);
		var lW = Math.max(com_isartdigital_utils_game_GameStage.getInstance().get_safeZone().width,com_isartdigital_utils_game_GameStage.getInstance().get_safeZone().height);
		var lH = Math.min(com_isartdigital_utils_game_GameStage.getInstance().get_safeZone().width,com_isartdigital_utils_game_GameStage.getInstance().get_safeZone().height);
		var lRatio = Math.min(lBW * com_isartdigital_utils_system_DeviceCapabilities.screenRatio / lW,lBH * com_isartdigital_utils_system_DeviceCapabilities.screenRatio / lH);
		if(lRatio <= pLd) {
			com_isartdigital_utils_system_DeviceCapabilities.textureType = "ld";
		} else if(lRatio <= pMd) {
			com_isartdigital_utils_system_DeviceCapabilities.textureType = "md";
		} else {
			com_isartdigital_utils_system_DeviceCapabilities.textureType = "hd";
		}
	}
	var _this3 = com_isartdigital_utils_system_DeviceCapabilities.texturesRatios;
	var key = com_isartdigital_utils_system_DeviceCapabilities.textureType;
	com_isartdigital_utils_system_DeviceCapabilities.textureRatio = __map_reserved[key] != null?_this3.getReserved(key):_this3.h[key];
};
var com_isartdigital_utils_system_Localization = function() {
};
$hxClasses["com.isartdigital.utils.system.Localization"] = com_isartdigital_utils_system_Localization;
com_isartdigital_utils_system_Localization.__name__ = ["com","isartdigital","utils","system","Localization"];
com_isartdigital_utils_system_Localization.getInstance = function() {
	if(com_isartdigital_utils_system_Localization.instance == null) {
		com_isartdigital_utils_system_Localization.instance = new com_isartdigital_utils_system_Localization();
	}
	return com_isartdigital_utils_system_Localization.instance;
};
com_isartdigital_utils_system_Localization.init = function(pLabel,pLanguage) {
	com_isartdigital_utils_system_Localization.labels = pLabel;
	com_isartdigital_utils_system_Localization.langue = pLanguage;
};
com_isartdigital_utils_system_Localization.setLangue = function(pLangue) {
	com_isartdigital_utils_system_Localization.langue = pLangue;
};
com_isartdigital_utils_system_Localization.getLabel = function(pText) {
	return Std.string(Reflect.field(Reflect.field(com_isartdigital_utils_system_Localization.labels,pText),com_isartdigital_utils_system_Localization.langue));
};
com_isartdigital_utils_system_Localization.prototype = {
	destroy: function() {
		com_isartdigital_utils_system_Localization.instance = null;
	}
	,__class__: com_isartdigital_utils_system_Localization
};
var com_isartdigital_utils_ui_Button = function() {
	com_isartdigital_utils_game_StateGraphic.call(this);
	this.boxType = com_isartdigital_utils_game_BoxType.SELF;
	this.interactive = true;
	this.buttonMode = true;
	this.on("mouseover",$bind(this,this._mouseOver));
	this.on("mousedown",$bind(this,this._mouseDown));
	this.on("click",$bind(this,this._click));
	this.on("mouseout",$bind(this,this._mouseOut));
	this.on("mouseupoutside",$bind(this,this._mouseOut));
	this.on("touchstart",$bind(this,this._mouseDown));
	this.on("tap",$bind(this,this._click));
	this.on("touchend",$bind(this,this._mouseOut));
	this.on("touchendoutside",$bind(this,this._mouseOut));
	this.createText();
	this.start();
};
$hxClasses["com.isartdigital.utils.ui.Button"] = com_isartdigital_utils_ui_Button;
com_isartdigital_utils_ui_Button.__name__ = ["com","isartdigital","utils","ui","Button"];
com_isartdigital_utils_ui_Button.__super__ = com_isartdigital_utils_game_StateGraphic;
com_isartdigital_utils_ui_Button.prototype = $extend(com_isartdigital_utils_game_StateGraphic.prototype,{
	registerClick: function(pCallBack) {
		this.on("click",pCallBack);
		this.on("tap",pCallBack);
	}
	,unregisterClick: function(pCallBack) {
		this.off("click",pCallBack);
		this.off("tap",pCallBack);
	}
	,createText: function() {
		this.upStyle = { font : "80px Arial", fill : "#000000", align : "center"};
		this.overStyle = { font : "80px Arial", fill : "#AAAAAA", align : "center"};
		this.downStyle = { font : "80px Arial", fill : "#FFFFFF", align : "center"};
		this.txt = new PIXI.Text("",this.upStyle);
		this.txt.anchor.set(0.5,0.5);
	}
	,setText: function(pText) {
		this.txt.text = pText;
	}
	,setModeNormal: function() {
		this.setState(this.DEFAULT_STATE);
		this.anim.gotoAndStop(0);
		this.addChild(this.txt);
		com_isartdigital_utils_game_StateGraphic.prototype.setModeNormal.call(this);
	}
	,_mouseVoid: function() {
	}
	,_click: function(pEvent) {
		this.anim.gotoAndStop(0);
		this.txt.style = this.upStyle;
	}
	,_mouseDown: function(pEvent) {
		this.anim.gotoAndStop(2);
		this.txt.style = this.downStyle;
	}
	,_mouseOver: function(pEvent) {
		this.anim.gotoAndStop(1);
		this.txt.style = this.overStyle;
	}
	,_mouseOut: function(pEvent) {
		this.anim.gotoAndStop(0);
		this.txt.style = this.upStyle;
	}
	,destroy: function() {
		this.off("mouseover",$bind(this,this._mouseOver));
		this.off("mousedown",$bind(this,this._mouseDown));
		this.off("click",$bind(this,this._click));
		this.off("mouseout",$bind(this,this._mouseOut));
		this.off("mouseupoutside",$bind(this,this._mouseOut));
		this.off("touchstart",$bind(this,this._mouseDown));
		this.off("tap",$bind(this,this._click));
		this.off("touchend",$bind(this,this._mouseOut));
		this.off("touchendoutside",$bind(this,this._mouseOut));
		com_isartdigital_utils_game_StateGraphic.prototype.destroy.call(this);
	}
	,__class__: com_isartdigital_utils_ui_Button
});
var com_isartdigital_utils_ui_SmartText = function(pParent,pBackWidth,pBackHeight,pTextSize,pFont,pTxtColor,pAlign,pShadow,pBackGrndColor,pBackGrndOpacity,pRadius,pBackGroundX,pBackGroundY,pTextPosX,pTextPosY,pRotation) {
	if(pRotation == null) {
		pRotation = 0;
	}
	if(pTextPosY == null) {
		pTextPosY = 5;
	}
	if(pTextPosX == null) {
		pTextPosX = 5;
	}
	if(pBackGroundY == null) {
		pBackGroundY = 0;
	}
	if(pBackGroundX == null) {
		pBackGroundX = 0;
	}
	if(pRadius == null) {
		pRadius = 30;
	}
	if(pBackGrndOpacity == null) {
		pBackGrndOpacity = 0.9;
	}
	if(pBackGrndColor == null) {
		pBackGrndColor = "black";
	}
	if(pShadow == null) {
		pShadow = true;
	}
	if(pAlign == null) {
		pAlign = "left";
	}
	if(pTxtColor == null) {
		pTxtColor = "white";
	}
	if(pFont == null) {
		pFont = "Arial";
	}
	if(pTextSize == null) {
		pTextSize = 40;
	}
	this.backgroundColor = 0;
	PIXI.Container.call(this);
	this.element = pParent;
	this.rotation = Math.PI * pRotation / 180;
	this.paramMarginX = pTextPosX;
	this.paramMarginY = pTextPosY;
	this.timerTxt = new PIXI.Text("",{ font : pTextSize + "px " + pFont, fill : pTxtColor, align : pAlign, dropShadow : pShadow});
	this.timerTxt.position.set(pTextPosX,pTextPosY);
	this.timerBackground = new PIXI.Graphics();
	this.backgroundColor = this.castColor(pBackGrndColor);
	this.timerBackground.beginFill(this.backgroundColor,pBackGrndOpacity);
	this.timerBackground.drawRoundedRect(this.x,this.y,pBackWidth,pBackHeight,pRadius);
	this.timerBackground.endFill();
	this.timerBackground.x = pBackGroundX;
	this.timerBackground.y = pBackGroundY;
	this.addChild(this.timerBackground);
	this.addChild(this.timerTxt);
};
$hxClasses["com.isartdigital.utils.ui.SmartText"] = com_isartdigital_utils_ui_SmartText;
com_isartdigital_utils_ui_SmartText.__name__ = ["com","isartdigital","utils","ui","SmartText"];
com_isartdigital_utils_ui_SmartText.__super__ = PIXI.Container;
com_isartdigital_utils_ui_SmartText.prototype = $extend(PIXI.Container.prototype,{
	castColor: function(pBackGrndColor) {
		var lColor = null;
		if(pBackGrndColor == "black") {
			lColor = 0;
		}
		if(pBackGrndColor == "cyan") {
			lColor = 49087;
		}
		if(pBackGrndColor == "blue") {
			lColor = 18541;
		}
		if(pBackGrndColor == "green") {
			lColor = 7389000;
		}
		if(pBackGrndColor == "orange") {
			lColor = 16741662;
		}
		if(pBackGrndColor == "pink") {
			lColor = 16741764;
		}
		if(pBackGrndColor == "yellow") {
			lColor = 16776960;
		}
		if(pBackGrndColor == "red") {
			lColor = 16711680;
		}
		return lColor;
	}
	,refreshText: function(textToDisplay) {
		if(this.timerTxt.text != textToDisplay) {
			this.timerTxt.text = textToDisplay;
			this.timerBackground.width = this.timerTxt.width + this.paramMarginX * 2;
			this.timerBackground.height = this.timerTxt.height + this.paramMarginY;
		}
	}
	,destroyTimer: function() {
		if(this.timerBackground != null) {
			this.removeChild(this.timerBackground);
		}
		if(this.timerTxt != null) {
			this.removeChild(this.timerTxt);
		}
		if(this.element != null) {
			this.element.removeChild(this);
		}
		this.timerBackground = null;
		this.timerTxt = null;
		this.element = null;
	}
	,__class__: com_isartdigital_utils_ui_SmartText
});
var com_isartdigital_utils_ui_UIPosition = function() {
};
$hxClasses["com.isartdigital.utils.ui.UIPosition"] = com_isartdigital_utils_ui_UIPosition;
com_isartdigital_utils_ui_UIPosition.__name__ = ["com","isartdigital","utils","ui","UIPosition"];
com_isartdigital_utils_ui_UIPosition.setPosition = function(pTarget,pPosition,pOffsetX,pOffsetY) {
	if(pOffsetY == null) {
		pOffsetY = 0;
	}
	if(pOffsetX == null) {
		pOffsetX = 0;
	}
	var lScreen = com_isartdigital_utils_system_DeviceCapabilities.getScreenRect(pTarget.parent);
	var lTopLeft = new PIXI.Point(lScreen.x,lScreen.y);
	var lBottomRight = new PIXI.Point(lScreen.x + lScreen.width,lScreen.y + lScreen.height);
	if(pPosition == "top" || pPosition == "topLeft" || pPosition == "topRight") {
		pTarget.y = lTopLeft.y + pOffsetY;
	}
	if(pPosition == "bottom" || pPosition == "bottomLeft" || pPosition == "bottomRight") {
		pTarget.y = lBottomRight.y - pOffsetY;
	}
	if(pPosition == "left" || pPosition == "topLeft" || pPosition == "bottomLeft") {
		pTarget.x = lTopLeft.x + pOffsetX;
	}
	if(pPosition == "right" || pPosition == "topRight" || pPosition == "bottomRight") {
		pTarget.x = lBottomRight.x - pOffsetX;
	}
	if(pPosition == "fitWidth" || pPosition == "fitScreen") {
		pTarget.x = lTopLeft.x;
		pTarget.width = lBottomRight.x - lTopLeft.x;
	}
	if(pPosition == "fitHeight" || pPosition == "fitScreen") {
		pTarget.y = lTopLeft.y;
		pTarget.height = lBottomRight.y - lTopLeft.y;
	}
};
com_isartdigital_utils_ui_UIPosition.prototype = {
	__class__: com_isartdigital_utils_ui_UIPosition
};
var com_isartdigital_utils_ui_smart_TextSprite = function(pData) {
	PIXI.Container.call(this);
	var lStyle = { font : StringTools.replace(pData.font,"*",""), fill : pData.color, align : pData.align, wordWrap : pData.wordWrap == 1, wordWrapWidth : pData.width};
	this.textField = new PIXI.Text(com_isartdigital_utils_ui_smart_TextSprite.parseText(StringTools.replace(pData.text,"</BR>","\r")),lStyle);
	if(pData.align == "center") {
		this.textField.anchor.x = 0.5;
	} else if(pData.align == "right") {
		this.textField.anchor.x = 1;
	}
	if(pData.verticalAlign == "top") {
		this.textField.anchor.y = 0;
	}
	if(pData.verticalAlign == "bottom") {
		this.textField.anchor.y = 1;
	} else {
		this.textField.anchor.y = 0.5;
	}
	if(com_isartdigital_utils_Config.get_debug()) {
		var lGraph = new PIXI.Graphics();
		lGraph.beginFill(16776960);
		lGraph.drawRect(pData.x,pData.y,pData.width,pData.height);
		lGraph.endFill();
		lGraph.alpha = 0.5;
		this.addChild(lGraph);
	}
	this.addChild(this.textField);
};
$hxClasses["com.isartdigital.utils.ui.smart.TextSprite"] = com_isartdigital_utils_ui_smart_TextSprite;
com_isartdigital_utils_ui_smart_TextSprite.__name__ = ["com","isartdigital","utils","ui","smart","TextSprite"];
com_isartdigital_utils_ui_smart_TextSprite.defaultParseText = function(pTxt) {
	return pTxt;
};
com_isartdigital_utils_ui_smart_TextSprite.__super__ = PIXI.Container;
com_isartdigital_utils_ui_smart_TextSprite.prototype = $extend(PIXI.Container.prototype,{
	get_text: function() {
		return this.textField.text;
	}
	,set_text: function(pText) {
		this.textField.text = pText;
		return pText;
	}
	,__class__: com_isartdigital_utils_ui_smart_TextSprite
	,__properties__: {set_text:"set_text",get_text:"get_text"}
});
var com_isartdigital_utils_ui_smart_UIBuilder = function() {
};
$hxClasses["com.isartdigital.utils.ui.smart.UIBuilder"] = com_isartdigital_utils_ui_smart_UIBuilder;
com_isartdigital_utils_ui_smart_UIBuilder.__name__ = ["com","isartdigital","utils","ui","smart","UIBuilder"];
com_isartdigital_utils_ui_smart_UIBuilder.build = function(pId,pFrame) {
	if(pFrame == null) {
		pFrame = 0;
	}
	var lMovie = pixi_flump_Resource.getResourceForMovie(pId).library.movies.h[pId];
	var lObj;
	var lUIPos = [];
	var lLayer;
	var lKeyFrame;
	var _g1 = 0;
	var _g = lMovie.layers.length;
	while(_g1 < _g) {
		var i = _g1++;
		lObj = null;
		lLayer = lMovie.layers[i];
		lKeyFrame = lLayer.getKeyframeForFrame(pFrame);
		if(lKeyFrame == null || lKeyFrame.symbol == null) {
			continue;
		}
		if(lKeyFrame.symbol.data != null && lKeyFrame.symbol.data.className != null) {
			lObj = Type.createInstance(Type.resolveClass(lKeyFrame.symbol.data.className),[]);
		} else if(lKeyFrame.symbol.baseClass == "Flipbook") {
			lObj = new com_isartdigital_utils_ui_smart_UIMovie(lKeyFrame.symbolId);
		} else if(lKeyFrame.symbol.baseClass == "TextSprite") {
			lObj = new com_isartdigital_utils_ui_smart_TextSprite(lKeyFrame.symbol.data);
		} else if(js_Boot.__instanceof(lKeyFrame.symbol,flump_library_SpriteSymbol)) {
			lObj = new com_isartdigital_utils_ui_smart_UISprite(lKeyFrame.symbolId);
		} else if(lKeyFrame.symbol.baseClass == "flash.display.SimpleButton") {
			lObj = new com_isartdigital_utils_ui_smart_SmartButton(lKeyFrame.symbolId);
		} else {
			var lChild = pixi_flump_Resource.getResourceForMovie(lKeyFrame.symbolId).library.movies.h[lKeyFrame.symbolId];
			var lChildLayer;
			var _g2 = 0;
			var _g3 = lChild.layers;
			while(_g2 < _g3.length) {
				var lChildLayer1 = _g3[_g2];
				++_g2;
				if(lChildLayer1.keyframes.length > 1) {
					lObj = new com_isartdigital_utils_ui_smart_UIMovie(lKeyFrame.symbolId);
					break;
				}
			}
			if(lObj == null) {
				lObj = new com_isartdigital_utils_ui_smart_SmartComponent(lKeyFrame.symbolId);
				(js_Boot.__cast(lObj , com_isartdigital_utils_ui_smart_SmartComponent)).set_modal(false);
			}
		}
		lObj.name = lLayer.name;
		lObj.position = new PIXI.Point(lKeyFrame.location.x / com_isartdigital_utils_system_DeviceCapabilities.textureRatio,lKeyFrame.location.y / com_isartdigital_utils_system_DeviceCapabilities.textureRatio);
		lObj.scale = new PIXI.Point(lKeyFrame.scale.x,lKeyFrame.scale.y);
		lObj.skew = new PIXI.Point(lKeyFrame.skew.x,lKeyFrame.skew.y);
		if(lKeyFrame.tintMultiplier != null && lKeyFrame.tintMultiplier != 0) {
			lObj.filters = [new flump_filters_AnimateTintFilter(lKeyFrame.tintColor,lKeyFrame.tintMultiplier)];
		}
		var lUIPosition = "";
		if(lKeyFrame.data != null) {
			var o = lKeyFrame.data;
			var field = "UIPosition_" + com_isartdigital_utils_system_DeviceCapabilities.get_system();
			if(Object.prototype.hasOwnProperty.call(o,field)) {
				lUIPosition = Reflect.field(lKeyFrame.data,"UIPosition_" + com_isartdigital_utils_system_DeviceCapabilities.get_system());
			} else if(lKeyFrame.data.UIPosition != null) {
				lUIPosition = lKeyFrame.data.UIPosition;
			}
		}
		lUIPos.push(com_isartdigital_utils_ui_smart_UIBuilder.getUIPositionable(lObj,lUIPosition));
	}
	return lUIPos;
};
com_isartdigital_utils_ui_smart_UIBuilder.getUIPositionable = function(pObj,pPosition) {
	var lOffset = new PIXI.Point(0,0);
	if(pPosition == "top" || pPosition == "topLeft" || pPosition == "topRight" || pPosition == "bottom" || pPosition == "bottomLeft" || pPosition == "bottomRight") {
		lOffset.y = pObj.y;
	}
	if(pPosition == "left" || pPosition == "topLeft" || pPosition == "bottomLeft" || pPosition == "right" || pPosition == "topRight" || pPosition == "bottomRight") {
		lOffset.x = pObj.x;
	}
	return { item : pObj, align : pPosition, offsetX : lOffset.x, offsetY : lOffset.y, update : true};
};
com_isartdigital_utils_ui_smart_UIBuilder.prototype = {
	__class__: com_isartdigital_utils_ui_smart_UIBuilder
};
var com_isartdigital_utils_ui_smart_UISprite = function(pAssetName) {
	com_isartdigital_utils_game_StateGraphic.call(this);
	this.assetName = pAssetName;
	this.factory = new com_isartdigital_utils_game_factory_FlumpSpriteAnimFactory();
	this.setState(this.DEFAULT_STATE);
};
$hxClasses["com.isartdigital.utils.ui.smart.UISprite"] = com_isartdigital_utils_ui_smart_UISprite;
com_isartdigital_utils_ui_smart_UISprite.__name__ = ["com","isartdigital","utils","ui","smart","UISprite"];
com_isartdigital_utils_ui_smart_UISprite.__super__ = com_isartdigital_utils_game_StateGraphic;
com_isartdigital_utils_ui_smart_UISprite.prototype = $extend(com_isartdigital_utils_game_StateGraphic.prototype,{
	__class__: com_isartdigital_utils_ui_smart_UISprite
});
var flump_DisplayObjectKey = function(symbolId) {
	this.symbolId = symbolId;
};
$hxClasses["flump.DisplayObjectKey"] = flump_DisplayObjectKey;
flump_DisplayObjectKey.__name__ = ["flump","DisplayObjectKey"];
flump_DisplayObjectKey.prototype = {
	__class__: flump_DisplayObjectKey
};
var flump_IFlumpMovie = function() { };
$hxClasses["flump.IFlumpMovie"] = flump_IFlumpMovie;
flump_IFlumpMovie.__name__ = ["flump","IFlumpMovie"];
flump_IFlumpMovie.prototype = {
	__class__: flump_IFlumpMovie
};
var flump_MoviePlayer = function(symbol,movie,resolution) {
	this.position = 0.0;
	this.fullyGenerated = false;
	this.dirty = false;
	this.changed = 0;
	this.labelsToFire = [];
	this.childPlayers = new haxe_ds_ObjectMap();
	this.createdChildren = new haxe_ds_ObjectMap();
	this.currentChildrenKey = new haxe_ds_ObjectMap();
	this.STATE_STOPPED = "stopped";
	this.STATE_LOOPING = "looping";
	this.STATE_PLAYING = "playing";
	this.independantControl = true;
	this.independantTimeline = true;
	this.prevPosition = -1;
	this.advanced = 0.0;
	this.previousElapsed = 0.0;
	this.elapsed = 0.0;
	this.symbol = symbol;
	this.movie = movie;
	this.resolution = resolution;
	var _g = 0;
	var _g1 = symbol.layers;
	while(_g < _g1.length) {
		var layer = _g1[_g];
		++_g;
		movie.createLayer(layer);
	}
	this.state = this.STATE_LOOPING;
	this.advanceTime(0);
	var _g2 = 0;
	var _g11 = symbol.layers;
	while(_g2 < _g11.length) {
		var layer1 = _g11[_g2];
		++_g2;
		movie.setMask(layer1);
	}
};
$hxClasses["flump.MoviePlayer"] = flump_MoviePlayer;
flump_MoviePlayer.__name__ = ["flump","MoviePlayer"];
flump_MoviePlayer.prototype = {
	get_labels: function() {
		var _this = this.symbol.labels;
		return new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
	}
	,getDisplayKey: function(layerId,keyframeIndex) {
		if(keyframeIndex == null) {
			keyframeIndex = 0;
		}
		var layer = this.symbol.getLayer(layerId);
		if(layer == null) {
			throw new js__$Boot_HaxeError("Layer " + layerId + " does not exist.");
		}
		var keyframe = layer.getKeyframeForFrame(keyframeIndex);
		if(keyframe == null) {
			throw new js__$Boot_HaxeError("Keyframe does not exist at index " + Std.string(_$UInt_UInt_$Impl_$.toFloat(keyframeIndex)));
		}
		this.createChildIfNessessary(keyframe);
		return keyframe.displayKey;
	}
	,reset: function() {
		this.elapsed = 0;
		this.previousElapsed = 0;
		this.prevPosition = -1;
	}
	,get_position: function() {
		var lModPos = (this.elapsed % this.symbol.duration + this.symbol.duration) % this.symbol.duration;
		var lEndPos;
		if(this.state == this.STATE_PLAYING) {
			lEndPos = this.symbol.duration - this.symbol.library.frameTime;
			if(this.elapsed >= lEndPos) {
				return lEndPos;
			} else {
				return lModPos;
			}
		} else {
			return lModPos;
		}
	}
	,get_totalFrames: function() {
		return this.symbol.totalFrames;
	}
	,play: function() {
		this.setState(this.STATE_PLAYING);
		return this;
	}
	,loop: function() {
		this.setState(this.STATE_LOOPING);
		return this;
	}
	,stop: function() {
		this.setState(this.STATE_STOPPED);
		return this;
	}
	,goToLabel: function(label) {
		if(!this.labelExists(label)) {
			throw new js__$Boot_HaxeError("Symbol " + this.symbol.name + " does not have label " + label + ".");
		}
		this.set_currentFrame(this.getLabelFrame(label));
		this.fireHitFrames(this.getLabelFrame(label));
		return this;
	}
	,goToFrame: function(frame) {
		this.set_currentFrame(frame);
		this.fireHitFrames(frame);
		return this;
	}
	,fireHitFrames: function(frame) {
		this.changed++;
		var current = this.changed;
		var time = frame * this.symbol.library.frameTime;
		var _g = 0;
		var _g1 = this.symbol.layers;
		while(_g < _g1.length) {
			var layer = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = layer.keyframes;
			while(_g2 < _g3.length) {
				var kf = _g3[_g2];
				++_g2;
				if(current != this.changed) {
					return;
				}
				if(kf.label != null) {
					if(kf.timeInside(time)) {
						this.movie.labelHit(kf.label);
					}
				}
			}
		}
	}
	,goToPosition: function(time) {
		this.elapsed = time;
		this.previousElapsed = time;
		this.clearLabels();
		return this;
	}
	,get_playing: function() {
		return this.state == this.STATE_PLAYING;
	}
	,get_looping: function() {
		return this.state == this.STATE_LOOPING;
	}
	,get_stopped: function() {
		return this.state == this.STATE_STOPPED;
	}
	,getLabelFrame: function(label) {
		if(!this.labelExists(label)) {
			throw new js__$Boot_HaxeError("Symbol " + this.symbol.name + " does not have label " + label + ".");
		}
		var _this = this.symbol.labels;
		return (__map_reserved[label] != null?_this.getReserved(label):_this.h[label]).keyframe.index;
	}
	,get_currentFrame: function() {
		return this.get_position() / this.symbol.library.frameTime | 0;
	}
	,set_currentFrame: function(value) {
		this.goToPosition(this.symbol.library.frameTime * value);
		return value;
	}
	,labelExists: function(label) {
		var _this = this.symbol.labels;
		if(__map_reserved[label] != null) {
			return _this.existsReserved(label);
		} else {
			return _this.h.hasOwnProperty(label);
		}
	}
	,advanceTime: function(ms) {
		if(this.state != this.STATE_STOPPED) {
			this.elapsed += ms;
			while(this.elapsed < 0) {
				this.elapsed += this.symbol.duration;
				this.previousElapsed += this.symbol.duration;
			}
		}
		this.advanced += ms;
		if(this.state != this.STATE_STOPPED) {
			this.fireLabels();
		}
		this.render();
	}
	,clearLabels: function() {
		while(this.labelsToFire.length > 0) this.labelsToFire.pop();
	}
	,fireLabels: function() {
		if(this.symbol.firstLabel == null) {
			return;
		}
		if(this.previousElapsed > this.elapsed) {
			return;
		}
		var label = this.previousElapsed <= this.elapsed?this.symbol.firstLabel:this.symbol.lastLabel;
		var checking = true;
		while(checking) if(label.keyframe.time > this.previousElapsed % this.symbol.duration) {
			checking = false;
		} else if(_$UInt_UInt_$Impl_$.gte(label.keyframe.index,label.next.keyframe.index)) {
			checking = false;
			label = label.next;
		} else {
			label = label.next;
		}
		var firstChecked = label;
		while(label != null) {
			if(label.keyframe.insideRangeStart(this.previousElapsed % this.symbol.duration,this.elapsed % this.symbol.duration) && this.state != this.STATE_STOPPED) {
				this.labelsToFire.push(label);
			}
			label = label.next;
			if(label == firstChecked) {
				label = null;
			}
		}
		while(this.labelsToFire.length > 0) this.movie.labelPassed(this.labelsToFire.shift());
	}
	,render: function() {
		var lIsUpdate = true;
		var next = null;
		var interped = -1;
		var lColor = -1;
		if(this.state == this.STATE_PLAYING) {
			if(this.get_position() >= this.symbol.duration - this.symbol.library.frameTime) {
				this.elapsed = this.symbol.duration - this.symbol.library.frameTime;
				this.stop();
				this.movie.onAnimationComplete();
			}
		}
		if(this.get_position() != this.prevPosition && (this.prevPosition < 0 || _$UInt_UInt_$Impl_$.gt(this.get_totalFrames(),1))) {
			this.prevPosition = this.get_position();
		} else {
			lIsUpdate = false;
		}
		var _g = 0;
		var _g1 = this.symbol.layers;
		while(_g < _g1.length) {
			var layer = _g1[_g];
			++_g;
			var keyframe = layer.getKeyframeForTime(this.get_position());
			if(keyframe.isEmpty == true) {
				this.removeChildIfNessessary(keyframe);
			} else if(keyframe.isEmpty == false) {
				if(lIsUpdate) {
					interped = this.getInterpolation(keyframe,this.get_position());
					next = keyframe.next;
					if(next.isEmpty) {
						next = keyframe;
					}
					if(keyframe.tintColor != next.tintColor) {
						var lPrevColor = keyframe.tintColor;
						var lNextColor = next.tintColor;
						var lPrevR = lPrevColor >> 16 & 255;
						var lPrevG = lPrevColor >> 8 & 255;
						var lPrevB = lPrevColor & 255;
						lColor = Math.round(lPrevR + ((lNextColor >> 16 & 255) - lPrevR) * interped) << 16 | Math.round(lPrevG + ((lNextColor >> 8 & 255) - lPrevG) * interped) << 8 | Math.round(lPrevB + ((lNextColor & 255) - lPrevB) * interped);
					} else {
						lColor = keyframe.tintColor;
					}
					if(this.currentChildrenKey.h[layer.__id__] != keyframe.displayKey) {
						this.createChildIfNessessary(keyframe);
						this.removeChildIfNessessary(keyframe);
						this.addChildIfNessessary(keyframe);
					}
				}
				if(js_Boot.__instanceof(keyframe.symbol,flump_library_MovieSymbol)) {
					var childMovie = this.movie.getChildPlayer(keyframe);
					if(childMovie.independantTimeline) {
						childMovie.advanceTime(this.advanced);
					} else {
						childMovie.elapsed = this.get_position();
						childMovie.render();
					}
				}
				if(lIsUpdate) {
					this.movie.renderFrame(keyframe,keyframe.location.x + (next.location.x - keyframe.location.x) * interped,keyframe.location.y + (next.location.y - keyframe.location.y) * interped,keyframe.scale.x + (next.scale.x - keyframe.scale.x) * interped,keyframe.scale.y + (next.scale.y - keyframe.scale.y) * interped,keyframe.skew.x + (next.skew.x - keyframe.skew.x) * interped,keyframe.skew.y + (next.skew.y - keyframe.skew.y) * interped,keyframe.alpha + (next.alpha - keyframe.alpha) * interped,keyframe.tintMultiplier + (next.tintMultiplier - keyframe.tintMultiplier) * interped,lColor);
				}
			}
		}
		this.advanced = 0;
		this.previousElapsed = this.elapsed;
	}
	,createChildIfNessessary: function(keyframe) {
		if(keyframe.isEmpty) {
			return;
		}
		if(this.createdChildren.h.__keys__[keyframe.displayKey.__id__] != null == false) {
			this.movie.createFlumpChild(keyframe.displayKey);
			this.createdChildren.set(keyframe.displayKey,true);
		}
	}
	,removeChildIfNessessary: function(keyframe) {
		if(this.currentChildrenKey.h.__keys__[keyframe.layer.__id__] != null) {
			this.movie.removeFlumpChild(keyframe.layer,keyframe.displayKey);
			this.currentChildrenKey.remove(keyframe.layer);
		}
	}
	,addChildIfNessessary: function(keyframe) {
		if(keyframe.isEmpty) {
			return;
		}
		this.currentChildrenKey.set(keyframe.layer,keyframe.displayKey);
		this.movie.addFlumpChild(keyframe.layer,keyframe.displayKey);
	}
	,setState: function(state) {
		this.state = state;
		var _g = 0;
		var _g1 = this.symbol.layers;
		while(_g < _g1.length) {
			var layer = _g1[_g];
			++_g;
			var keyframe = layer.getKeyframeForTime(this.get_position());
			this.createChildIfNessessary(keyframe);
			if(js_Boot.__instanceof(keyframe.symbol,flump_library_MovieSymbol)) {
				var childMovie = this.movie.getChildPlayer(keyframe);
				if(childMovie.independantControl == false) {
					childMovie.setState(state);
				}
			}
		}
		this.advanceTime(0);
	}
	,timeForLabel: function(label) {
		var _this = this.symbol.labels;
		return (__map_reserved[label] != null?_this.getReserved(label):_this.h[label]).keyframe.time;
	}
	,getInterpolation: function(keyframe,time) {
		if(keyframe.tweened == false) {
			return 0.0;
		}
		var interped = (time - keyframe.time) / keyframe.duration;
		var ease = keyframe.ease;
		if(ease != 0) {
			var t;
			if(ease < 0) {
				var inv = 1 - interped;
				t = 1 - inv * inv;
				ease = -ease;
			} else {
				t = interped * interped;
			}
			interped = ease * t + (1 - ease) * interped;
		}
		return interped;
	}
	,__class__: flump_MoviePlayer
	,__properties__: {set_currentFrame:"set_currentFrame",get_currentFrame:"get_currentFrame",get_stopped:"get_stopped",get_looping:"get_looping",get_playing:"get_playing",get_totalFrames:"get_totalFrames",get_position:"get_position",get_labels:"get_labels"}
};
var flump_filters_AnimateTintFilter = function(pColor,pMultiplier) {
	if(pMultiplier == null) {
		pMultiplier = 1;
	}
	this.color = pColor;
	this.multiplier = pMultiplier;
	this.uniforms = { color : { type : "v3", value : this.hex2v3(this.color)}, multiplier : { type : "1f", value : this.multiplier}};
	PIXI.AbstractFilter.call(this,null,this.getFragmentSrc(),this.uniforms);
};
$hxClasses["flump.filters.AnimateTintFilter"] = flump_filters_AnimateTintFilter;
flump_filters_AnimateTintFilter.__name__ = ["flump","filters","AnimateTintFilter"];
flump_filters_AnimateTintFilter.__super__ = PIXI.AbstractFilter;
flump_filters_AnimateTintFilter.prototype = $extend(PIXI.AbstractFilter.prototype,{
	getFragmentSrc: function() {
		var lSrc = "";
		lSrc = "precision mediump float;varying vec2 vTextureCoord;uniform sampler2D uSampler;uniform vec3 color;uniform float multiplier;";
		lSrc = "precision mediump float;varying vec2 vTextureCoord;uniform sampler2D uSampler;uniform vec3 color;uniform float multiplier;" + "void main () { gl_FragColor = texture2D(uSampler, vTextureCoord);";
		lSrc += "gl_FragColor.r = (color.r*multiplier+gl_FragColor.r*(1.0-multiplier)) * gl_FragColor.a;";
		lSrc += "gl_FragColor.g = (color.g*multiplier+gl_FragColor.g*(1.0-multiplier)) * gl_FragColor.a;";
		lSrc += "gl_FragColor.b = (color.b*multiplier+gl_FragColor.b*(1.0-multiplier)) * gl_FragColor.a;";
		lSrc += "}";
		return lSrc;
	}
	,hex2v3: function(pColor) {
		return { x : _$UInt_UInt_$Impl_$.toFloat(pColor >>> 16 & 255) / _$UInt_UInt_$Impl_$.toFloat(255), y : _$UInt_UInt_$Impl_$.toFloat(pColor >>> 8 & 255) / _$UInt_UInt_$Impl_$.toFloat(255), z : _$UInt_UInt_$Impl_$.toFloat(pColor & 255) / _$UInt_UInt_$Impl_$.toFloat(255)};
	}
	,update: function(pColor,pMultiplier) {
		if(pMultiplier == null) {
			pMultiplier = 1;
		}
		this.uniforms.color.value = this.hex2v3(this.color = pColor);
		this.uniforms.multiplier.value = this.multiplier = pMultiplier;
	}
	,__class__: flump_filters_AnimateTintFilter
});
var flump_json__$FlumpJSON_FlumpPointSpec_$Impl_$ = {};
$hxClasses["flump.json._FlumpJSON.FlumpPointSpec_Impl_"] = flump_json__$FlumpJSON_FlumpPointSpec_$Impl_$;
flump_json__$FlumpJSON_FlumpPointSpec_$Impl_$.__name__ = ["flump","json","_FlumpJSON","FlumpPointSpec_Impl_"];
flump_json__$FlumpJSON_FlumpPointSpec_$Impl_$.__properties__ = {get_y:"get_y",get_x:"get_x"}
flump_json__$FlumpJSON_FlumpPointSpec_$Impl_$.get_x = function(this1) {
	return this1[0];
};
flump_json__$FlumpJSON_FlumpPointSpec_$Impl_$.get_y = function(this1) {
	return this1[1];
};
var flump_json__$FlumpJSON_FlumpRectSpec_$Impl_$ = {};
$hxClasses["flump.json._FlumpJSON.FlumpRectSpec_Impl_"] = flump_json__$FlumpJSON_FlumpRectSpec_$Impl_$;
flump_json__$FlumpJSON_FlumpRectSpec_$Impl_$.__name__ = ["flump","json","_FlumpJSON","FlumpRectSpec_Impl_"];
flump_json__$FlumpJSON_FlumpRectSpec_$Impl_$.__properties__ = {get_height:"get_height",get_width:"get_width",get_y:"get_y",get_x:"get_x"}
flump_json__$FlumpJSON_FlumpRectSpec_$Impl_$.get_x = function(this1) {
	return this1[0];
};
flump_json__$FlumpJSON_FlumpRectSpec_$Impl_$.get_y = function(this1) {
	return this1[1];
};
flump_json__$FlumpJSON_FlumpRectSpec_$Impl_$.get_width = function(this1) {
	return this1[2];
};
flump_json__$FlumpJSON_FlumpRectSpec_$Impl_$.get_height = function(this1) {
	return this1[3];
};
var flump_library_FlumpLibrary = function(resolution) {
	this.atlases = [];
	this.sprites = new haxe_ds_StringMap();
	this.movies = new haxe_ds_StringMap();
	this.resolution = resolution;
};
$hxClasses["flump.library.FlumpLibrary"] = flump_library_FlumpLibrary;
flump_library_FlumpLibrary.__name__ = ["flump","library","FlumpLibrary"];
flump_library_FlumpLibrary.create = function(flumpData,resolution) {
	var lib = flumpData;
	var spriteSymbols = new haxe_ds_StringMap();
	var movieSymbols = new haxe_ds_StringMap();
	var flumpLibrary = new flump_library_FlumpLibrary(resolution);
	flumpLibrary.sprites = spriteSymbols;
	flumpLibrary.movies = movieSymbols;
	flumpLibrary.framerate = _$UInt_UInt_$Impl_$.toFloat(lib.frameRate);
	flumpLibrary.frameTime = 1000 / flumpLibrary.framerate;
	flumpLibrary.md5 = lib.md5;
	var atlasSpecs = [];
	var textureGroup = null;
	var _g = 0;
	var _g1 = lib.textureGroups;
	while(_g < _g1.length) {
		var tg = _g1[_g];
		++_g;
		if(_$UInt_UInt_$Impl_$.toFloat(tg.scaleFactor) >= resolution && textureGroup == null) {
			textureGroup = tg;
		}
	}
	if(textureGroup == null) {
		textureGroup = lib.textureGroups[lib.textureGroups.length - 1];
	}
	var _g2 = 0;
	var _g11 = textureGroup.atlases;
	while(_g2 < _g11.length) {
		var atlas = _g11[_g2];
		++_g2;
		flumpLibrary.atlases.push(atlas);
		atlasSpecs.push(atlas);
	}
	var _g3 = 0;
	while(_g3 < atlasSpecs.length) {
		var spec = atlasSpecs[_g3];
		++_g3;
		var _g12 = 0;
		var _g21 = spec.textures;
		while(_g12 < _g21.length) {
			var textureSpec = _g21[_g12];
			++_g12;
			new flump_library_Rectangle(textureSpec.rect[0],textureSpec.rect[1],textureSpec.rect[2],textureSpec.rect[3]);
			var origin = new flump_library_Point(textureSpec.origin[0],textureSpec.origin[1]);
			var symbol = new flump_library_SpriteSymbol();
			symbol.name = textureSpec.symbol;
			symbol.data = textureSpec.data;
			symbol.baseClass = textureSpec.baseClass;
			symbol.origin = origin;
			symbol.texture = textureSpec.symbol;
			var key = symbol.name;
			if(__map_reserved[key] != null) {
				spriteSymbols.setReserved(key,symbol);
			} else {
				spriteSymbols.h[key] = symbol;
			}
		}
	}
	var pendingSymbolAttachments = new haxe_ds_ObjectMap();
	var _g4 = 0;
	var _g13 = lib.movies;
	while(_g4 < _g13.length) {
		var movieSpec = _g13[_g4];
		++_g4;
		var symbol1 = new flump_library_MovieSymbol();
		symbol1.name = movieSpec.id;
		symbol1.data = movieSpec.data;
		symbol1.baseClass = movieSpec.baseClass;
		symbol1.library = flumpLibrary;
		var _g22 = 0;
		var _g31 = movieSpec.layers;
		while(_g22 < _g31.length) {
			var layerSpec = _g31[_g22];
			++_g22;
			var layer = new flump_library_Layer(layerSpec.name);
			layer.movie = symbol1;
			layer.mask = layerSpec.mask;
			var previousKeyframe = null;
			var _g41 = 0;
			var _g5 = layerSpec.keyframes;
			while(_g41 < _g5.length) {
				var keyframeSpec = _g5[_g41];
				++_g41;
				var keyframe = new flump_library_Keyframe();
				keyframe.prev = previousKeyframe;
				if(previousKeyframe != null) {
					previousKeyframe.next = keyframe;
				}
				keyframe.layer = layer;
				keyframe.numFrames = keyframeSpec.duration;
				keyframe.duration = _$UInt_UInt_$Impl_$.toFloat(keyframeSpec.duration) * flumpLibrary.frameTime;
				keyframe.index = keyframeSpec.index;
				var time = _$UInt_UInt_$Impl_$.toFloat(keyframe.index) * flumpLibrary.frameTime;
				time *= 10;
				time = Math.floor(time);
				time /= 10;
				keyframe.time = time;
				if(keyframeSpec.ref == null) {
					keyframe.isEmpty = true;
				} else {
					keyframe.isEmpty = false;
					keyframe.symbolId = keyframeSpec.ref;
					keyframe.pivot = keyframeSpec.pivot == null?new flump_library_Point(0,0):new flump_library_Point(keyframeSpec.pivot[0] * resolution,keyframeSpec.pivot[1] * resolution);
					keyframe.location = keyframeSpec.loc == null?new flump_library_Point(0,0):new flump_library_Point(keyframeSpec.loc[0] * resolution,keyframeSpec.loc[1] * resolution);
					keyframe.tweened = keyframeSpec.tweened == false?false:true;
					keyframe.symbol = null;
					keyframe.scale = keyframeSpec.scale == null?new flump_library_Point(1,1):new flump_library_Point(keyframeSpec.scale[0],keyframeSpec.scale[1]);
					keyframe.skew = keyframeSpec.skew == null?new flump_library_Point(0,0):new flump_library_Point(keyframeSpec.skew[0],keyframeSpec.skew[1]);
					keyframe.alpha = keyframeSpec.alpha == null?1:keyframeSpec.alpha;
					keyframe.tintMultiplier = keyframeSpec.tint == null?0:keyframeSpec.tint[0];
					keyframe.tintColor = keyframeSpec.tint == null?0:Std.parseInt(StringTools.replace(js_Boot.__cast(keyframeSpec.tint[1] , String),"#","0x"));
					keyframe.data = keyframeSpec.data;
					keyframe.ease = keyframeSpec.ease == null?0:keyframeSpec.ease;
				}
				if(layer.keyframes.length == 0) {
					layer.firstKeyframe = keyframe;
				}
				if(keyframeSpec.label != null) {
					keyframe.label = new flump_library_Label();
					keyframe.label.keyframe = keyframe;
					keyframe.label.name = keyframeSpec.label;
					var _this = symbol1.labels;
					var key1 = keyframe.label.name;
					var value = keyframe.label;
					if(__map_reserved[key1] != null) {
						_this.setReserved(key1,value);
					} else {
						_this.h[key1] = value;
					}
				}
				var tmp = keyframe.time + keyframe.duration > layer.duration;
				pendingSymbolAttachments.set(keyframe,keyframeSpec.ref);
				layer.keyframes.push(keyframe);
				previousKeyframe = keyframe;
			}
			layer.lastKeyframe = layer.keyframes[layer.keyframes.length - 1];
			layer.keyframes[0].prev = layer.lastKeyframe;
			layer.lastKeyframe.next = layer.keyframes[0];
			symbol1.layers.push(layer);
			if(!Lambda.foreach(layer.keyframes,(function() {
				return function(keyframe1) {
					return keyframe1.isEmpty;
				};
			})())) {
				var _g42 = 0;
				var _g51 = layer.keyframes;
				while(_g42 < _g51.length) {
					var keyframe2 = [_g51[_g42]];
					++_g42;
					if(Lambda.exists(layer.keyframes,(function(keyframe3) {
						return function(checkedKeyframe) {
							if(checkedKeyframe.isEmpty == false) {
								return checkedKeyframe != keyframe3[0];
							} else {
								return false;
							}
						};
					})(keyframe2))) {
						var checked = keyframe2[0].prev;
						while(checked.isEmpty) checked = checked.prev;
						keyframe2[0].prevNonEmptyKeyframe = checked;
						checked = keyframe2[0].next;
						while(checked.isEmpty) checked = checked.next;
						keyframe2[0].nextNonEmptyKeyframe = checked;
					} else {
						keyframe2[0].prevNonEmptyKeyframe = keyframe2[0];
						keyframe2[0].nextNonEmptyKeyframe = keyframe2[0];
					}
				}
				var firstNonEmpty = Lambda.find(layer.keyframes,(function() {
					return function(checkedKeyframe1) {
						return checkedKeyframe1.isEmpty == false;
					};
				})());
				if(firstNonEmpty != null) {
					firstNonEmpty.displayKey = new flump_DisplayObjectKey(firstNonEmpty.symbolId);
				}
				var checked1 = firstNonEmpty.nextNonEmptyKeyframe;
				while(checked1 != firstNonEmpty) {
					if(checked1.symbolId == checked1.prevNonEmptyKeyframe.symbolId) {
						checked1.displayKey = checked1.prevNonEmptyKeyframe.displayKey;
					} else {
						checked1.displayKey = new flump_DisplayObjectKey(checked1.symbolId);
					}
					checked1 = checked1.nextNonEmptyKeyframe;
				}
			}
		}
		symbol1.totalFrames = Lambda.fold(symbol1.layers,(function() {
			return function(layer1,accum) {
				var layerLength = layer1.lastKeyframe.index + layer1.lastKeyframe.numFrames;
				if(_$UInt_UInt_$Impl_$.gt(layerLength,accum)) {
					return layerLength;
				} else {
					return accum;
				}
			};
		})(),0);
		symbol1.duration = _$UInt_UInt_$Impl_$.toFloat(symbol1.totalFrames) * flumpLibrary.frameTime;
		var labels = [];
		var _g23 = 0;
		var _g32 = symbol1.layers;
		while(_g23 < _g32.length) {
			var layer2 = _g32[_g23];
			++_g23;
			var _g43 = 0;
			var _g52 = layer2.keyframes;
			while(_g43 < _g52.length) {
				var keyframe4 = _g52[_g43];
				++_g43;
				if(keyframe4.label != null) {
					labels.push(keyframe4.label);
				}
			}
		}
		haxe_ds_ArraySort.sort(labels,flump_library_FlumpLibrary.sortLabel);
		var _g33 = 0;
		var _g24 = labels.length;
		while(_g33 < _g24) {
			var i = _g33++;
			var nextIndex = i + 1;
			if(nextIndex >= labels.length) {
				nextIndex = 0;
			}
			var label = labels[i];
			var nextLabel = labels[nextIndex];
			label.next = nextLabel;
			nextLabel.prev = label;
		}
		symbol1.firstLabel = labels[0];
		symbol1.lastLabel = labels[labels.length - 1];
		var key2 = symbol1.name;
		if(__map_reserved[key2] != null) {
			movieSymbols.setReserved(key2,symbol1);
		} else {
			movieSymbols.h[key2] = symbol1;
		}
	}
	var tmp1 = pendingSymbolAttachments.keys();
	while(tmp1.hasNext()) {
		var keyframe5 = tmp1.next();
		var symbolId = pendingSymbolAttachments.h[keyframe5.__id__];
		keyframe5.symbol = (__map_reserved[symbolId] != null?spriteSymbols.getReserved(symbolId):spriteSymbols.h[symbolId]) != null?__map_reserved[symbolId] != null?spriteSymbols.getReserved(symbolId):spriteSymbols.h[symbolId]:__map_reserved[symbolId] != null?movieSymbols.getReserved(symbolId):movieSymbols.h[symbolId];
	}
	return flumpLibrary;
};
flump_library_FlumpLibrary.sortLabel = function(a,b) {
	if(_$UInt_UInt_$Impl_$.gt(b.keyframe.index,a.keyframe.index)) {
		return -1;
	} else if(_$UInt_UInt_$Impl_$.gt(a.keyframe.index,b.keyframe.index)) {
		return 1;
	}
	return 0;
};
flump_library_FlumpLibrary.prototype = {
	__class__: flump_library_FlumpLibrary
};
var flump_library_Keyframe = function() {
};
$hxClasses["flump.library.Keyframe"] = flump_library_Keyframe;
flump_library_Keyframe.__name__ = ["flump","library","Keyframe"];
flump_library_Keyframe.prototype = {
	timeInside: function(time) {
		if(this.time <= time) {
			return this.time + this.duration > time;
		} else {
			return false;
		}
	}
	,rangeInside: function(from,to) {
		if(this.timeInside(from)) {
			return this.timeInside(to);
		} else {
			return false;
		}
	}
	,rangeIntersect: function(from,to) {
		if(!this.timeInside(from)) {
			return this.timeInside(to);
		} else {
			return true;
		}
	}
	,insideRangeStart: function(from,to) {
		if(from <= to) {
			if(this.time > from) {
				return this.time <= to;
			} else {
				return false;
			}
		} else if(!(this.time > from)) {
			return this.time <= to;
		} else {
			return true;
		}
	}
	,insideRangeEnd: function(from,to) {
		if(from == to && to == this.time + this.duration) {
			return true;
		}
		if(from > to) {
			if(to <= this.time + this.duration) {
				return from > this.time + this.duration;
			} else {
				return false;
			}
		} else if(!(to <= this.time + this.duration)) {
			return from > this.time + this.duration;
		} else {
			return true;
		}
	}
	,__class__: flump_library_Keyframe
};
var flump_library_Label = function() {
};
$hxClasses["flump.library.Label"] = flump_library_Label;
flump_library_Label.__name__ = ["flump","library","Label"];
flump_library_Label.prototype = {
	__class__: flump_library_Label
};
var flump_library_Layer = function(name) {
	this.keyframes = [];
	this.name = name;
};
$hxClasses["flump.library.Layer"] = flump_library_Layer;
flump_library_Layer.__name__ = ["flump","library","Layer"];
flump_library_Layer.prototype = {
	getKeyframeForFrame: function(index) {
		var _g = 0;
		var _g1 = this.keyframes;
		while(_g < _g1.length) {
			var keyframe = _g1[_g];
			++_g;
			if(_$UInt_UInt_$Impl_$.gte(index,keyframe.index) && _$UInt_UInt_$Impl_$.gt(keyframe.index + keyframe.numFrames,index)) {
				return keyframe;
			}
		}
		return null;
	}
	,getKeyframeForTime: function(time) {
		var keyframe = this.lastKeyframe;
		while(keyframe.time > time % this.movie.duration) keyframe = keyframe.prev;
		return keyframe;
	}
	,__class__: flump_library_Layer
};
var flump_library_Symbol = function() {
};
$hxClasses["flump.library.Symbol"] = flump_library_Symbol;
flump_library_Symbol.__name__ = ["flump","library","Symbol"];
flump_library_Symbol.prototype = {
	__class__: flump_library_Symbol
};
var flump_library_MovieSymbol = function() {
	this.labels = new haxe_ds_StringMap();
	this.layers = [];
	flump_library_Symbol.call(this);
};
$hxClasses["flump.library.MovieSymbol"] = flump_library_MovieSymbol;
flump_library_MovieSymbol.__name__ = ["flump","library","MovieSymbol"];
flump_library_MovieSymbol.__super__ = flump_library_Symbol;
flump_library_MovieSymbol.prototype = $extend(flump_library_Symbol.prototype,{
	getLayer: function(name) {
		var _g = 0;
		var _g1 = this.layers;
		while(_g < _g1.length) {
			var layer = _g1[_g];
			++_g;
			if(layer.name == name) {
				return layer;
			}
		}
		return null;
	}
	,debug: function() {
		var largestLayerChars = Lambda.fold(this.layers,function(layer,result) {
			if(layer.name.length > result) {
				return layer.name.length;
			} else {
				return result;
			}
		},0);
		var repeat = function(character,amount) {
			var output = "";
			while(amount > 0) {
				output += character;
				--amount;
			}
			return output;
		};
		var output1 = "asdfsadf\n";
		output1 = "asdfsadf\n" + repeat(" ",largestLayerChars);
		output1 += "   ";
		var _g1 = 0;
		var _g = this.totalFrames;
		while(_g1 < _g) {
			var i = _g1++;
			if(i % 5 == 0) {
				output1 += i;
			} else if(i % 6 != 0 || i < 10) {
				output1 += " ";
			}
		}
		output1 += "\n";
		output1 += repeat(" ",largestLayerChars);
		output1 += "   ";
		var _g11 = 0;
		var _g2 = this.totalFrames;
		while(_g11 < _g2) if(_g11++ % 5 == 0) {
			output1 += "▽";
		} else {
			output1 += " ";
		}
		output1 += "\n";
		var _g12 = 0;
		var _g3 = this.layers.length;
		while(_g12 < _g3) {
			var layer1 = this.layers[_g12++];
			output1 += layer1.name + repeat(" ",largestLayerChars - layer1.name.length);
			output1 += " : ";
			var _g21 = 0;
			var _g31 = layer1.keyframes;
			while(_g21 < _g31.length) {
				var keyframe = _g31[_g21];
				++_g21;
				if(keyframe.symbolId != null) {
					output1 += "◙";
					if(keyframe.tweened) {
						output1 += repeat("▸",keyframe.numFrames - 1);
					} else {
						output1 += repeat("◉",keyframe.numFrames - 1);
					}
				} else {
					output1 += "○";
					output1 += repeat("◌",keyframe.numFrames - 1);
				}
			}
			output1 += "\n";
		}
		return output1;
	}
	,__class__: flump_library_MovieSymbol
});
var flump_library_Point = function(x,y) {
	this.x = x;
	this.y = y;
};
$hxClasses["flump.library.Point"] = flump_library_Point;
flump_library_Point.__name__ = ["flump","library","Point"];
flump_library_Point.prototype = {
	__class__: flump_library_Point
};
var flump_library_Rectangle = function(x,y,width,height) {
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
};
$hxClasses["flump.library.Rectangle"] = flump_library_Rectangle;
flump_library_Rectangle.__name__ = ["flump","library","Rectangle"];
flump_library_Rectangle.prototype = {
	__class__: flump_library_Rectangle
};
var flump_library_SpriteSymbol = function() {
	flump_library_Symbol.call(this);
};
$hxClasses["flump.library.SpriteSymbol"] = flump_library_SpriteSymbol;
flump_library_SpriteSymbol.__name__ = ["flump","library","SpriteSymbol"];
flump_library_SpriteSymbol.__super__ = flump_library_Symbol;
flump_library_SpriteSymbol.prototype = $extend(flump_library_Symbol.prototype,{
	__class__: flump_library_SpriteSymbol
});
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds_ArraySort = function() { };
$hxClasses["haxe.ds.ArraySort"] = haxe_ds_ArraySort;
haxe_ds_ArraySort.__name__ = ["haxe","ds","ArraySort"];
haxe_ds_ArraySort.sort = function(a,cmp) {
	haxe_ds_ArraySort.rec(a,cmp,0,a.length);
};
haxe_ds_ArraySort.rec = function(a,cmp,from,to) {
	var middle = from + to >> 1;
	if(to - from < 12) {
		if(to <= from) {
			return;
		}
		var _g1 = from + 1;
		while(_g1 < to) {
			var j = _g1++;
			while(j > from) {
				if(cmp(a[j],a[j - 1]) < 0) {
					haxe_ds_ArraySort.swap(a,j - 1,j);
				} else {
					break;
				}
				--j;
			}
		}
		return;
	}
	haxe_ds_ArraySort.rec(a,cmp,from,middle);
	haxe_ds_ArraySort.rec(a,cmp,middle,to);
	haxe_ds_ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);
};
haxe_ds_ArraySort.doMerge = function(a,cmp,from,pivot,to,len1,len2) {
	var first_cut;
	var second_cut;
	var len11;
	var len22;
	var new_mid;
	if(len1 == 0 || len2 == 0) {
		return;
	}
	if(len1 + len2 == 2) {
		if(cmp(a[pivot],a[from]) < 0) {
			haxe_ds_ArraySort.swap(a,pivot,from);
		}
		return;
	}
	if(len1 > len2) {
		len11 = len1 >> 1;
		first_cut = from + len11;
		second_cut = haxe_ds_ArraySort.lower(a,cmp,pivot,to,first_cut);
		len22 = second_cut - pivot;
	} else {
		len22 = len2 >> 1;
		second_cut = pivot + len22;
		first_cut = haxe_ds_ArraySort.upper(a,cmp,from,pivot,second_cut);
		len11 = first_cut - from;
	}
	haxe_ds_ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);
	new_mid = first_cut + len22;
	haxe_ds_ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);
	haxe_ds_ArraySort.doMerge(a,cmp,new_mid,second_cut,to,len1 - len11,len2 - len22);
};
haxe_ds_ArraySort.rotate = function(a,cmp,from,mid,to) {
	var n;
	if(from == mid || mid == to) {
		return;
	}
	n = haxe_ds_ArraySort.gcd(to - from,mid - from);
	while(n-- != 0) {
		var val = a[from + n];
		var shift = mid - from;
		var p1 = from + n;
		var p2 = from + n + shift;
		while(p2 != from + n) {
			a[p1] = a[p2];
			p1 = p2;
			if(to - p2 > shift) {
				p2 += shift;
			} else {
				p2 = from + (shift - (to - p2));
			}
		}
		a[p1] = val;
	}
};
haxe_ds_ArraySort.gcd = function(m,n) {
	while(n != 0) {
		var t = m % n;
		m = n;
		n = t;
	}
	return m;
};
haxe_ds_ArraySort.upper = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[val],a[mid]) < 0) {
			len = half;
		} else {
			from = mid + 1;
			len = len - half - 1;
		}
	}
	return from;
};
haxe_ds_ArraySort.lower = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[mid],a[val]) < 0) {
			from = mid + 1;
			len = len - half - 1;
		} else {
			len = half;
		}
	}
	return from;
};
haxe_ds_ArraySort.swap = function(a,i,j) {
	var tmp = a[i];
	a[i] = a[j];
	a[j] = tmp;
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,__class__: haxe_ds_StringMap
};
var haxe_xml_XmlParserException = function(message,xml,position) {
	this.xml = xml;
	this.message = message;
	this.position = position;
	this.lineNumber = 1;
	this.positionAtLine = 0;
	var _g1 = 0;
	while(_g1 < position) {
		var c = xml.charCodeAt(_g1++);
		if(c == 10) {
			this.lineNumber++;
			this.positionAtLine = 0;
		} else if(c != 13) {
			this.positionAtLine++;
		}
	}
};
$hxClasses["haxe.xml.XmlParserException"] = haxe_xml_XmlParserException;
haxe_xml_XmlParserException.__name__ = ["haxe","xml","XmlParserException"];
haxe_xml_XmlParserException.prototype = {
	toString: function() {
		return Type.getClassName(js_Boot.getClass(this)) + ": " + this.message + " at line " + this.lineNumber + " char " + this.positionAtLine;
	}
	,__class__: haxe_xml_XmlParserException
};
var haxe_xml_Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe_xml_Parser;
haxe_xml_Parser.__name__ = ["haxe","xml","Parser"];
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) {
		strict = false;
	}
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) {
		p = 0;
	}
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var c = str.charCodeAt(p);
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(c == c) {
		switch(state) {
		case 0:
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			if(c == 60) {
				state = 0;
				next = 2;
			} else {
				start = p;
				state = 13;
				continue;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <![CDATA[",str,p));
					}
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!DOCTYPE",str,p));
					}
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!--",str,p));
				} else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 47:
				if(parent == null) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				start = p + 1;
				state = 0;
				next = 10;
				break;
			case 63:
				state = 14;
				start = p;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				++nsubs;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				var tmp;
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected attribute name",str,p));
				}
				tmp = HxOverrides.substr(str,start,p - start);
				aname = tmp;
				if(xml.exists(tmp)) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Duplicate attribute [" + tmp + "]",str,p));
				}
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			if(c == 61) {
				state = 0;
				next = 7;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected =",str,p));
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected \"",str,p));
			}
			break;
		case 8:
			switch(c) {
			case 38:
				var len = p - start;
				buf.b += len == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 60:case 62:
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid unescaped " + String.fromCharCode(c) + " in attribute value",str,p));
				} else if(c == attrValQuote) {
					var len1 = p - start;
					buf.b += len1 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len1);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					var len2 = p - start;
					buf.b += len2 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len2);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				var v = HxOverrides.substr(str,start,p - start);
				if(parent.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
				}
				if(v != parent.nodeName) {
					if(parent.nodeType != Xml.Element) {
						throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
					}
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected </" + parent.nodeName + ">",str,p));
				}
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 11:
			if(c == 62) {
				state = 1;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 12:
			if(c == 62) {
				if(nsubs == 0) {
					parent.addChild(Xml.createPCData(""));
				}
				return p;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 13:
			if(c == 60) {
				var len3 = p - start;
				buf.b += len3 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len3);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				++nsubs;
				state = 0;
				next = 2;
			} else if(c == 38) {
				var len4 = p - start;
				buf.b += len4 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len4);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				++p;
				parent.addChild(Xml.createProcessingInstruction(HxOverrides.substr(str,start + 1,p - start - 2)));
				++nsubs;
				state = 1;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) {
				++nbrackets;
			} else if(c == 93) {
				--nbrackets;
			} else if(c == 62 && nbrackets == 0) {
				parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				state = 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createCData(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					buf.b += String.fromCharCode(s.charCodeAt(1) == 120?Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)):Std.parseInt(HxOverrides.substr(s,1,s.length - 1)));
				} else {
					var _this = haxe_xml_Parser.escapes;
					if(!(__map_reserved[s] != null?_this.existsReserved(s):_this.h.hasOwnProperty(s))) {
						if(strict) {
							throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Undefined entity: " + s,str,p));
						}
						buf.b += Std.string("&" + s + ";");
					} else {
						var _this1 = haxe_xml_Parser.escapes;
						buf.b += Std.string(__map_reserved[s] != null?_this1.getReserved(s):_this1.h[s]);
					}
				}
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid character in entity: " + String.fromCharCode(c),str,p));
				}
				buf.b += "&";
				var len5 = p - start;
				buf.b += len5 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len5);
				start = p--;
				state = escapeNext;
			}
			break;
		}
		c = str.charCodeAt(++p);
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(p != start || nsubs == 0) {
			var len6 = p - start;
			buf.b += len6 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len6);
			parent.addChild(Xml.createPCData(buf.b));
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += "&";
		var len7 = p - start;
		buf.b += len7 == null?HxOverrides.substr(str,start,null):HxOverrides.substr(str,start,len7);
		parent.addChild(Xml.createPCData(buf.b));
		return p;
	}
	throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Unexpected end",str,p));
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null?i.fileName + ":" + i.lineNumber + ": ":"";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class && o.__name__ != null) {
			return true;
		}
		if(cl == Enum && o.__ename__ != null) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = ["js","Browser"];
js_Browser.getLocalStorage = function() {
	try {
		var s = window.localStorage;
		s.getItem("");
		return s;
	} catch( e ) {
		return null;
	}
};
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw new js__$Boot_HaxeError("Unable to create XMLHttpRequest object.");
};
js_Browser.alert = function(v) {
	window.alert(js_Boot.__string_rec(v,""));
};
var pixi_flump_Factory = function() { };
$hxClasses["pixi.flump.Factory"] = pixi_flump_Factory;
pixi_flump_Factory.__name__ = ["pixi","flump","Factory"];
pixi_flump_Factory.prototype = {
	__class__: pixi_flump_Factory
};
var pixi_flump_Movie = function(symbolId,resourceId) {
	this.animationSpeed = 1.0;
	this.ticker = PIXI.ticker.shared;
	this.displaying = new haxe_ds_ObjectMap();
	this.movieChildren = new haxe_ds_ObjectMap();
	this.layerLookup = new haxe_ds_StringMap();
	this.layers = new haxe_ds_ObjectMap();
	PIXI.Container.call(this);
	this.resourceId = resourceId;
	if(resourceId == null) {
		this.resource = pixi_flump_Resource.getResourceForMovie(symbolId);
		if(this.resource == null) {
			throw new js__$Boot_HaxeError("Flump movie does not exist: " + symbolId);
		}
	} else {
		this.resource = pixi_flump_Resource.get(resourceId);
		if(this.resource == null) {
			throw new js__$Boot_HaxeError("Flump resource does not exist: " + resourceId);
		}
	}
	this.resolution = this.resource.resolution;
	var _this = this.resource.library.movies;
	this.symbol = __map_reserved[symbolId] != null?_this.getReserved(symbolId):_this.h[symbolId];
	this.player = new flump_MoviePlayer(this.symbol,this,this.resolution);
	this.set_loop(true);
	this.master = true;
	this.once("added",$bind(this,this.onAdded));
};
$hxClasses["pixi.flump.Movie"] = pixi_flump_Movie;
pixi_flump_Movie.__name__ = ["pixi","flump","Movie"];
pixi_flump_Movie.__interfaces__ = [flump_IFlumpMovie];
pixi_flump_Movie.__super__ = PIXI.Container;
pixi_flump_Movie.prototype = $extend(PIXI.Container.prototype,{
	disableAsMaster: function() {
		this.master = false;
		this.off("added",$bind(this,this.onAdded));
	}
	,get_resX: function() {
		return this.x / this.resolution;
	}
	,set_resX: function(value) {
		this.x = value * this.resolution;
		return value;
	}
	,get_resY: function() {
		return this.y / this.resolution;
	}
	,set_resY: function(value) {
		this.y = value * this.resolution;
		return value;
	}
	,get_resScaleX: function() {
		return this.scale.x / this.resolution;
	}
	,set_resScaleX: function(value) {
		this.scale.x = value * this.resolution;
		return value;
	}
	,get_resScaleY: function() {
		return this.scale.y / this.resolution;
	}
	,set_resScaleY: function(value) {
		this.scale.y = value * this.resolution;
		return value;
	}
	,getLayer: function(layerId) {
		var _this = this.layerLookup;
		if((__map_reserved[layerId] != null?_this.existsReserved(layerId):_this.h.hasOwnProperty(layerId)) == false) {
			throw new js__$Boot_HaxeError("Layer " + layerId + "does not exist");
		}
		var _this1 = this.layerLookup;
		return __map_reserved[layerId] != null?_this1.getReserved(layerId):_this1.h[layerId];
	}
	,getChildDisplayObject: function(layerId,keyframeIndex) {
		if(keyframeIndex == null) {
			keyframeIndex = 0;
		}
		return this.movieChildren.h[this.player.getDisplayKey(layerId,keyframeIndex).__id__];
	}
	,getChildMovie: function(layerId,keyframeIndex) {
		if(keyframeIndex == null) {
			keyframeIndex = 0;
		}
		var child = this.getChildDisplayObject(layerId,keyframeIndex);
		if(js_Boot.__instanceof(child,pixi_flump_Movie) == false) {
			throw new js__$Boot_HaxeError("Child on layer " + layerId + " at keyframeIndex " + Std.string(_$UInt_UInt_$Impl_$.toFloat(keyframeIndex)) + " is not of type flump.Movie!");
		}
		return child;
	}
	,get_symbolId: function() {
		return this.symbol.name;
	}
	,set_loop: function(value) {
		if(value && this.player.get_playing()) {
			this.player.loop();
		} else if(value == false && this.player.get_looping()) {
			this.player.play();
		}
		return this.loop = value;
	}
	,set_onComplete: function(value) {
		return this.onComplete = value;
	}
	,set_currentFrame: function(value) {
		this.player.set_currentFrame(value);
		return value;
	}
	,get_currentFrame: function() {
		return this.player.get_currentFrame();
	}
	,get_playing: function() {
		if(!this.player.get_playing()) {
			return this.player.get_looping();
		} else {
			return true;
		}
	}
	,get_independantTimeline: function() {
		return this.player.independantTimeline;
	}
	,set_independantTimeline: function(value) {
		this.player.independantTimeline = value;
		return value;
	}
	,get_independantControl: function() {
		return this.player.independantControl;
	}
	,set_independantControl: function(value) {
		this.player.independantControl = value;
		return value;
	}
	,get_totalFrames: function() {
		return this.player.get_totalFrames();
	}
	,set_tint: function(pTint) {
		var tmp = this.movieChildren.iterator();
		while(tmp.hasNext()) {
			var child = tmp.next();
			if(js_Boot.__instanceof(child,pixi_flump_Sprite)) {
				(js_Boot.__cast(child , pixi_flump_Sprite)).tint = pTint;
			} else if(js_Boot.__instanceof(child,pixi_flump_Movie)) {
				(js_Boot.__cast(child , pixi_flump_Movie)).set_tint(pTint);
			}
		}
		return this.tint = pTint;
	}
	,stop: function() {
		this.player.stop();
	}
	,play: function() {
		if(this.loop) {
			this.player.loop();
		} else {
			this.player.play();
		}
	}
	,gotoAndStop: function(frameNumber) {
		if(!this.loop) {
			if(_$UInt_UInt_$Impl_$.gt(frameNumber,this.player.get_totalFrames() - 1)) {
				frameNumber = this.player.get_totalFrames() - 1;
			} else if(frameNumber < 0) {
				frameNumber = 0;
			}
		}
		this.player.goToFrame(frameNumber).stop();
	}
	,gotoAndPlay: function(frameNumber) {
		if(!this.loop) {
			if(_$UInt_UInt_$Impl_$.gt(frameNumber,this.player.get_totalFrames() - 1)) {
				frameNumber = this.player.get_totalFrames() - 1;
			} else if(frameNumber < 0) {
				frameNumber = 0;
			}
		}
		if(this.loop) {
			this.player.goToFrame(frameNumber).loop();
		} else {
			this.player.goToFrame(frameNumber).play();
		}
	}
	,getLabelFrame: function(label) {
		return this.player.getLabelFrame(label);
	}
	,tick: function() {
		this.player.advanceTime(this.ticker.elapsedMS * this.animationSpeed);
	}
	,onAdded: function(to) {
		this.once("removed",$bind(this,this.onRemoved));
		this.ticker.add($bind(this,this.tick));
	}
	,onRemoved: function(from) {
		this.once("added",$bind(this,this.onAdded));
		this.ticker.remove($bind(this,this.tick));
	}
	,createLayer: function(layer) {
		this.layers.set(layer,new PIXI.Container());
		this.layers.h[layer.__id__].name = layer.name;
		var v = this.layers.h[layer.__id__];
		var _this = this.layerLookup;
		var key = layer.name;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,v);
		} else {
			_this.h[key] = v;
		}
		this.addChild(this.layers.h[layer.__id__]);
	}
	,getChildPlayer: function(keyframe) {
		return this.movieChildren.h[keyframe.displayKey.__id__].player;
	}
	,createFlumpChild: function(displayKey) {
		this.movieChildren.set(displayKey,this.resource.createDisplayObject(displayKey.symbolId));
	}
	,removeFlumpChild: function(layer,displayKey) {
		this.layers.h[layer.__id__].removeChildren();
	}
	,addFlumpChild: function(layer,displayKey) {
		this.layers.h[layer.__id__].addChild(this.movieChildren.h[displayKey.__id__]);
	}
	,onAnimationComplete: function() {
		if(this.onComplete != null) {
			this.onComplete();
		}
	}
	,renderFrame: function(keyframe,x,y,scaleX,scaleY,skewX,skewY,alpha,tintMultiplier,tintColor) {
		var layer = this.layers.h[keyframe.layer.__id__];
		var lChild = null;
		var spriteSymbol = null;
		layer.x = x;
		layer.y = y;
		if(this.master) {
			layer.x /= this.resolution;
			layer.y /= this.resolution;
		}
		if(layer.children.length > 0) {
			lChild = layer.getChildAt(0);
			lChild.scale.x = scaleX;
			lChild.scale.y = scaleY;
			if(this.master) {
				lChild.scale.x /= this.resolution;
				lChild.scale.y /= this.resolution;
			}
		}
		if(layer.name != "flipbook") {
			if(js_Boot.__instanceof(keyframe.symbol,flump_library_SpriteSymbol)) {
				if(lChild != null) {
					spriteSymbol = keyframe.symbol;
					lChild.pivot.x = keyframe.pivot.x - spriteSymbol.origin.x;
					lChild.pivot.y = keyframe.pivot.y - spriteSymbol.origin.y;
					if(this.master) {
						lChild.pivot.x /= this.resolution;
						lChild.pivot.y /= this.resolution;
					}
				}
			} else if(lChild != null && js_Boot.__instanceof(lChild,PIXI.Container) && (js_Boot.__cast(lChild , PIXI.Container)).children.length > 0 && (js_Boot.__cast(lChild , PIXI.Container)).getChildAt(0).name == "flipbook") {
				lChild.pivot.x = keyframe.pivot.x;
				lChild.pivot.y = keyframe.pivot.y;
				if(this.master) {
					lChild.pivot.x /= this.resolution;
					lChild.pivot.y /= this.resolution;
				}
			} else if(lChild != null) {
				lChild.x = -scaleX * keyframe.pivot.x;
				lChild.y = -scaleY * keyframe.pivot.y;
				if(this.master) {
					lChild.x /= this.resolution;
					lChild.y /= this.resolution;
				}
			}
		}
		layer.skew.x = skewX;
		layer.skew.y = skewY;
		layer.alpha = alpha;
		if(keyframe.layer.refAnimatedTint == null) {
			keyframe.layer.refAnimatedTint = new flump_filters_AnimateTintFilter(tintColor,tintMultiplier);
		} else {
			keyframe.layer.refAnimatedTint.update(tintColor,tintMultiplier);
		}
		if(tintMultiplier != 0) {
			layer.filters = [keyframe.layer.refAnimatedTint];
		} else if(layer.filters != null) {
			layer.filters = null;
		}
	}
	,setMask: function(layer) {
		if(layer.mask != null) {
			var lRect = this.getLayer(layer.mask).getChildAt(0).getBounds();
			this.getLayer(layer.mask).removeChildAt(0);
			var lGraph = new PIXI.Graphics();
			lGraph.beginFill(0);
			lGraph.drawRect(lRect.x,lRect.y,lRect.width,lRect.height);
			lGraph.endFill();
			this.getLayer(layer.mask).addChild(lGraph);
			this.layers.h[layer.__id__].mask = lGraph;
		}
	}
	,labelPassed: function(label) {
		this.emit("labelPassed",label.name);
	}
	,labelHit: function(label) {
		this.emit("labelHit",label.name);
	}
	,destroy: function() {
		this.stop();
		this.set_onComplete(null);
		var tmp = this.layers.iterator();
		while(tmp.hasNext()) tmp.next().removeChildren();
		this.symbol = null;
		this.player = null;
		PIXI.Container.prototype.destroy.call(this,true);
	}
	,getBaseClass: function() {
		return this.symbol.baseClass;
	}
	,getCustomData: function() {
		return this.symbol.data;
	}
	,getLayerCustomData: function(layerId,keyframeIndex) {
		if(keyframeIndex == null) {
			keyframeIndex = 0;
		}
		if(this.symbol.getLayer(layerId) == null) {
			throw new js__$Boot_HaxeError("Layer " + layerId + " does not exist.");
		}
		var keyframe = this.symbol.getLayer(layerId).getKeyframeForFrame(keyframeIndex);
		if(keyframe == null) {
			throw new js__$Boot_HaxeError("Keyframe does not exist at index " + Std.string(_$UInt_UInt_$Impl_$.toFloat(keyframeIndex)));
		}
		return keyframe.data;
	}
	,__class__: pixi_flump_Movie
	,__properties__: {set_tint:"set_tint",get_totalFrames:"get_totalFrames",set_independantControl:"set_independantControl",get_independantControl:"get_independantControl",set_independantTimeline:"set_independantTimeline",get_independantTimeline:"get_independantTimeline",get_playing:"get_playing",set_currentFrame:"set_currentFrame",get_currentFrame:"get_currentFrame",set_onComplete:"set_onComplete",set_loop:"set_loop",get_symbolId:"get_symbolId",set_resScaleY:"set_resScaleY",get_resScaleY:"get_resScaleY",set_resScaleX:"set_resScaleX",get_resScaleX:"get_resScaleX",set_resY:"set_resY",get_resY:"get_resY",set_resX:"set_resX",get_resX:"get_resX"}
});
var pixi_flump_Parser = function() { };
$hxClasses["pixi.flump.Parser"] = pixi_flump_Parser;
pixi_flump_Parser.__name__ = ["pixi","flump","Parser"];
pixi_flump_Parser.parse = function(resolution,loadFromCache) {
	if(loadFromCache == null) {
		loadFromCache = true;
	}
	return function(resource,next) {
		if(resource.data == null || resource.isJson == false) {
			return;
		}
		if(!Object.prototype.hasOwnProperty.call(resource.data,"md5") || !Object.prototype.hasOwnProperty.call(resource.data,"movies") || !Object.prototype.hasOwnProperty.call(resource.data,"textureGroups") || !Object.prototype.hasOwnProperty.call(resource.data,"frameRate")) {
			return;
		}
		var lib = flump_library_FlumpLibrary.create(resource.data,resolution);
		var textures = new haxe_ds_StringMap();
		var atlasLoader = new PIXI.loaders.Loader();
		atlasLoader.baseUrl = resource.url.replace(new RegExp("/(.[^/]*)$","i".split("u").join("")),"");
		var _g = 0;
		var _g1 = lib.atlases;
		while(_g < _g1.length) {
			var atlasSpec = [_g1[_g]];
			++_g;
			atlasSpec[0].file += loadFromCache?"":"?" + new Date().getTime();
			var tmp = (function(atlasSpec1) {
				return function(atlasResource) {
					var atlasTexture = new PIXI.BaseTexture(atlasResource.data);
					atlasTexture.resolution = resolution;
					var _g2 = 0;
					var _g3 = atlasSpec1[0].textures;
					while(_g2 < _g3.length) {
						var textureSpec = _g3[_g2];
						++_g2;
						var frame = new PIXI.Rectangle(textureSpec.rect[0],textureSpec.rect[1],textureSpec.rect[2],textureSpec.rect[3]);
						var origin = new PIXI.Point(textureSpec.origin[0],textureSpec.origin[1]);
						origin.x = origin.x / frame.width;
						origin.y = origin.y / frame.height;
						var v = new PIXI.Texture(atlasTexture,frame);
						var key = textureSpec.symbol;
						if(__map_reserved[key] != null) {
							textures.setReserved(key,v);
						} else {
							textures.h[key] = v;
						}
					}
				};
			})(atlasSpec);
			atlasLoader.add(atlasSpec[0].file,null,tmp);
		}
		atlasLoader.once("complete",function(loader) {
			var flumpResource = new pixi_flump_Resource(lib,textures,resource.name,resolution);
			if(resource.name != null) {
				var _this = pixi_flump_Resource.resources;
				var key1 = resource.name;
				if(__map_reserved[key1] != null) {
					_this.setReserved(key1,flumpResource);
				} else {
					_this.h[key1] = flumpResource;
				}
			}
			resource.data = flumpResource;
			next();
		});
		atlasLoader.load();
	};
};
var pixi_flump_Resource = function(library,textures,resourceId,resolution) {
	this.library = library;
	this.textures = textures;
	this.resourceId = resourceId;
	this.resolution = resolution;
};
$hxClasses["pixi.flump.Resource"] = pixi_flump_Resource;
pixi_flump_Resource.__name__ = ["pixi","flump","Resource"];
pixi_flump_Resource.exists = function(resourceName) {
	var _this = pixi_flump_Resource.resources;
	if(__map_reserved[resourceName] != null) {
		return _this.existsReserved(resourceName);
	} else {
		return _this.h.hasOwnProperty(resourceName);
	}
};
pixi_flump_Resource.destroy = function(resourceName) {
	var _this = pixi_flump_Resource.resources;
	if((__map_reserved[resourceName] != null?_this.existsReserved(resourceName):_this.h.hasOwnProperty(resourceName)) == false) {
		throw new js__$Boot_HaxeError("Cannot destroy FlumpResource: " + resourceName + " as it does not exist.");
	}
	var _this1 = pixi_flump_Resource.resources;
	var resource = __map_reserved[resourceName] != null?_this1.getReserved(resourceName):_this1.h[resourceName];
	var _this2 = resource.textures;
	var tmp = new haxe_ds__$StringMap_StringMapIterator(_this2,_this2.arrayKeys());
	while(tmp.hasNext()) tmp.next().destroy();
	resource.library = null;
	pixi_flump_Resource.resources.remove(resourceName);
};
pixi_flump_Resource.get = function(resourceName) {
	var _this = pixi_flump_Resource.resources;
	if(!(__map_reserved[resourceName] != null?_this.existsReserved(resourceName):_this.h.hasOwnProperty(resourceName))) {
		throw new js__$Boot_HaxeError("Flump resource: " + resourceName + " does not exist.");
	}
	var _this1 = pixi_flump_Resource.resources;
	return __map_reserved[resourceName] != null?_this1.getReserved(resourceName):_this1.h[resourceName];
};
pixi_flump_Resource.getResourceForMovie = function(symbolId) {
	var _this = pixi_flump_Resource.resources;
	var tmp = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
	while(tmp.hasNext()) {
		var resource = tmp.next();
		var _this1 = resource.library.movies;
		if(__map_reserved[symbolId] != null?_this1.existsReserved(symbolId):_this1.h.hasOwnProperty(symbolId)) {
			return resource;
		}
	}
	throw new js__$Boot_HaxeError("Movie: " + symbolId + "does not exists in any loaded flump resources.");
};
pixi_flump_Resource.getResourceForSprite = function(symbolId) {
	var _this = pixi_flump_Resource.resources;
	var tmp = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
	while(tmp.hasNext()) {
		var resource = tmp.next();
		var _this1 = resource.library.sprites;
		if(__map_reserved[symbolId] != null?_this1.existsReserved(symbolId):_this1.h.hasOwnProperty(symbolId)) {
			return resource;
		}
	}
	throw new js__$Boot_HaxeError("Sprite: " + symbolId + " does not exists in any loaded flump resources.");
};
pixi_flump_Resource.prototype = {
	createMovie: function(id) {
		var movie = pixi_flump_Resource.flumpFactory != null && pixi_flump_Resource.flumpFactory.displayClassExists(id)?Type.createInstance(pixi_flump_Resource.flumpFactory.getMovieClass(id),[]):new pixi_flump_Movie(id,this.resourceId);
		movie.disableAsMaster();
		return movie;
	}
	,createSprite: function(id) {
		if(pixi_flump_Resource.flumpFactory != null && pixi_flump_Resource.flumpFactory.displayClassExists(id)) {
			return Type.createInstance(pixi_flump_Resource.flumpFactory.getSpriteClass(id),[]);
		} else {
			return new pixi_flump_Sprite(id,this.resourceId);
		}
	}
	,createDisplayObject: function(id) {
		var displayObject;
		var _this = this.library.movies;
		if(__map_reserved[id] != null?_this.existsReserved(id):_this.h.hasOwnProperty(id)) {
			displayObject = this.createMovie(id);
		} else {
			displayObject = this.createSprite(id);
		}
		displayObject.name = id;
		return displayObject;
	}
	,__class__: pixi_flump_Resource
};
var pixi_flump_Sprite = function(symbolId,resourceId) {
	this.symbolId = symbolId;
	this.resourceId = resourceId;
	var resource;
	if(resourceId != null) {
		resource = pixi_flump_Resource.get(resourceId);
		if(resource == null) {
			throw new js__$Boot_HaxeError("Library: " + resourceId + "does has not been loaded.");
		}
	} else {
		resource = pixi_flump_Resource.getResourceForSprite(symbolId);
	}
	this.resolution = resource.resolution;
	var _this = resource.library.sprites;
	var symbol = __map_reserved[symbolId] != null?_this.getReserved(symbolId):_this.h[symbolId];
	var _this1 = resource.textures;
	var key = symbol.texture;
	var texture = __map_reserved[key] != null?_this1.getReserved(key):_this1.h[key];
	PIXI.Sprite.call(this,texture);
	this.data = symbol.data;
	this.baseClass = symbol.baseClass;
	this.anchor.x = symbol.origin.x / texture.width;
	this.anchor.y = symbol.origin.y / texture.height;
};
$hxClasses["pixi.flump.Sprite"] = pixi_flump_Sprite;
pixi_flump_Sprite.__name__ = ["pixi","flump","Sprite"];
pixi_flump_Sprite.__super__ = PIXI.Sprite;
pixi_flump_Sprite.prototype = $extend(PIXI.Sprite.prototype,{
	get_resX: function() {
		return this.x / this.resolution;
	}
	,set_resX: function(value) {
		this.x = value * this.resolution;
		return value;
	}
	,get_resY: function() {
		return this.y / this.resolution;
	}
	,set_resY: function(value) {
		this.y = value * this.resolution;
		return value;
	}
	,get_resScaleX: function() {
		return this.scale.x / this.resolution;
	}
	,set_resScaleX: function(value) {
		this.scale.x = value * this.resolution;
		return value;
	}
	,get_resScaleY: function() {
		return this.scale.y / this.resolution;
	}
	,set_resScaleY: function(value) {
		this.scale.y = value * this.resolution;
		return value;
	}
	,getBaseClass: function() {
		return this.baseClass;
	}
	,getCustomData: function() {
		return this.data;
	}
	,__class__: pixi_flump_Sprite
	,__properties__: {set_resScaleY:"set_resScaleY",get_resScaleY:"get_resScaleY",set_resScaleX:"set_resScaleX",get_resScaleX:"get_resScaleX",set_resY:"set_resY",get_resY:"get_resY",set_resX:"set_resX",get_resX:"get_resX"}
});
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses.Math = Math;
String.prototype.__class__ = $hxClasses.String = String;
String.__name__ = ["String"];
$hxClasses.Array = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses.Date = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses.Int = { __name__ : ["Int"]};
var Dynamic = $hxClasses.Dynamic = { __name__ : ["Dynamic"]};
var Float = $hxClasses.Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses.Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
Perf.MEASUREMENT_INTERVAL = 1000;
Perf.FONT_FAMILY = "Helvetica,Arial";
Perf.FPS_BG_CLR = "#00FF00";
Perf.FPS_WARN_BG_CLR = "#FF8000";
Perf.FPS_PROB_BG_CLR = "#FF0000";
Perf.MS_BG_CLR = "#FFFF00";
Perf.MEM_BG_CLR = "#086A87";
Perf.INFO_BG_CLR = "#00FFFF";
Perf.FPS_TXT_CLR = "#000000";
Perf.MS_TXT_CLR = "#000000";
Perf.MEM_TXT_CLR = "#FFFFFF";
Perf.INFO_TXT_CLR = "#000000";
Perf.TOP_LEFT = "TL";
Perf.TOP_RIGHT = "TR";
Perf.BOTTOM_LEFT = "BL";
Perf.BOTTOM_RIGHT = "BR";
Perf.DELAY_TIME = 4000;
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
com_isartdigital_ruby_Main.FPS = 16;
com_isartdigital_ruby_Main.configPath = "config.json";
com_isartdigital_ruby_game_GameManager.TILE_WIDTH = 200;
com_isartdigital_ruby_game_GameManager.TILE_HEIGHT = 100;
com_isartdigital_ruby_game_GameManager.MODE_NORMAL = "Normal";
com_isartdigital_ruby_game_GameManager.MODE_SPECIAL_FEATURE = "Spécial";
com_isartdigital_ruby_game_GameManager.MODE_FTUE = "FTUE";
com_isartdigital_ruby_game_controller_Controller.clicCounter = 0;
com_isartdigital_ruby_game_player_Player.TYPE_SOFTCURRENCY = "softCurrency";
com_isartdigital_ruby_game_player_Player.TYPE_HARDCURRENCY = "hardCurrency";
com_isartdigital_ruby_game_player_Player.TYPE_RESSOURCE = "ressource";
com_isartdigital_ruby_game_player_XpToLevel.ref = [0,100,150,225,350,500,750,1150,1750,2600,4000,6000,9000,13500,25000,37500,55500,85000,130000,195000];
com_isartdigital_ruby_game_player_XpToLevel.xpToNextLevel = [0,100,50,75,125,150,250,400,600,850,1400,2000,3000,4500,11500,12500,18000,29500,45000,65000];
com_isartdigital_utils_game_StateGraphic.animAlpha = 1;
com_isartdigital_utils_game_StateGraphic.boxAlpha = 0;
com_isartdigital_utils_game_pooling_PoolObject.activeObjectList = [];
com_isartdigital_utils_game_pooling_PoolObject.elementList = new haxe_ds_StringMap();
com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienList = [];
com_isartdigital_ruby_game_sprites_elements_aliens_Alien.alienElementList = [];
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureAliens.speFeatTypes = [];
com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.TANK_CLASSNAME = "Tank";
com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.BOMBER_CLASSNAME = "Bomber";
com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.HEALER_CLASSNAME = "Healer";
com_isartdigital_ruby_game_specialFeature_managers_SFAliensManager.DRILLER_CLASSNAME = "Driller";
com_isartdigital_ruby_game_specialFeature_managers_SFEventsManager.MODE_MOVE = "Move";
com_isartdigital_ruby_game_specialFeature_managers_SFEventsManager.MODE_SKILL = "Skill";
com_isartdigital_ruby_game_specialFeature_managers_SFGameManager.TOTAL_MAPS = 78;
com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.COLS = 9;
com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.ROWS = 5;
com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.PROPAGATION_COLS = 17;
com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.PROPAGATION_ROWS = 9;
com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.CELL_WIDTH = 200;
com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.CELL_HEIGHT = 150;
com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.ALIEN_CLASSNAME = "Alien";
com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.ALIEN_TYPE_CLASSNAME = "AlienType";
com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.JSON_MAP_PATH = "specialFeatureMaps/Map";
com_isartdigital_ruby_game_specialFeature_managers_SFGridManager.JSON_EXTENSION = ".json";
com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.CLUE_CLASSNAME = "Clue";
com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.LAVA_CLASSNAME = "Lava";
com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.HARDBRICK_CLASSNAME = "HardBrick";
com_isartdigital_ruby_game_specialFeature_managers_SFTilesManager.ITEM_CLASSNAME = "Item";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.BTN_CLOSE = "btn_Close";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.HC_CONTAINER = "HCContainer";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.SC_CONTAINER = "SCContainer";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.MN_CONTAINER = "MNContainer";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.SCHEMAS_CONTAINER = "ArchivesContainer";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.TXT_REWARDS = "txt_Reward";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.GENES_CONTAINER = "GeneContainer";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.GENES_1 = "Gene #0";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.GENES_2 = "Gene #1";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.GENES_3 = "Gene #2";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.GENES_4 = "Gene #3";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.GENES_5 = "Gene #4";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.ALIENS_CONTAINER = "ItemContainer";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.ALIEN_SUFFIXE = "item #";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.SKILL_BTN = "SwitchSkill";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.NORMAL = "Normal";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.SELECTED = "Selected";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.MOVE_BTN = "SwitchMove";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.STAMINA_BAR = "XenoBarCharging";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.XENO_NAME = "txt_XenoName";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.BACKGROUND_XENO_BAR = "SpecialFeature_spriteXenoBarBG";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.TILES_CONTAINER = "CaseContainer";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.BACKGROUND_SF = "SpecialFeature_spriteBackgroundLevel";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.BACKGROUND_TILE_CONTAINER = "SpecialFeature_spriteBackgroundLevel";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.BTN_INFO = "SpecialFeature_btn_Info";
com_isartdigital_ruby_game_specialFeature_managers_SpecialFeatureScreen.MAX_SF_ALIENS_NUMBER = 3;
com_isartdigital_utils_loader_GameLoader.txtLoaded = new haxe_ds_StringMap();
com_isartdigital_utils_loader_GameLoader.xmlLoaded = new haxe_ds_StringMap();
com_isartdigital_utils_Config.cache = true;
com_isartdigital_utils_Config._data = { };
com_isartdigital_ruby_game_sprites_elements_GameElement.JSON_CONFIG = com_isartdigital_utils_loader_GameLoader.getContent("caracBuilding.json");
com_isartdigital_ruby_game_sprites_elements_Building.WAIT_VALIDATION = "WaitValidation";
com_isartdigital_ruby_game_sprites_elements_Building.event = new EventEmitter();
com_isartdigital_ruby_game_sprites_elements_ElementType.INCUBATOR = "AlienIncubator";
com_isartdigital_ruby_game_sprites_elements_ElementType.PADDOCK_TINY = "AlienPaddockTiny";
com_isartdigital_ruby_game_sprites_elements_ElementType.PADDOCK_SMALL = "AlienPaddockSmall";
com_isartdigital_ruby_game_sprites_elements_ElementType.PADDOCK_MEDIUM = "AlienPaddockMedium";
com_isartdigital_ruby_game_sprites_elements_ElementType.PADDOCK_BIG = "AlienPaddockBig";
com_isartdigital_ruby_game_sprites_elements_ElementType.RESEARCH_CENTER = "AlienResearchCenter";
com_isartdigital_ruby_game_sprites_elements_ElementType.TRAINING_CENTER = "AlienTrainingCenter";
com_isartdigital_ruby_game_sprites_elements_ElementType.CRYO_CENTER = "AlienCryoCenter";
com_isartdigital_ruby_game_sprites_elements_ElementType.COSMETIC = "CosmeticBuilding";
com_isartdigital_ruby_game_sprites_elements_ElementType.COSMETIC_CASPULE1 = "BuildingCosmeticCapsule1";
com_isartdigital_ruby_game_sprites_elements_ElementType.COSMETIC_CASPULE2 = "BuildingCosmeticCapsule2";
com_isartdigital_ruby_game_sprites_elements_ElementType.COSMETIC_CASPULE3 = "BuildingCosmeticCapsule3";
com_isartdigital_ruby_game_sprites_elements_ElementType.COSMETIC_PLANT1 = "BuildingCosmeticPlant1";
com_isartdigital_ruby_game_sprites_elements_ElementType.COSMETIC_PLANT2 = "BuildingCosmeticPlant2";
com_isartdigital_ruby_game_sprites_elements_ElementType.COSMETIC_PLANT3 = "BuildingCosmeticPlant3";
com_isartdigital_ruby_game_sprites_elements_ElementType.ANTENNA = "UrbanAntenna";
com_isartdigital_ruby_game_sprites_elements_ElementType.COMMUNICATION = "UrbanCommunication";
com_isartdigital_ruby_game_sprites_elements_ElementType.HQ = "UrbanHeadQuarter";
com_isartdigital_ruby_game_sprites_elements_ElementType.POWERSTATION = "UrbanPowerStation";
com_isartdigital_ruby_game_sprites_elements_ElementType.TRANSLATION = "UrbanTranslation";
com_isartdigital_ruby_game_sprites_elements_ElementType.DRILLING_AUTO_OUTPOST = "DrillingAutoOutPost";
com_isartdigital_ruby_game_sprites_elements_ElementType.DRILLING_CENTER = "DrillingCenter";
com_isartdigital_ruby_game_sprites_elements_ElementType.DRILLING_OUTPOST = "DrillingOutPost";
com_isartdigital_ruby_game_sprites_elements_ElementType.DESTRUCTIBLE = "Destructible";
com_isartdigital_ruby_game_sprites_elements_ElementType.RESSOURCE_BUBBLE = "Bubble";
com_isartdigital_ruby_game_sprites_elements_ElementType.RESSOURCE_SC = "RessourceSoftCurrency";
com_isartdigital_ruby_game_sprites_elements_ElementType.RESSOURCE_HC = "RessourceHardCurrency";
com_isartdigital_ruby_game_sprites_elements_ElementType.ALIEN_1 = "Alien1";
com_isartdigital_ruby_game_sprites_elements_ElementType.ALIEN_2 = "Alien2";
com_isartdigital_ruby_game_sprites_elements_ElementType.ALIEN_3 = "Alien3";
com_isartdigital_ruby_game_sprites_elements_ElementType.WALL_BOT = "WallBot";
com_isartdigital_ruby_game_sprites_elements_ElementType.WALL_TOP = "WallTop";
com_isartdigital_ruby_game_sprites_elements_ElementType.WALL_LEFT = "WallLeft";
com_isartdigital_ruby_game_sprites_elements_ElementType.WALL_RIGHT = "WallRight";
com_isartdigital_ruby_game_sprites_elements_ElementType.CLUE = "Clue";
com_isartdigital_ruby_game_sprites_elements_ElementType.CLUE_RESSOURCE = "ClueRessource";
com_isartdigital_ruby_game_sprites_elements_ElementType.CLUE_BLUEPRINT = "ClueBluePrint";
com_isartdigital_ruby_game_sprites_elements_ElementType.CLUE_EMPTY = "ClueEmpty";
com_isartdigital_ruby_game_sprites_elements_ElementType.CLUE_EMPTY_ORANGE = "ClueEmptyOrange";
com_isartdigital_ruby_game_sprites_elements_ElementType.CLUE_EMPTY_BLUE = "ClueEmptyBlue";
com_isartdigital_ruby_game_sprites_elements_ElementType.CLUE_EMPTY_GREEN = "ClueEmptyOrange";
com_isartdigital_ruby_game_sprites_elements_ElementType.HARDBRICK = "HardBrick";
com_isartdigital_ruby_game_sprites_elements_ElementType.LAVA = "Lava";
com_isartdigital_ruby_game_sprites_elements_ElementType.ITEM = "Item";
com_isartdigital_ruby_game_sprites_elements_ElementType.ITEM_GENEFIVE = "ItemGeneFive";
com_isartdigital_ruby_game_sprites_elements_ElementType.ITEM_GENEFOUR = "ItemGeneFour";
com_isartdigital_ruby_game_sprites_elements_ElementType.ITEM_GENETHREE = "ItemGeneThree";
com_isartdigital_ruby_game_sprites_elements_ElementType.ITEM_GENETWO = "ItemGeneTwo";
com_isartdigital_ruby_game_sprites_elements_ElementType.ITEM_GENEONE = "ItemGeneOne";
com_isartdigital_ruby_game_sprites_elements_ElementType.ITEM_DARKMATTER = "ItemDarkMatter";
com_isartdigital_ruby_game_sprites_elements_ElementType.ITEM_BLUEPRINT_PART = "ItemBluePrintPart";
com_isartdigital_ruby_game_sprites_elements_ElementType.ITEM_BLUEPRINT = "ItemBluePrint";
com_isartdigital_ruby_game_sprites_elements_ElementType.ITEM_HC = "ItemHC";
com_isartdigital_ruby_game_sprites_elements_ElementType.ITEM_SC = "ItemSC";
com_isartdigital_ruby_game_sprites_elements_ElementType.ALIEN_HEALER = "Healer";
com_isartdigital_ruby_game_sprites_elements_ElementType.ALIEN_BOMBER = "Bomber";
com_isartdigital_ruby_game_sprites_elements_ElementType.ALIEN_DRILLER = "Driller";
com_isartdigital_ruby_game_sprites_elements_ElementType.ALIEN_TANK = "Tank";
com_isartdigital_ruby_game_sprites_elements_ElementType.ALIEN_HEALER1 = "Healer1";
com_isartdigital_ruby_game_sprites_elements_ElementType.ALIEN_HEALER2 = "Healer2";
com_isartdigital_ruby_game_sprites_elements_ElementType.ALIEN_HEALER3 = "Healer3";
com_isartdigital_ruby_game_sprites_elements_ElementType.ALIEN_BOMBER1 = "Bomber1";
com_isartdigital_ruby_game_sprites_elements_ElementType.ALIEN_BOMBER2 = "Bomber2";
com_isartdigital_ruby_game_sprites_elements_ElementType.ALIEN_BOMBER3 = "Bomber3";
com_isartdigital_ruby_game_sprites_elements_ElementType.ALIEN_DRILLER1 = "Driller1";
com_isartdigital_ruby_game_sprites_elements_ElementType.ALIEN_DRILLER2 = "Driller2";
com_isartdigital_ruby_game_sprites_elements_ElementType.ALIEN_DRILLER3 = "Driller3";
com_isartdigital_ruby_game_sprites_elements_ElementType.ALIEN_TANK1 = "Tank1";
com_isartdigital_ruby_game_sprites_elements_ElementType.ALIEN_TANK2 = "Tank2";
com_isartdigital_ruby_game_sprites_elements_ElementType.ALIEN_TANK3 = "Tank3";
com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.alienPaddockList = [];
com_isartdigital_ruby_game_sprites_elements_alienbuilding_AlienPaddock.event = new EventEmitter();
com_isartdigital_ruby_game_sprites_elements_aliens_AlienEsthetique.esthetiqueTypes = [];
com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienBuffer.bufferTypes = [];
com_isartdigital_ruby_game_sprites_elements_aliens_alienspaddockable_AlienProducer.prodTypes = [];
com_isartdigital_ruby_game_sprites_elements_destructible_Destructible.arrayConfigDestructible = [];
com_isartdigital_ruby_game_sprites_elements_destructible_Destructible.totalConfig = 5;
com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingBuilding.drillingBuildingList = [];
com_isartdigital_ruby_game_sprites_elements_drillingbuilding_DrillingAutoOutPost.MN_PROD = 25;
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanAntenna.ENERGY_PROD = 5;
com_isartdigital_ruby_game_sprites_elements_urbanbuilding_UrbanPowerStation.ENERGY_PROD = 50;
com_isartdigital_ruby_utils_RessourceEffect.COUNTER_BUBBLE = 100;
com_isartdigital_ruby_utils_RessourceEffect.COUNTER_CURVE = 30;
com_isartdigital_ruby_utils_RessourceEffect.COUNTER_EXPLOSION = 100;
com_isartdigital_ruby_utils_RessourceEffect.COUNTER_DISPERSION = 40;
com_isartdigital_ruby_utils_RessourceEffect.BUBBLEMODE_APLITUDE_X = 0.75;
com_isartdigital_ruby_utils_RessourceEffect.BUBBLEMODE_SPEED_Y = 2;
com_isartdigital_ruby_utils_RessourceEffect.RADIUS_EXPLOSION = 150;
com_isartdigital_ruby_game_world_Region.WIDTH = 26;
com_isartdigital_ruby_game_world_Region.HEIGHT = 26;
com_isartdigital_ruby_game_world_UnlockButtonContainer.arrayButton = [];
com_isartdigital_ruby_game_world_World.FIRST_REGION_UNLOCK_COST = 30000;
com_isartdigital_ruby_game_world_World.UNLOCK_MULTIPLIER = 3;
com_isartdigital_ruby_preloadgame_PreloadBulle.list = [];
com_isartdigital_ruby_preloadgame_PreloadBulle.score = 0;
com_isartdigital_ruby_ui_GraphicLoader.MARGIN_TOP = 500;
com_isartdigital_ruby_ui_LocalizationByType.ANTENNA = "LABEL_BUILDING_ANTENNA";
com_isartdigital_ruby_ui_LocalizationByType.COMMUNICATION = "LABEL_BUILDING_COMMUNICATION";
com_isartdigital_ruby_ui_LocalizationByType.HQ = "LABEL_BUILDING_HQ";
com_isartdigital_ruby_ui_LocalizationByType.POWERSTATION = "LABEL_BUILDING_POWERSTATION";
com_isartdigital_ruby_ui_LocalizationByType.TRANSLATION = "LABEL_BUILDING_TRANSLATIONCENTER";
com_isartdigital_ruby_ui_LocalizationByType.DRILLING_AUTO_OUTPOST = "LABEL_BUILDING_DRILLINGAUTO";
com_isartdigital_ruby_ui_LocalizationByType.DRILLING_CENTER = "LABEL_BUILDING_DRILLINGCENTER";
com_isartdigital_ruby_ui_LocalizationByType.DRILLING_OUTPOST = "LABEL_BUILDING_DRILLINGOUTPOST";
com_isartdigital_ruby_ui_LocalizationByType.COSMETIC_CAPSULE1 = "LABEL_BUILDING_CAPSULE1";
com_isartdigital_ruby_ui_LocalizationByType.COSMETIC_CAPSULE2 = "LABEL_BUILDING_CAPSULE2";
com_isartdigital_ruby_ui_LocalizationByType.COSMETIC_CAPSULE3 = "LABEL_BUILDING_CAPSULE3";
com_isartdigital_ruby_ui_LocalizationByType.COSMETIC_PLANT1 = "LABEL_BUILDING_PLANT1";
com_isartdigital_ruby_ui_LocalizationByType.COSMETIC_PLANT2 = "LABEL_BUILDING_PLANT2";
com_isartdigital_ruby_ui_LocalizationByType.COSMETIC_PLANT3 = "LABEL_BUILDING_PLANT3";
com_isartdigital_ruby_ui_LocalizationByType.INCUBATOR = "LABEL_BUILDING_INCUBATOR";
com_isartdigital_ruby_ui_LocalizationByType.PADDOCK_TINY = "LABEL_BUILDING_PADDOCKTINY";
com_isartdigital_ruby_ui_LocalizationByType.PADDOCK_SMALL = "LABEL_BUILDING_PADDOCKSMALL";
com_isartdigital_ruby_ui_LocalizationByType.PADDOCK_MEDIUM = "LABEL_BUILDING_PADDOCKMEDIUM";
com_isartdigital_ruby_ui_LocalizationByType.PADDOCK_BIG = "LABEL_BUILDING_PADDOCKBIG";
com_isartdigital_ruby_ui_LocalizationByType.RESEARCH_CENTER = "LABEL_BUILDING_RESEARCH";
com_isartdigital_ruby_ui_LocalizationByType.TRAINING_CENTER = "LABEL_BUILDING_TRAININGCENTER";
com_isartdigital_ruby_ui_LocalizationByType.CRYO_CENTER = "LABEL_BUILDING_CRYOCENTER";
com_isartdigital_ruby_ui_LocalizationByType.DESC_ANTENNA = "LABEL_DESC_ANTENNA";
com_isartdigital_ruby_ui_LocalizationByType.DESC_COMMUNICATION = "LABEL_DESC_COMMUNICATION";
com_isartdigital_ruby_ui_LocalizationByType.DESC_HQ = "LABEL_DESC_HQ";
com_isartdigital_ruby_ui_LocalizationByType.DESC_POWERSTATION = "LABEL_DESC_POWERSTATION";
com_isartdigital_ruby_ui_LocalizationByType.DESC_TRANSLATION = "LABEL_DESC_TRANSLATIONCENTER";
com_isartdigital_ruby_ui_LocalizationByType.DESC_DRILLING_AUTO_OUTPOST = "LABEL_DESC_DRILLINGAUTO";
com_isartdigital_ruby_ui_LocalizationByType.DESC_DRILLING_CENTER = "LABEL_DESC_DRILLINGCENTER";
com_isartdigital_ruby_ui_LocalizationByType.DESC_DRILLING_OUTPOST = "LABEL_DESC_DRILLINGOUTPOST";
com_isartdigital_ruby_ui_LocalizationByType.DESC_COSMETIC_FLUOALGA = "LABEL_DESC_COSMETIC";
com_isartdigital_ruby_ui_LocalizationByType.DESC_COSMETIC_FLUOALGA2 = "LABEL_DESC_COSMETIC";
com_isartdigital_ruby_ui_LocalizationByType.DESC_INCUBATOR = "LABEL_DESC_INCUBATOR";
com_isartdigital_ruby_ui_LocalizationByType.DESC_PADDOCK_TINY = "LABEL_DESC_PADDOCKTINY";
com_isartdigital_ruby_ui_LocalizationByType.DESC_PADDOCK_SMALL = "LABEL_DESC_PADDOCKSMALL";
com_isartdigital_ruby_ui_LocalizationByType.DESC_PADDOCK_MEDIUM = "LABEL_DESC_PADDOCKMEDIUM";
com_isartdigital_ruby_ui_LocalizationByType.DESC_PADDOCK_BIG = "LABEL_DESC_PADDOCKBIG";
com_isartdigital_ruby_ui_LocalizationByType.DESC_RESEARCH_CENTER = "LABEL_DESC_RESEARCH";
com_isartdigital_ruby_ui_LocalizationByType.DESC_TRAINING_CENTER = "LABEL_DESC_TRAININGCENTER";
com_isartdigital_ruby_ui_LocalizationByType.DESC_CRYO_CENTER = "LABEL_DESC_CRYOCENTER";
com_isartdigital_ruby_ui_ftue_FTUEManager.currentStep = 0;
com_isartdigital_ruby_ui_popin_SmartPopinRegister.event = new EventEmitter();
com_isartdigital_ruby_ui_popin_SmartPopinRegister.ON_OPEN = "onOpen";
com_isartdigital_ruby_ui_popin_SmartPopinRegister.ON_YES = "onYes";
com_isartdigital_ruby_ui_ftue_FTUEPopin.TEXT = "txt_FTUEInstructions";
com_isartdigital_ruby_ui_ftue_FTUEPopin.NEXT_BTN = "btn_Close";
com_isartdigital_ruby_ui_ftue_FTUEPopin.FTUE_CONTAINER = "FTUE_popinContainer";
com_isartdigital_ruby_ui_hud_Hud.SHOP_BTN = "btn_Shop";
com_isartdigital_ruby_ui_hud_Hud.BUILD_BTN = "btn_Build";
com_isartdigital_ruby_ui_hud_Hud.OPTIONS_BTN = "btn_Options";
com_isartdigital_ruby_ui_hud_Hud.CODEX_BTN = "btn_Codex";
com_isartdigital_ruby_ui_hud_Hud.HC_ADD_BTN = "btn_PlusHC";
com_isartdigital_ruby_ui_hud_Hud.SC_ADD_BTN = "btn_PlusSC";
com_isartdigital_ruby_ui_hud_Hud.SC_BAR = "HUD_clipSoftCurrencie";
com_isartdigital_ruby_ui_hud_Hud.HC_BAR = "HUD_clipHardCurrencie";
com_isartdigital_ruby_ui_hud_Hud.MATERIAL_BAR = "HUD_clipMatiere";
com_isartdigital_ruby_ui_hud_Hud.PLAYER_INFO_CONTAINER = "HUD_clipPlayerInfos";
com_isartdigital_ruby_ui_hud_Hud.PLAYER_LVL_TEXTFIELD = "txt_PlayerLevel";
com_isartdigital_ruby_ui_hud_Hud.TEXTFIELD_SC = "txt_hardCurrencyDisplay";
com_isartdigital_ruby_ui_hud_Hud.TEXTFIELD_HC = "txt_softCurrencieDisplay";
com_isartdigital_ruby_ui_hud_Hud.TEXTFIELD_MAT = "txt_matiereDisplay";
com_isartdigital_ruby_ui_hud_Hud.XP_Container = "HUD_spriteCurrentXP";
com_isartdigital_ruby_ui_hud_Hud.XP_BAR = "HUD_spriteCurrentXP_fill";
com_isartdigital_ruby_ui_hud_Hud.ENERGY_BAR = "HUD_clipEnergyBar";
com_isartdigital_ruby_ui_hud_Hud.TEXTFIELD_ENERGY = "txt_energyDisplay";
com_isartdigital_ruby_ui_popin_MenuClosable.CLOSE_BTN = "btn_Close";
com_isartdigital_ruby_ui_hud_InfosBatiment.UPGRADE_BTN = "btn_Upgrade";
com_isartdigital_ruby_ui_hud_InfosBatiment.DESTROY_BTN = "btn_Destroy";
com_isartdigital_ruby_ui_hud_InfosBatiment.MOVE_BTN = "btn_Moove";
com_isartdigital_ruby_ui_hud_InfosBatiment.DESCRIPTION_TEXTFIELD = "txt_descriptionBuilding";
com_isartdigital_ruby_ui_hud_InfosBatiment.BUILDINGNAME_TEXTFIELD = "InfosBatiment_ItemName";
com_isartdigital_ruby_ui_items_DrillingFriendItem.XENO_LEVEL = "txt_CentreForageLevel";
com_isartdigital_ruby_ui_items_DrillingFriendItem.PLAYER_NAME = "txt_CentreForageplayerName";
com_isartdigital_ruby_ui_items_DrillingFriendItem.BTN = "btn_Friend";
com_isartdigital_ruby_ui_items_switchItems_SwitchItem.list = [];
com_isartdigital_ruby_ui_items_DrillingXenoItem.CONTENT_TIMER = "txt_XenoCooldownDisplay";
com_isartdigital_ruby_ui_items_DrillingXenoItem.CONTENT_STAMINA = "txt_CentreForageStaminaDisplay";
com_isartdigital_ruby_ui_items_DrillingXenoItem.CONTENT_NAME = "txt_centreForageXenoName";
com_isartdigital_ruby_ui_items_DrillingXenoItem.CONTENT_CLASS = "txt_CentreForageXenoClass";
com_isartdigital_ruby_ui_items_DrillingXenoItem.CONTENT_AVATAR = "CentreForage_spriteStaminaAvatar";
com_isartdigital_ruby_ui_items_switchItems_BuildingMenuSwitchItem.NAME = "txt_Name";
com_isartdigital_ruby_ui_items_switchItems_BuildingMenuSwitchItem.ASSET_PREFIX = "BuildingMenu_spriteItemAsset_";
com_isartdigital_ruby_ui_items_switchItems_BuildingMenuSwitchTab.PREFIX = "BuildingMenu_TabAsset_";
com_isartdigital_ruby_ui_items_switchItems_CodexSwitchItem.NAME = "txt_XenoName";
com_isartdigital_ruby_ui_items_switchItems_CodexSwitchItem.QUANTITY = "txt_QuantityUnitDisplay";
com_isartdigital_ruby_ui_items_switchItems_CodexSwitchItem.PREFIX = "XenosThumbnail_";
com_isartdigital_ruby_ui_items_switchItems_MissionSwitchItem.NAME = "txt_CentreForagemissionName";
com_isartdigital_ruby_ui_items_switchItems_MissionSwitchItem.COULDOWN_DISPLAY = "txt_CentreForagedrillCooldownDisplayV2";
com_isartdigital_ruby_ui_items_switchItems_ShopSwitchTab.ASSET_TAB_PREFIX = "Shop_TabAsset_";
com_isartdigital_ruby_ui_items_switchItems_XenoSlotSwitchItem.PREFIX = "XenosThumbnail_";
com_isartdigital_ruby_ui_popin_ConfirmationPose.CANCEL_BTN = "btn_ConfirmReturn";
com_isartdigital_ruby_ui_popin_ConfirmationPose.SCMN_BTN_NORMAL = "ConfirmationPose_ButtonSC";
com_isartdigital_ruby_ui_popin_ConfirmationPose.SCMN_YES_BTN = "btn_YesBuySC";
com_isartdigital_ruby_ui_popin_ConfirmationPose.SCMN_NO_BTN = "btn_NoBuySC";
com_isartdigital_ruby_ui_popin_ConfirmationPose.HC_BTN_NORMAL = "ConfirmationPose_ButtonHC";
com_isartdigital_ruby_ui_popin_ConfirmationPose.HC_YES_BTN = "btn_YesBuyHC";
com_isartdigital_ruby_ui_popin_ConfirmationPose.HC_NO_BTN = "btn_NoBuyHC";
com_isartdigital_ruby_ui_popin_ConfirmationPose.HC_TEXT_CNTNER = "ConfirmationPose_clipPriceHCInfos";
com_isartdigital_ruby_ui_popin_ConfirmationPose.SCMN_TEXT_CNTNER = "ConfirmationPose_clipPriceSCInfos";
com_isartdigital_ruby_ui_popin_ConfirmationPose.SC_TEXT = "txt_SCPrice";
com_isartdigital_ruby_ui_popin_ConfirmationPose.HC_TEXT = "txt_HCPrice";
com_isartdigital_ruby_ui_popin_ConfirmationPose.MN_TEXT = "txt_MNPrice";
com_isartdigital_ruby_ui_popin_Deplacement.YES_BTN = "btn_Yes";
com_isartdigital_ruby_ui_popin_Deplacement.NO_BTN = "btn_No";
com_isartdigital_ruby_ui_popin_Destruction.YES_BTN = "btn_Yes";
com_isartdigital_ruby_ui_popin_Destruction.NO_BTN = "btn_No";
com_isartdigital_ruby_ui_popin_DynamicPopin.TEXT = "txt_destroyBuildingConfirm";
com_isartdigital_ruby_ui_popin_DynamicPopin.YES_BTN = "btn_Yes";
com_isartdigital_ruby_ui_popin_DynamicPopin.NO_BTN = "btn_No";
com_isartdigital_ruby_ui_popin_RewardNotifications.TITLE = "txt_NotificationTitle";
com_isartdigital_ruby_ui_popin_RewardNotifications.CLOSE_BTN = "btn_Close";
com_isartdigital_ruby_ui_popin_RewardNotifications.CONTINUE_BTN = "btn_Continue";
com_isartdigital_ruby_ui_popin_RewardNotifications.SHARE_CLIP = "RewardNotifications_clipShare";
com_isartdigital_ruby_ui_popin_RewardNotifications.LOGO_CONTAINER = "RewardNotification_spriteContainerPrincipal";
com_isartdigital_ruby_ui_popin_RewardNotifications.REWARD_CONTAINER = "RewardNotification_spriteContainerRewards";
com_isartdigital_ruby_ui_popin_RewardNotifications.LOGO = "RewardNotifications_spritePrincipal";
com_isartdigital_ruby_ui_popin_RewardNotifications.REWARD = "RewardNotifications_clipRewardUnit";
com_isartdigital_ruby_ui_popin_Settings.CLOSE_BTN = "btn_Close";
com_isartdigital_ruby_ui_popin_Settings.MOREGAME_BTN = "btn_MoreGames";
com_isartdigital_ruby_ui_popin_Settings.BTN_AUDIO_ON = "btn_AudioOn";
com_isartdigital_ruby_ui_popin_Settings.BTN_AUDIO_OFF = "btn_AudioOff";
com_isartdigital_ruby_ui_popin_XenosPanel.CONTEXTUAL = "Contextual";
com_isartdigital_ruby_ui_popin_XenosPanel.BTN_XENO_PAGE = "btn_UnitXenoPage";
com_isartdigital_ruby_ui_popin_XenosPanel.BTN_UPGRADE = "btn_UnitUpgrade";
com_isartdigital_ruby_ui_popin_XenosPanel.BTN_STORE = "btn_UnitCryo";
com_isartdigital_ruby_ui_popin_building_BuildingMenu.BUILDING_INFO_NAME = "BuildingMenu_clipBuildingInfos";
com_isartdigital_ruby_ui_popin_building_BuildingMenu.BUILDING_ENERGY_BAR_NAME = "BuildingMenu_clipBarEnergy";
com_isartdigital_ruby_ui_popin_building_BuildingMenu.TEXT_ENERGY_BAR = "txt_energyDisplay";
com_isartdigital_ruby_ui_popin_building_BuildingMenu.CLOSE_BTN = "btn_Close";
com_isartdigital_ruby_ui_popin_building_BuildingMenu.BUILDING_BTN = "btn_Building";
com_isartdigital_ruby_ui_popin_building_BuildingMenu.SLIDER = "Slider";
com_isartdigital_ruby_ui_popin_building_BuildingMenu.saveCurrentIndex = 0;
com_isartdigital_ruby_ui_popin_building_BuildingPanel.BUILDING_NAME = "BuildingMenutxt_BatimentName";
com_isartdigital_ruby_ui_popin_building_BuildingPanel.BUILD_TIME = "txt_buildTimeDisplay";
com_isartdigital_ruby_ui_popin_building_BuildingPanel.SC_PRICE = "txt_SCPrice";
com_isartdigital_ruby_ui_popin_building_BuildingPanel.HC_PRICE = "txt_HCPrice";
com_isartdigital_ruby_ui_popin_building_BuildingPanel.DARK_MATTER_PRICE = "txtMNPrice";
com_isartdigital_ruby_ui_popin_building_BuildingPanel.ENERGY = "txt_energyBuildingDisplay";
com_isartdigital_ruby_ui_popin_building_BuildingPanel.DESCRIPTION = "txt_descriptionBuilding";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.SLIDER = "Slider";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.VERTICAL_SLIDER = "VerticalSlider";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.DOWN_ARROW = "btn_Fleche";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.UP_ARROW = "btn_Fleche #1";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.DRILL = "btn_Forage";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.CHOOSE_TEAM_BTN = "";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.FRIENDS_TAB = "ItemContainerFriendList";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.ALIENS_TAB = "ItemContainerXenosList";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.ALIEN_CLASS = "txt_CentreForageXenoClass";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.ALIEN_NAME = " txt_CentreForageXenoName";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.BTN_SWITCH_XENOS_FRIEND = "CentreForage_clipXenoSocial";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.XENO_SLOT_CONTAINER = "XenoSlotContainer";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.MISSIONS_PANEL = "CentreForage_clipMissionStats";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.MISSION_REWARDS = "CentreForage_spriteReward";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.MISSION_NAME = "txt_missionName";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.MISSION_CONDITION_PANEL = "CentreForage_clipMissionConditions";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.MISSION_CENTERCOUNT = "txt_neededCentersDisplay";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.MISSION_TIMER = "txt_drillTimeDisplay";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.XENO_SLOT = "Item #";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.MISSION_CONTAINER = "MissionContainer";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.MISSION = "Mission";
com_isartdigital_ruby_ui_popin_centreForage_CentreForage.MISSION_THUMBNAIL = "CentreForage_spriteApercuMission";
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.LEFT_CONTAINER = "LeftButtonsPanel";
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.BTN_DESTROY = "btn_Destroy";
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.BTN_MOVE = "btn_Move";
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.BTN_INFO = "btn_Info";
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.RIGHT_CONTAINER = "RightButtonsPanel";
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.BTN_UPGRADE = "btn_Upgrade";
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.BTN_HARVEST = "btn_Harvest";
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.BTN_FEATURE = "btn_Feature";
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.INFO_PANEL = "InfoPanel";
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.TEXTFIELD_NAME = "txt_BuildingName";
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.TEXTFIELD_DESCRIPTION = "txt_descriptionBuilding";
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.TEXTFIELD_LEVEL = "txt_levelBuilding";
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.CONFIRM_UPGRADE = "ConfirmUpgrade";
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.BTN_UPGRADE_YES = "btn_YesBuyHC";
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.BTN_UPGRADE_NO = "btn_NoBuyHC";
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.UPGRADE_COST = "UpgradeCost";
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.UPGRADE_TXT_CONTAINER = "BuildingContextualMenu_clipCostContainer";
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.UPGRADE_TXT_MN_COST = "UpgradeBuilding_txt_MNCost";
com_isartdigital_ruby_ui_popin_contextual_BuildingContextualMenu.UPGRADE_TXT_SC_COST = "UpgradeBuilding_txt_SCCost";
com_isartdigital_ruby_ui_popin_contextual_YesNoPose.YES_BTN = "btn_Yes";
com_isartdigital_ruby_ui_popin_contextual_YesNoPose.NO_BTN = "btn_No";
com_isartdigital_ruby_ui_popin_enclos_Enclos.NAME = "txt_XenoName #";
com_isartdigital_ruby_ui_popin_enclos_Enclos.CONTEXTUAL_CNTNER = "clipContextualButtonsContainer";
com_isartdigital_ruby_ui_popin_enclos_Enclos.LEVEL_CNTNER = "clipLevelContainer";
com_isartdigital_ruby_ui_popin_enclos_Enclos.XENO_CNTNER = "clipXenoContainer";
com_isartdigital_ruby_ui_popin_enclos_Enclos.LEVEL_PICTO = "Enclos_clipUnitLevel #";
com_isartdigital_ruby_ui_popin_enclos_Enclos.LEVEL_TEXT = "Enclos_txt_Level";
com_isartdigital_ruby_ui_popin_enclos_Enclos.XENO_SWITCH = "Enclos_clipUnitSwitch #";
com_isartdigital_ruby_ui_popin_enclos_Enclos.BTN_MOVE = "Enclos_btn_UnitMove";
com_isartdigital_ruby_ui_popin_enclos_Enclos.BTN_INFO = "Enclos_btn_UnitXenoPage";
com_isartdigital_ruby_ui_popin_enclos_Enclos.BTN_FREEZE = "Enclos_btn_UnitCryo";
com_isartdigital_ruby_ui_popin_enclos_Enclos.BTN_UPGRADE = "Enclos_btn_UnitUpgrade";
com_isartdigital_ruby_ui_popin_incubator_GeneButton.TEXT_QUANTITY = "txt_geneQuantity";
com_isartdigital_ruby_ui_popin_incubator_Incubator.GENE_CONTAINER = "GeneContainer";
com_isartdigital_ruby_ui_popin_incubator_Incubator.SCHEMA_CONTAINER = "SchemaContainer";
com_isartdigital_ruby_ui_popin_incubator_Incubator.FILTER_CONTAINER = "TabContainer";
com_isartdigital_ruby_ui_popin_incubator_Incubator.listSchema = new haxe_ds_StringMap();
com_isartdigital_ruby_ui_popin_incubator_Inseminator.list = [];
com_isartdigital_ruby_ui_popin_incubator_SchemaSwitchItem.NAME = "txt_xenoName";
com_isartdigital_ruby_ui_popin_incubator_SchemaSwitchItem.ASSET = "asset";
com_isartdigital_ruby_ui_popin_shop_Shop.SHOP_TITLE = "txt_tabTitle";
com_isartdigital_ruby_ui_popin_shop_ShopItem.positions = [];
com_isartdigital_ruby_ui_popin_shop_ShopItem.ITEM_NAME = "txt_itemName";
com_isartdigital_ruby_ui_popin_shop_ShopItem.PRICE_HC = "txt_priceHC";
com_isartdigital_ruby_ui_popin_shop_ShopItem.PRICE_SC = "txt_priceSC";
com_isartdigital_ruby_ui_popin_shop_ShopItem.PRICE = "txt_price";
com_isartdigital_ruby_ui_popin_shop_ShopItem.PROMO = "promo";
com_isartdigital_ruby_ui_popin_shop_ShopItem.TEXT_PROMO = "txt_promo";
com_isartdigital_ruby_ui_popin_shop_ShopItem.ASSET_ITEM = "spriteItemAsset";
com_isartdigital_ruby_ui_popin_shop_ShopItem.ASSET_CURRENCY = "spriteCurrencie";
com_isartdigital_ruby_ui_popin_shop_ShopItem.ASSET_PREFIX = "Shop_spriteItemAsset_";
com_isartdigital_ruby_ui_popin_shop_ShopItem.ASSET_CURRENCY_PREFIX = "Shop_spriteCurrencie_";
com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.TXT_TRAD = "LABEL_TRANSLATION_CENTER_NO_SCHEMA";
com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.TXT_TITLE = "TranslationCenter_txt_TranslationCenter";
com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.PARCHEMIN = "TranslationCenter_clipSwitchParchment";
com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.TXT_PARCH_COUNT = "TranslationCenter_txt_parchmentCount";
com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.TXT_PARCH_NAME = "TranslationCenter_txt_ParchmentName";
com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.BTN_SKIPTIME = "TranslationCenter_btn_SkipTime";
com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.TIMER_WINDOW = "TranslationCenter_TimerWindow";
com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.TXT_TIMER = "TranslationCenter_txt_timerWindowtimer";
com_isartdigital_ruby_ui_popin_translationCenter_TranslationCenter.BTN_TRANSLATE = "TranslationCenter_btn_Translate";
com_isartdigital_ruby_ui_popin_upgradeCenter_TankUpgrade.XENO_SLOT = "SwitchSlotXeno";
com_isartdigital_ruby_ui_popin_upgradeCenter_TankUpgrade.CARTOUCHE = "UpgradeCenter_clipIntituleXenos";
com_isartdigital_ruby_ui_specialButtons_SlotButton.list = [];
com_isartdigital_ruby_ui_specialButtons_SlotButton.PREFIX = "XenosThumbnail_";
com_isartdigital_ruby_ui_specialButtons_Textbutton.HC_TEXT_CNTNER = "ConfirmationPose_clipPriceHCInfos";
com_isartdigital_ruby_ui_specialButtons_Textbutton.SCMN_TEXT_CNTNER = "ConfirmationPose_clipPriceSCInfos";
com_isartdigital_ruby_ui_specialButtons_Textbutton.SC_TEXT = "txt_SCPrice";
com_isartdigital_ruby_ui_specialButtons_Textbutton.HC_TEXT = "txt_HCPrice";
com_isartdigital_ruby_ui_specialButtons_Textbutton.MN_TEXT = "txt_MNPrice";
com_isartdigital_ruby_ui_specialButtons_Textbutton.PAY_BTN = "pay_btn";
com_isartdigital_ruby_utils_ParticleManager.PARTICLE_SPEED = 0.01;
com_isartdigital_ruby_utils_ParticleManager.CONTAINER_DIMENSION = 500;
com_isartdigital_ruby_utils_SmartShaker.MIN_RAND_SHAKE = 0.8;
com_isartdigital_ruby_utils_SmartShaker.MAX_RAND_SHAKE = 1;
com_isartdigital_services_deltaDNA_DeltaDNA.GAME_STARTED = "gameStarted";
com_isartdigital_services_deltaDNA_DeltaDNA.GAME_ENDED = "gameEnded";
com_isartdigital_services_deltaDNA_DeltaDNA.CLIENT_DEVICE = "clientDevice";
com_isartdigital_services_deltaDNA_DeltaDNA.NEW_PLAYER = "newPlayer";
com_isartdigital_services_deltaDNA_DeltaDNA.devices = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	if(__map_reserved.Android != null) {
		_g.setReserved("Android","ANDROID");
	} else {
		_g.h["Android"] = "ANDROID";
	}
	if(__map_reserved.iOS != null) {
		_g.setReserved("iOS","IOS");
	} else {
		_g.h["iOS"] = "IOS";
	}
	if(__map_reserved.BlackBerry != null) {
		_g.setReserved("BlackBerry","BLACKBERRY_MOBILE");
	} else {
		_g.h["BlackBerry"] = "BLACKBERRY_MOBILE";
	}
	if(__map_reserved["BlackBerry PlayBook"] != null) {
		_g.setReserved("BlackBerry PlayBook","BLACKBERRY_TABLET");
	} else {
		_g.h["BlackBerry PlayBook"] = "BLACKBERRY_TABLET";
	}
	if(__map_reserved.IEMobile != null) {
		_g.setReserved("IEMobile","WINDOWS_MOBILE");
	} else {
		_g.h["IEMobile"] = "WINDOWS_MOBILE";
	}
	if(__map_reserved.Desktop != null) {
		_g.setReserved("Desktop","PC_CLIENT");
	} else {
		_g.h["Desktop"] = "PC_CLIENT";
	}
	$r = _g;
	return $r;
}(this));
com_isartdigital_services_deltaDNA_DeltaDNA.list = [];
com_isartdigital_services_facebook_Facebook.params = { xfbml : true, version : "v2.8", cookie : true};
com_isartdigital_services_facebook_Facebook.permissions = { scope : "user_friends,email"};
com_isartdigital_services_facebook_Facebook.isFirstAttempt = true;
com_isartdigital_utils_events_EventType.GAME_LOOP = "gameLoop";
com_isartdigital_utils_events_EventType.RESIZE = "resize";
com_isartdigital_utils_events_EventType.ADDED = "added";
com_isartdigital_utils_events_EventType.REMOVED = "removed";
com_isartdigital_services_facebook_events_FacebookEventType.CONNECTED = "connected";
com_isartdigital_services_facebook_events_FacebookEventType.NOT_AUTHORIZED = "not_authorized";
com_isartdigital_services_facebook_events_FacebookEventType.UNKNOWN = "unknown";
com_isartdigital_services_monetization_Ads.TYPE_END = "end";
com_isartdigital_services_monetization_Ads.TYPE_CANCEL = "cancel";
com_isartdigital_services_monetization_Ads.TYPE_CLOSE = "close";
com_isartdigital_services_monetization_Ads.TYPE_CLICK = "click";
com_isartdigital_services_monetization_Ads.IMAGE = "image";
com_isartdigital_services_monetization_Ads.MOVIE = "movie";
com_isartdigital_services_monetization__$Ads_Ad.CROSS_SIZE = 20;
com_isartdigital_services_monetization__$Ads_Ad.QUIT_SIZE = 40;
com_isartdigital_services_monetization_HttpService.SERVICE_PATH = "://fbgame.isartdigital.com/2018_builder/pedago/broadcast/";
com_isartdigital_utils_Debug.QR_SIZE = 0.35;
com_isartdigital_utils_events_LoadEventType.COMPLETE = "complete";
com_isartdigital_utils_events_LoadEventType.LOADED = "load";
com_isartdigital_utils_events_LoadEventType.PROGRESS = "progress";
com_isartdigital_utils_events_LoadEventType.ERROR = "error";
com_isartdigital_utils_events_MouseEventType.MOUSE_MOVE = "mousemove";
com_isartdigital_utils_events_MouseEventType.MOUSE_DOWN = "mousedown";
com_isartdigital_utils_events_MouseEventType.MOUSE_OUT = "mouseout";
com_isartdigital_utils_events_MouseEventType.MOUSE_OVER = "mouseover";
com_isartdigital_utils_events_MouseEventType.MOUSE_UP = "mouseup";
com_isartdigital_utils_events_MouseEventType.MOUSE_UP_OUTSIDE = "mouseupoutside";
com_isartdigital_utils_events_MouseEventType.CLICK = "click";
com_isartdigital_utils_events_MouseEventType.RIGHT_DOWN = "rightdown";
com_isartdigital_utils_events_MouseEventType.RIGHT_UP = "rightup";
com_isartdigital_utils_events_MouseEventType.RIGHT_UP_OUTSIDE = "rightupoutside";
com_isartdigital_utils_events_MouseEventType.RIGHT_CLICK = "rightclick";
com_isartdigital_utils_events_TouchEventType.TOUCH_START = "touchstart";
com_isartdigital_utils_events_TouchEventType.TOUCH_MOVE = "touchmove";
com_isartdigital_utils_events_TouchEventType.TOUCH_END = "touchend";
com_isartdigital_utils_events_TouchEventType.TOUCH_END_OUTSIDE = "touchendoutside";
com_isartdigital_utils_events_TouchEventType.TAP = "tap";
com_isartdigital_utils_game_Camera.MIN_RAND_SHAKE = 0.8;
com_isartdigital_utils_game_Camera.MAX_RAND_SHAKE = 1;
com_isartdigital_utils_game_GameStage.SAFE_ZONE_WIDTH = 2048;
com_isartdigital_utils_game_GameStage.SAFE_ZONE_HEIGHT = 1366;
com_isartdigital_utils_game_clipping_ClippingManager.CELL_WIDTH = 400;
com_isartdigital_utils_game_clipping_ClippingManager.CELL_HEIGHT = 400;
com_isartdigital_utils_game_clipping_ClippingManager.MARGIN_X = 4;
com_isartdigital_utils_game_clipping_ClippingManager.MARGIN_Y = 4;
com_isartdigital_utils_game_factory_MovieClipAnimFactory.textureDigits = 4;
com_isartdigital_utils_game_pooling_PoolManager.pool = new haxe_ds_StringMap();
com_isartdigital_utils_save_DataBaseAction.CONNECT = "connexion";
com_isartdigital_utils_save_DataBaseAction.NEW_PLAYER = "newPlayer";
com_isartdigital_utils_save_DataBaseAction.NEW_BUILDING = "addBuilding";
com_isartdigital_utils_save_DataBaseAction.GET_BUILDINGS = "getBuildings";
com_isartdigital_utils_save_DataBaseAction.GET_REGIONS = "getRegions";
com_isartdigital_utils_save_DataBaseAction.MOVE_BUILDINGS = "releaseBuildingPosition";
com_isartdigital_utils_save_DataBaseAction.DESTROY_BUILDINGS = "destroyBuilding";
com_isartdigital_utils_save_DataBaseAction.MODE_BUILDINGS = "releaseBuildingMode";
com_isartdigital_utils_save_DataBaseAction.ADD_REGION = "addRegion";
com_isartdigital_utils_save_DataBaseAction.CHANGE_ENDTIME_BUILDING = "changeEndTimeBuilding";
com_isartdigital_utils_save_DataBaseAction.CHANGE_ENERGY = "changeEnergy";
com_isartdigital_utils_save_DataBaseAction.CHANGE_MAX_ENERGY = "changeMaxEnergy";
com_isartdigital_utils_save_DataBaseAction.CHECK_VALUE = "checkValue";
com_isartdigital_utils_save_DataBaseAction.FTUE_ADVANCE = "ftueNewStep";
com_isartdigital_utils_save_DataBaseAction.NEW_DESTRUCTIBLE = "addDestructible";
com_isartdigital_utils_save_DataBaseAction.MODE_DESTRUCTIBLE = "releaseDestructibleMode";
com_isartdigital_utils_save_DataBaseAction.DESTROY_DESTRUCTIBLE = "destroyDestructible";
com_isartdigital_utils_save_DataBaseAction.TIME = "time";
com_isartdigital_utils_save_DataBaseAction.GET_ALIEN = "getAlien";
com_isartdigital_utils_save_DataBaseAction.CHANGE_LEVEL = "changeXpLevel";
com_isartdigital_utils_save_DataBaseAction.CHANGE_BUILDING_LEVEL = "changeBuildingLevel";
com_isartdigital_utils_save_DataBaseAction.ADD_ALIEN = "addAlien";
com_isartdigital_utils_save_DataBaseAction.MODE_ALIEN = "modeAlien";
com_isartdigital_utils_save_DataBaseAction.CHANGE_ALIEN_IDBUILDING = "changeAlienIdBuilding";
com_isartdigital_utils_save_DataBaseAction.TYPE_SOFTCURRENCY = "softCurrency";
com_isartdigital_utils_save_DataBaseAction.TYPE_HARDCURRENCY = "hardCurrency";
com_isartdigital_utils_save_DataBaseAction.TYPE_RESSOURCE = "ressource";
com_isartdigital_utils_save_DataBaseAction.UPDATE_GENE = "updateGene";
com_isartdigital_utils_save_DataBaseAction.ADD_SCHEMA = "addSchema";
com_isartdigital_utils_save_DataBaseAction.UNLOCK_SCHEMA = "unlockSchema";
com_isartdigital_utils_save_DataBaseAction.START_UNLOCK_SCHEMA = "startUnlockSchema";
com_isartdigital_utils_save_DataBaseAction.GET_DECRYPT_TIME = "getSchemaTimeToDecrypt";
com_isartdigital_utils_system_DeviceCapabilities.SYSTEM_ANDROID = "Android";
com_isartdigital_utils_system_DeviceCapabilities.SYSTEM_IOS = "iOS";
com_isartdigital_utils_system_DeviceCapabilities.SYSTEM_BLACKBERRY = "BlackBerry";
com_isartdigital_utils_system_DeviceCapabilities.SYSTEM_BB_PLAYBOOK = "BlackBerry PlayBook";
com_isartdigital_utils_system_DeviceCapabilities.SYSTEM_WINDOWS_MOBILE = "IEMobile";
com_isartdigital_utils_system_DeviceCapabilities.SYSTEM_DESKTOP = "Desktop";
com_isartdigital_utils_system_DeviceCapabilities.ICON_SIZE = 0.11;
com_isartdigital_utils_system_DeviceCapabilities.TEXTURE_NO_SCALE = "";
com_isartdigital_utils_system_DeviceCapabilities.TEXTURE_HD = "hd";
com_isartdigital_utils_system_DeviceCapabilities.TEXTURE_MD = "md";
com_isartdigital_utils_system_DeviceCapabilities.TEXTURE_LD = "ld";
com_isartdigital_utils_system_DeviceCapabilities.texturesRatios = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	if(__map_reserved.hd != null) {
		_g.setReserved("hd",1);
	} else {
		_g.h["hd"] = 1;
	}
	if(__map_reserved.md != null) {
		_g.setReserved("md",0.5);
	} else {
		_g.h["md"] = 0.5;
	}
	if(__map_reserved.ld != null) {
		_g.setReserved("ld",0.25);
	} else {
		_g.h["ld"] = 0.25;
	}
	$r = _g;
	return $r;
}(this));
com_isartdigital_utils_system_DeviceCapabilities.textureRatio = 1;
com_isartdigital_utils_system_DeviceCapabilities.textureType = "";
com_isartdigital_utils_system_DeviceCapabilities.screenRatio = 1;
com_isartdigital_utils_ui_Button.UP = 0;
com_isartdigital_utils_ui_Button.OVER = 1;
com_isartdigital_utils_ui_Button.DOWN = 2;
com_isartdigital_utils_ui_UIPosition.LEFT = "left";
com_isartdigital_utils_ui_UIPosition.RIGHT = "right";
com_isartdigital_utils_ui_UIPosition.TOP = "top";
com_isartdigital_utils_ui_UIPosition.BOTTOM = "bottom";
com_isartdigital_utils_ui_UIPosition.TOP_LEFT = "topLeft";
com_isartdigital_utils_ui_UIPosition.TOP_RIGHT = "topRight";
com_isartdigital_utils_ui_UIPosition.BOTTOM_LEFT = "bottomLeft";
com_isartdigital_utils_ui_UIPosition.BOTTOM_RIGHT = "bottomRight";
com_isartdigital_utils_ui_UIPosition.FIT_WIDTH = "fitWidth";
com_isartdigital_utils_ui_UIPosition.FIT_HEIGHT = "fitHeight";
com_isartdigital_utils_ui_UIPosition.FIT_SCREEN = "fitScreen";
com_isartdigital_utils_ui_smart_TextSprite.parseText = com_isartdigital_utils_ui_smart_TextSprite.defaultParseText;
flump_library_Label.LABEL_ENTER = "labelEnter";
flump_library_Label.LABEL_EXIT = "labelExit";
flump_library_Label.LABEL_UPDATE = "labelUpdate";
haxe_ds_ObjectMap.count = 0;
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	if(__map_reserved.lt != null) {
		h.setReserved("lt","<");
	} else {
		h.h["lt"] = "<";
	}
	if(__map_reserved.gt != null) {
		h.setReserved("gt",">");
	} else {
		h.h["gt"] = ">";
	}
	if(__map_reserved.amp != null) {
		h.setReserved("amp","&");
	} else {
		h.h["amp"] = "&";
	}
	if(__map_reserved.quot != null) {
		h.setReserved("quot","\"");
	} else {
		h.h["quot"] = "\"";
	}
	if(__map_reserved.apos != null) {
		h.setReserved("apos","'");
	} else {
		h.h["apos"] = "'";
	}
	$r = h;
	return $r;
}(this));
js_Boot.__toStr = { }.toString;
pixi_flump_Resource.resources = new haxe_ds_StringMap();
com_isartdigital_ruby_Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=builder.js.map